Gramática

    0 $accept: programa $end

    1 programa: '{' sentencias '}'
    2         | '{' sentencias
    3         | sentencias '}'

    4 sentencias: sentencia
    5           | sentencias sentencia

    6 sentencia: declarativa ','
    7          | ejecutable ','

    8 declarativa: declaracion_variables
    9            | clase_declaration
   10            | objeto_declaration
   11            | interface_declaration
   12            | implement_declaration
   13            | distributed_method_implementation
   14            | funcion_declaration

   15 ejecutable: asignacion
   16           | invocacion
   17           | seleccion
   18           | print
   19           | bucle_for
   20           | acceso_atributo
   21           | retorno

   22 declaracion_variables: tipo lista_variables
   23                      | error lista_variables

   24 lista_variables: lista_variables ';' ID
   25                | ID
   26                | ID error ','

   27 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}'

   28 interface_declaration: INTERFACE ID '{' interface_metodos '}'

   29 interface_metodos: interface_metodos interface_metodo_declaration
   30                  | /* vacío */

   31 encabezado_funcion: VOID ID

   32 interface_metodo_declaration: encabezado_funcion '(' parametro ')' ','

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

   34 atributos: atributos atributo_declaration
   35          | /* vacío */

   36 atributo_declaration: declaracion_variables ','

   37 metodos_clase: metodos_clase metodo_declaration
   38              | /* vacío */

   39 metodo_declaration: funcion_declaration ','

   40 funcion_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_metodo '}'
   41                    | /* vacío */

   42 herencia_composicion: herencia_composicion ID ','
   43                     | /* vacío */

   44 sentencias_metodo: sentencias_metodo declaracion_variables ','
   45                  | sentencias_metodo ejecutable ','
   46                  | sentencias_metodo local_function_declaration ','
   47                  | /* vacío */

   48 local_function_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_funcion_local '}'

   49 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ','
   50                         | sentencias_funcion_local ejecutable ','
   51                         | sentencias_funcion_local local_function_declaration ','
   52                         | /* vacío */

   53 parametro: tipo ID
   54          | ID
   55          | parametro ';' tipo ID
   56          | /* vacío */

   57 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}'

   58 retorno: RETURN

   59 objeto_declaration: ID lista_objetos

   60 lista_objetos: lista_objetos ';' objeto
   61              | objeto

   62 objeto: ID

   63 asignacion: ID asignador expresion
   64           | ID '.' ID asignador expresion
   65           | ID asignador
   66           | ID '.' ID asignador
   67           | ID asignador '-'

   68 asignador: '='
   69          | PLUS_EQUAL

   70 invocacion: ID '(' argumentos ')'
   71           | ID '.' ID '(' argumentos ')'

   72 argumentos: expresion
   73           | argumentos ';' expresion
   74           | /* vacío */

   75 seleccion: IF '(' condicion ')' bloque_if ELSE bloque_else END_IF
   76          | IF '(' condicion ')' bloque_if END_IF
   77          | IF '(' condicion ')' bloque_if
   78          | IF '(' condicion ')' bloque_if ELSE bloque_else

   79 bloque_if: bloque_sentencias

   80 bloque_else: bloque_sentencias

   81 condicion: expresion comparador expresion
   82          | expresion comparador
   83          | comparador expresion
   84          | expresion

   85 comparador: '<'
   86           | '>'
   87           | LESS_EQUAL
   88           | GREATER_EQUAL
   89           | EQUAL
   90           | NOT_EQUAL

   91 bloque_sentencias: sentencia
   92                  | '{' sentencias '}'

   93 print: PRINT STRING
   94      | PRINT
   95      | STRING

   96 bucle_for: encabezado_for '(' argumento_bucle_for ')' bloque_sentencias
   97          | encabezado_for '(' argumento_bucle_for bloque_sentencias
   98          | encabezado_for argumento_bucle_for ')' bloque_sentencias

   99 encabezado_for: FOR ID IN RANGE
  100               | ID IN RANGE
  101               | FOR IN RANGE
  102               | FOR ID IN
  103               | FOR ID RANGE

  104 argumento_bucle_for: constante ';' constante ';' constante
  105                    | constante ';' constante
  106                    | constante
  107                    | /* vacío */

  108 acceso_atributo: ID '.' ID

  109 expresion: expresion '+' termino
  110          | expresion '-' termino
  111          | tipo '(' expresion ')'
  112          | expresion '+' '(' expresion_parentesis ')'
  113          | expresion '-' '(' expresion_parentesis ')'
  114          | '(' expresion_parentesis ')'
  115          | termino

  116 expresion_parentesis: '(' expresion_parentesis ')'
  117                     | termino '+' termino
  118                     | termino '-' termino
  119                     | termino

  120 termino: factor
  121        | termino '*' factor
  122        | termino '/' factor

  123 factor: ID
  124       | '-' constante
  125       | constante

  126 constante: CTE_SHORT
  127          | CTE_DOUBLE
  128          | CTE_UINT

  129 tipo: SHORT
  130     | UINT
  131     | DOUBLE


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 32 40 48 70 71 75 76 77 78 96 97 111 112 113 114 116
')' (41) 32 40 48 70 71 75 76 77 78 96 98 111 112 113 114 116
'*' (42) 121
'+' (43) 109 112 117
',' (44) 6 7 26 32 36 39 42 44 45 46 49 50 51
'-' (45) 67 110 113 118 124
'.' (46) 64 66 71 108
'/' (47) 122
':' (58) 57
';' (59) 24 55 60 73 104 105
'<' (60) 85
'=' (61) 68
'>' (62) 86
'{' (123) 1 2 27 28 33 40 48 57 92
'}' (125) 1 3 27 28 33 40 48 57 92
error (256) 23 26
SHORT (258) 129
UINT (259) 130
DOUBLE (260) 131
VOID (261) 31
CLASS (262) 27 33
INTERFACE (263) 28
IMPLEMENT (264) 33
IMPL (265) 57
IF (266) 75 76 77 78
ELSE (267) 75 78
END_IF (268) 75 76
PRINT (269) 93 94
FOR (270) 57 99 101 102 103
IN (271) 99 100 101 102
RANGE (272) 99 100 101 103
RETURN (273) 58
LESS_EQUAL (274) 87
GREATER_EQUAL (275) 88
EQUAL (276) 89
NOT_EQUAL (277) 90
PLUS_EQUAL (278) 69
ID (279) 24 25 26 27 28 31 33 42 53 54 55 57 59 62 63 64 65 66 67 70
    71 99 100 102 103 108 123
STRING (280) 93 95
CTE_SHORT (281) 126
CTE_UINT (282) 128
CTE_DOUBLE (283) 127


No terminales con las reglas donde aparecen

$accept (44)
    en la izquierda: 0
programa (45)
    en la izquierda: 1 2 3, en la derecha: 0
sentencias (46)
    en la izquierda: 4 5, en la derecha: 1 2 3 5 92
sentencia (47)
    en la izquierda: 6 7, en la derecha: 4 5 91
declarativa (48)
    en la izquierda: 8 9 10 11 12 13 14, en la derecha: 6
ejecutable (49)
    en la izquierda: 15 16 17 18 19 20 21, en la derecha: 7 45 50
declaracion_variables (50)
    en la izquierda: 22 23, en la derecha: 8 36 44 49
lista_variables (51)
    en la izquierda: 24 25 26, en la derecha: 22 23 24
clase_declaration (52)
    en la izquierda: 27, en la derecha: 9
interface_declaration (53)
    en la izquierda: 28, en la derecha: 11
interface_metodos (54)
    en la izquierda: 29 30, en la derecha: 28 29
encabezado_funcion (55)
    en la izquierda: 31, en la derecha: 32 40 48
interface_metodo_declaration (56)
    en la izquierda: 32, en la derecha: 29
implement_declaration (57)
    en la izquierda: 33, en la derecha: 12
atributos (58)
    en la izquierda: 34 35, en la derecha: 27 34
atributo_declaration (59)
    en la izquierda: 36, en la derecha: 34
metodos_clase (60)
    en la izquierda: 37 38, en la derecha: 27 33 37 57
metodo_declaration (61)
    en la izquierda: 39, en la derecha: 37
funcion_declaration (62)
    en la izquierda: 40 41, en la derecha: 14 39
herencia_composicion (63)
    en la izquierda: 42 43, en la derecha: 27 33 42
sentencias_metodo (64)
    en la izquierda: 44 45 46 47, en la derecha: 40 44 45 46
local_function_declaration (65)
    en la izquierda: 48, en la derecha: 46 51
sentencias_funcion_local (66)
    en la izquierda: 49 50 51 52, en la derecha: 48 49 50 51
parametro (67)
    en la izquierda: 53 54 55 56, en la derecha: 32 40 48 55
distributed_method_implementation (68)
    en la izquierda: 57, en la derecha: 13
retorno (69)
    en la izquierda: 58, en la derecha: 21
objeto_declaration (70)
    en la izquierda: 59, en la derecha: 10
lista_objetos (71)
    en la izquierda: 60 61, en la derecha: 59 60
objeto (72)
    en la izquierda: 62, en la derecha: 60 61
asignacion (73)
    en la izquierda: 63 64 65 66 67, en la derecha: 15
asignador (74)
    en la izquierda: 68 69, en la derecha: 63 64 65 66 67
invocacion (75)
    en la izquierda: 70 71, en la derecha: 16
argumentos (76)
    en la izquierda: 72 73 74, en la derecha: 70 71 73
seleccion (77)
    en la izquierda: 75 76 77 78, en la derecha: 17
bloque_if (78)
    en la izquierda: 79, en la derecha: 75 76 77 78
bloque_else (79)
    en la izquierda: 80, en la derecha: 75 78
condicion (80)
    en la izquierda: 81 82 83 84, en la derecha: 75 76 77 78
comparador (81)
    en la izquierda: 85 86 87 88 89 90, en la derecha: 81 82 83
bloque_sentencias (82)
    en la izquierda: 91 92, en la derecha: 79 80 96 97 98
print (83)
    en la izquierda: 93 94 95, en la derecha: 18
bucle_for (84)
    en la izquierda: 96 97 98, en la derecha: 19
encabezado_for (85)
    en la izquierda: 99 100 101 102 103, en la derecha: 96 97 98
argumento_bucle_for (86)
    en la izquierda: 104 105 106 107, en la derecha: 96 97 98
acceso_atributo (87)
    en la izquierda: 108, en la derecha: 20
expresion (88)
    en la izquierda: 109 110 111 112 113 114 115, en la derecha: 63
    64 72 73 81 82 83 84 109 110 111 112 113
expresion_parentesis (89)
    en la izquierda: 116 117 118 119, en la derecha: 112 113 114 116
termino (90)
    en la izquierda: 120 121 122, en la derecha: 109 110 115 117 118
    119 121 122
factor (91)
    en la izquierda: 123 124 125, en la derecha: 120 121 122
constante (92)
    en la izquierda: 126 127 128, en la derecha: 104 105 106 124 125
tipo (93)
    en la izquierda: 129 130 131, en la derecha: 22 53 55 111


estado 0

    0 $accept: . programa $end

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 15

    ','  reduce usando la regla 41 (funcion_declaration)

    programa                           ir al estado 16
    sentencias                         ir al estado 17
    sentencia                          ir al estado 18
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 1

   23 declaracion_variables: error . lista_variables

    ID  desplazar e ir al estado 38

    lista_variables  ir al estado 39


estado 2

  129 tipo: SHORT .

    $default  reduce usando la regla 129 (tipo)


estado 3

  130 tipo: UINT .

    $default  reduce usando la regla 130 (tipo)


estado 4

  131 tipo: DOUBLE .

    $default  reduce usando la regla 131 (tipo)


estado 5

   31 encabezado_funcion: VOID . ID

    ID  desplazar e ir al estado 40


estado 6

   27 clase_declaration: CLASS . ID '{' atributos metodos_clase herencia_composicion '}'
   33 implement_declaration: CLASS . ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 41


estado 7

   28 interface_declaration: INTERFACE . ID '{' interface_metodos '}'

    ID  desplazar e ir al estado 42


estado 8

   57 distributed_method_implementation: IMPL . FOR ID ':' '{' metodos_clase '}'

    FOR  desplazar e ir al estado 43


estado 9

   75 seleccion: IF . '(' condicion ')' bloque_if ELSE bloque_else END_IF
   76          | IF . '(' condicion ')' bloque_if END_IF
   77          | IF . '(' condicion ')' bloque_if
   78          | IF . '(' condicion ')' bloque_if ELSE bloque_else

    '('  desplazar e ir al estado 44


estado 10

   93 print: PRINT . STRING
   94      | PRINT .

    STRING  desplazar e ir al estado 45

    $default  reduce usando la regla 94 (print)


estado 11

   99 encabezado_for: FOR . ID IN RANGE
  101               | FOR . IN RANGE
  102               | FOR . ID IN
  103               | FOR . ID RANGE

    IN  desplazar e ir al estado 46
    ID  desplazar e ir al estado 47


estado 12

   58 retorno: RETURN .

    $default  reduce usando la regla 58 (retorno)


estado 13

   59 objeto_declaration: ID . lista_objetos
   63 asignacion: ID . asignador expresion
   64           | ID . '.' ID asignador expresion
   65           | ID . asignador
   66           | ID . '.' ID asignador
   67           | ID . asignador '-'
   70 invocacion: ID . '(' argumentos ')'
   71           | ID . '.' ID '(' argumentos ')'
  100 encabezado_for: ID . IN RANGE
  108 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 48
    PLUS_EQUAL  desplazar e ir al estado 49
    ID          desplazar e ir al estado 50
    '='         desplazar e ir al estado 51
    '.'         desplazar e ir al estado 52
    '('         desplazar e ir al estado 53

    lista_objetos  ir al estado 54
    objeto         ir al estado 55
    asignador      ir al estado 56


estado 14

   95 print: STRING .

    $default  reduce usando la regla 95 (print)


estado 15

    1 programa: '{' . sentencias '}'
    2         | '{' . sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencias                         ir al estado 57
    sentencia                          ir al estado 18
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 16

    0 $accept: programa . $end

    $end  desplazar e ir al estado 58


estado 17

    3 programa: sentencias . '}'
    5 sentencias: sentencias . sentencia

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '}'        desplazar e ir al estado 59

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 60
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 18

    4 sentencias: sentencia .

    $default  reduce usando la regla 4 (sentencias)


estado 19

    6 sentencia: declarativa . ','

    ','  desplazar e ir al estado 61


estado 20

    7 sentencia: ejecutable . ','

    ','  desplazar e ir al estado 62


estado 21

    8 declarativa: declaracion_variables .

    $default  reduce usando la regla 8 (declarativa)


estado 22

    9 declarativa: clase_declaration .

    $default  reduce usando la regla 9 (declarativa)


estado 23

   11 declarativa: interface_declaration .

    $default  reduce usando la regla 11 (declarativa)


estado 24

   40 funcion_declaration: encabezado_funcion . '(' parametro ')' '{' sentencias_metodo '}'

    '('  desplazar e ir al estado 63


estado 25

   12 declarativa: implement_declaration .

    $default  reduce usando la regla 12 (declarativa)


estado 26

   14 declarativa: funcion_declaration .

    $default  reduce usando la regla 14 (declarativa)


estado 27

   13 declarativa: distributed_method_implementation .

    $default  reduce usando la regla 13 (declarativa)


estado 28

   21 ejecutable: retorno .

    $default  reduce usando la regla 21 (ejecutable)


estado 29

   10 declarativa: objeto_declaration .

    $default  reduce usando la regla 10 (declarativa)


estado 30

   15 ejecutable: asignacion .

    $default  reduce usando la regla 15 (ejecutable)


estado 31

   16 ejecutable: invocacion .

    $default  reduce usando la regla 16 (ejecutable)


estado 32

   17 ejecutable: seleccion .

    $default  reduce usando la regla 17 (ejecutable)


estado 33

   18 ejecutable: print .

    $default  reduce usando la regla 18 (ejecutable)


estado 34

   19 ejecutable: bucle_for .

    $default  reduce usando la regla 19 (ejecutable)


estado 35

   96 bucle_for: encabezado_for . '(' argumento_bucle_for ')' bloque_sentencias
   97          | encabezado_for . '(' argumento_bucle_for bloque_sentencias
   98          | encabezado_for . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 67

    $default  reduce usando la regla 107 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 68
    constante            ir al estado 69


estado 36

   20 ejecutable: acceso_atributo .

    $default  reduce usando la regla 20 (ejecutable)


estado 37

   22 declaracion_variables: tipo . lista_variables

    ID  desplazar e ir al estado 38

    lista_variables  ir al estado 70


estado 38

   25 lista_variables: ID .
   26                | ID . error ','

    error  desplazar e ir al estado 71

    ','  reduce usando la regla 25 (lista_variables)
    ';'  reduce usando la regla 25 (lista_variables)


estado 39

   23 declaracion_variables: error lista_variables .
   24 lista_variables: lista_variables . ';' ID

    ';'  desplazar e ir al estado 72

    $default  reduce usando la regla 23 (declaracion_variables)


estado 40

   31 encabezado_funcion: VOID ID .

    $default  reduce usando la regla 31 (encabezado_funcion)


estado 41

   27 clase_declaration: CLASS ID . '{' atributos metodos_clase herencia_composicion '}'
   33 implement_declaration: CLASS ID . IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    IMPLEMENT  desplazar e ir al estado 73
    '{'        desplazar e ir al estado 74


estado 42

   28 interface_declaration: INTERFACE ID . '{' interface_metodos '}'

    '{'  desplazar e ir al estado 75


estado 43

   57 distributed_method_implementation: IMPL FOR . ID ':' '{' metodos_clase '}'

    ID  desplazar e ir al estado 76


estado 44

   75 seleccion: IF '(' . condicion ')' bloque_if ELSE bloque_else END_IF
   76          | IF '(' . condicion ')' bloque_if END_IF
   77          | IF '(' . condicion ')' bloque_if
   78          | IF '(' . condicion ')' bloque_if ELSE bloque_else

    SHORT          desplazar e ir al estado 2
    UINT           desplazar e ir al estado 3
    DOUBLE         desplazar e ir al estado 4
    LESS_EQUAL     desplazar e ir al estado 77
    GREATER_EQUAL  desplazar e ir al estado 78
    EQUAL          desplazar e ir al estado 79
    NOT_EQUAL      desplazar e ir al estado 80
    ID             desplazar e ir al estado 81
    CTE_SHORT      desplazar e ir al estado 64
    CTE_UINT       desplazar e ir al estado 65
    CTE_DOUBLE     desplazar e ir al estado 66
    '('            desplazar e ir al estado 82
    '-'            desplazar e ir al estado 83
    '<'            desplazar e ir al estado 84
    '>'            desplazar e ir al estado 85

    condicion   ir al estado 86
    comparador  ir al estado 87
    expresion   ir al estado 88
    termino     ir al estado 89
    factor      ir al estado 90
    constante   ir al estado 91
    tipo        ir al estado 92


estado 45

   93 print: PRINT STRING .

    $default  reduce usando la regla 93 (print)


estado 46

  101 encabezado_for: FOR IN . RANGE

    RANGE  desplazar e ir al estado 93


estado 47

   99 encabezado_for: FOR ID . IN RANGE
  102               | FOR ID . IN
  103               | FOR ID . RANGE

    IN     desplazar e ir al estado 94
    RANGE  desplazar e ir al estado 95


estado 48

  100 encabezado_for: ID IN . RANGE

    RANGE  desplazar e ir al estado 96


estado 49

   69 asignador: PLUS_EQUAL .

    $default  reduce usando la regla 69 (asignador)


estado 50

   62 objeto: ID .

    $default  reduce usando la regla 62 (objeto)


estado 51

   68 asignador: '=' .

    $default  reduce usando la regla 68 (asignador)


estado 52

   64 asignacion: ID '.' . ID asignador expresion
   66           | ID '.' . ID asignador
   71 invocacion: ID '.' . ID '(' argumentos ')'
  108 acceso_atributo: ID '.' . ID

    ID  desplazar e ir al estado 97


estado 53

   70 invocacion: ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 82
    '-'         desplazar e ir al estado 83

    $default  reduce usando la regla 74 (argumentos)

    argumentos  ir al estado 98
    expresion   ir al estado 99
    termino     ir al estado 89
    factor      ir al estado 90
    constante   ir al estado 91
    tipo        ir al estado 92


estado 54

   59 objeto_declaration: ID lista_objetos .
   60 lista_objetos: lista_objetos . ';' objeto

    ';'  desplazar e ir al estado 100

    $default  reduce usando la regla 59 (objeto_declaration)


estado 55

   61 lista_objetos: objeto .

    $default  reduce usando la regla 61 (lista_objetos)


estado 56

   63 asignacion: ID asignador . expresion
   65           | ID asignador .
   67           | ID asignador . '-'

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 82
    '-'         desplazar e ir al estado 101

    $default  reduce usando la regla 65 (asignacion)

    expresion  ir al estado 102
    termino    ir al estado 89
    factor     ir al estado 90
    constante  ir al estado 91
    tipo       ir al estado 92


estado 57

    1 programa: '{' sentencias . '}'
    2         | '{' sentencias .
    5 sentencias: sentencias . sentencia

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '}'        desplazar e ir al estado 103

    $end  reduce usando la regla 2 (programa)
    ','   reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 60
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 58

    0 $accept: programa $end .

    $default  aceptar


estado 59

    3 programa: sentencias '}' .

    $default  reduce usando la regla 3 (programa)


estado 60

    5 sentencias: sentencias sentencia .

    $default  reduce usando la regla 5 (sentencias)


estado 61

    6 sentencia: declarativa ',' .

    $default  reduce usando la regla 6 (sentencia)


estado 62

    7 sentencia: ejecutable ',' .

    $default  reduce usando la regla 7 (sentencia)


estado 63

   40 funcion_declaration: encabezado_funcion '(' . parametro ')' '{' sentencias_metodo '}'

    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    ID      desplazar e ir al estado 104

    $default  reduce usando la regla 56 (parametro)

    parametro  ir al estado 105
    tipo       ir al estado 106


estado 64

  126 constante: CTE_SHORT .

    $default  reduce usando la regla 126 (constante)


estado 65

  128 constante: CTE_UINT .

    $default  reduce usando la regla 128 (constante)


estado 66

  127 constante: CTE_DOUBLE .

    $default  reduce usando la regla 127 (constante)


estado 67

   96 bucle_for: encabezado_for '(' . argumento_bucle_for ')' bloque_sentencias
   97          | encabezado_for '(' . argumento_bucle_for bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66

    $default  reduce usando la regla 107 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 107
    constante            ir al estado 69


estado 68

   98 bucle_for: encabezado_for argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 108


estado 69

  104 argumento_bucle_for: constante . ';' constante ';' constante
  105                    | constante . ';' constante
  106                    | constante .

    ';'  desplazar e ir al estado 109

    $default  reduce usando la regla 106 (argumento_bucle_for)


estado 70

   22 declaracion_variables: tipo lista_variables .
   24 lista_variables: lista_variables . ';' ID

    ';'  desplazar e ir al estado 72

    $default  reduce usando la regla 22 (declaracion_variables)


estado 71

   26 lista_variables: ID error . ','

    ','  desplazar e ir al estado 110


estado 72

   24 lista_variables: lista_variables ';' . ID

    ID  desplazar e ir al estado 111


estado 73

   33 implement_declaration: CLASS ID IMPLEMENT . ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 112


estado 74

   27 clase_declaration: CLASS ID '{' . atributos metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 35 (atributos)

    atributos  ir al estado 113


estado 75

   28 interface_declaration: INTERFACE ID '{' . interface_metodos '}'

    $default  reduce usando la regla 30 (interface_metodos)

    interface_metodos  ir al estado 114


estado 76

   57 distributed_method_implementation: IMPL FOR ID . ':' '{' metodos_clase '}'

    ':'  desplazar e ir al estado 115


estado 77

   87 comparador: LESS_EQUAL .

    $default  reduce usando la regla 87 (comparador)


estado 78

   88 comparador: GREATER_EQUAL .

    $default  reduce usando la regla 88 (comparador)


estado 79

   89 comparador: EQUAL .

    $default  reduce usando la regla 89 (comparador)


estado 80

   90 comparador: NOT_EQUAL .

    $default  reduce usando la regla 90 (comparador)


estado 81

  123 factor: ID .

    $default  reduce usando la regla 123 (factor)


estado 82

  114 expresion: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 116
    '-'         desplazar e ir al estado 83

    expresion_parentesis  ir al estado 117
    termino               ir al estado 118
    factor                ir al estado 90
    constante             ir al estado 91


estado 83

  124 factor: '-' . constante

    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66

    constante  ir al estado 119


estado 84

   85 comparador: '<' .

    $default  reduce usando la regla 85 (comparador)


estado 85

   86 comparador: '>' .

    $default  reduce usando la regla 86 (comparador)


estado 86

   75 seleccion: IF '(' condicion . ')' bloque_if ELSE bloque_else END_IF
   76          | IF '(' condicion . ')' bloque_if END_IF
   77          | IF '(' condicion . ')' bloque_if
   78          | IF '(' condicion . ')' bloque_if ELSE bloque_else

    ')'  desplazar e ir al estado 120


estado 87

   83 condicion: comparador . expresion

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 82
    '-'         desplazar e ir al estado 83

    expresion  ir al estado 121
    termino    ir al estado 89
    factor     ir al estado 90
    constante  ir al estado 91
    tipo       ir al estado 92


estado 88

   81 condicion: expresion . comparador expresion
   82          | expresion . comparador
   84          | expresion .
  109 expresion: expresion . '+' termino
  110          | expresion . '-' termino
  112          | expresion . '+' '(' expresion_parentesis ')'
  113          | expresion . '-' '(' expresion_parentesis ')'

    LESS_EQUAL     desplazar e ir al estado 77
    GREATER_EQUAL  desplazar e ir al estado 78
    EQUAL          desplazar e ir al estado 79
    NOT_EQUAL      desplazar e ir al estado 80
    '-'            desplazar e ir al estado 122
    '<'            desplazar e ir al estado 84
    '>'            desplazar e ir al estado 85
    '+'            desplazar e ir al estado 123

    $default  reduce usando la regla 84 (condicion)

    comparador  ir al estado 124


estado 89

  115 expresion: termino .
  121 termino: termino . '*' factor
  122        | termino . '/' factor

    '*'  desplazar e ir al estado 125
    '/'  desplazar e ir al estado 126

    $default  reduce usando la regla 115 (expresion)


estado 90

  120 termino: factor .

    $default  reduce usando la regla 120 (termino)


estado 91

  125 factor: constante .

    $default  reduce usando la regla 125 (factor)


estado 92

  111 expresion: tipo . '(' expresion ')'

    '('  desplazar e ir al estado 127


estado 93

  101 encabezado_for: FOR IN RANGE .

    $default  reduce usando la regla 101 (encabezado_for)


estado 94

   99 encabezado_for: FOR ID IN . RANGE
  102               | FOR ID IN .

    RANGE  desplazar e ir al estado 128

    $default  reduce usando la regla 102 (encabezado_for)


estado 95

  103 encabezado_for: FOR ID RANGE .

    $default  reduce usando la regla 103 (encabezado_for)


estado 96

  100 encabezado_for: ID IN RANGE .

    $default  reduce usando la regla 100 (encabezado_for)


estado 97

   64 asignacion: ID '.' ID . asignador expresion
   66           | ID '.' ID . asignador
   71 invocacion: ID '.' ID . '(' argumentos ')'
  108 acceso_atributo: ID '.' ID .

    PLUS_EQUAL  desplazar e ir al estado 49
    '='         desplazar e ir al estado 51
    '('         desplazar e ir al estado 129

    $default  reduce usando la regla 108 (acceso_atributo)

    asignador  ir al estado 130


estado 98

   70 invocacion: ID '(' argumentos . ')'
   73 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 131
    ')'  desplazar e ir al estado 132


estado 99

   72 argumentos: expresion .
  109 expresion: expresion . '+' termino
  110          | expresion . '-' termino
  112          | expresion . '+' '(' expresion_parentesis ')'
  113          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 122
    '+'  desplazar e ir al estado 123

    $default  reduce usando la regla 72 (argumentos)


estado 100

   60 lista_objetos: lista_objetos ';' . objeto

    ID  desplazar e ir al estado 50

    objeto  ir al estado 133


estado 101

   67 asignacion: ID asignador '-' .
  124 factor: '-' . constante

    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66

    $default  reduce usando la regla 67 (asignacion)

    constante  ir al estado 119


estado 102

   63 asignacion: ID asignador expresion .
  109 expresion: expresion . '+' termino
  110          | expresion . '-' termino
  112          | expresion . '+' '(' expresion_parentesis ')'
  113          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 122
    '+'  desplazar e ir al estado 123

    $default  reduce usando la regla 63 (asignacion)


estado 103

    1 programa: '{' sentencias '}' .

    $default  reduce usando la regla 1 (programa)


estado 104

   54 parametro: ID .

    $default  reduce usando la regla 54 (parametro)


estado 105

   40 funcion_declaration: encabezado_funcion '(' parametro . ')' '{' sentencias_metodo '}'
   55 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 134
    ')'  desplazar e ir al estado 135


estado 106

   53 parametro: tipo . ID

    ID  desplazar e ir al estado 136


estado 107

   96 bucle_for: encabezado_for '(' argumento_bucle_for . ')' bloque_sentencias
   97          | encabezado_for '(' argumento_bucle_for . bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 137
    ')'        desplazar e ir al estado 138

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 140
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 108

   98 bucle_for: encabezado_for argumento_bucle_for ')' . bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 137

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 141
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 109

  104 argumento_bucle_for: constante ';' . constante ';' constante
  105                    | constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66

    constante  ir al estado 142


estado 110

   26 lista_variables: ID error ',' .

    $default  reduce usando la regla 26 (lista_variables)


estado 111

   24 lista_variables: lista_variables ';' ID .

    $default  reduce usando la regla 24 (lista_variables)


estado 112

   33 implement_declaration: CLASS ID IMPLEMENT ID . '{' metodos_clase herencia_composicion '}'

    '{'  desplazar e ir al estado 143


estado 113

   27 clase_declaration: CLASS ID '{' atributos . metodos_clase herencia_composicion '}'
   34 atributos: atributos . atributo_declaration

    error   desplazar e ir al estado 1
    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4

    VOID  reduce usando la regla 38 (metodos_clase)
    ID    reduce usando la regla 38 (metodos_clase)
    '}'   reduce usando la regla 38 (metodos_clase)
    ','   reduce usando la regla 38 (metodos_clase)

    declaracion_variables  ir al estado 144
    atributo_declaration   ir al estado 145
    metodos_clase          ir al estado 146
    tipo                   ir al estado 37


estado 114

   28 interface_declaration: INTERFACE ID '{' interface_metodos . '}'
   29 interface_metodos: interface_metodos . interface_metodo_declaration

    VOID  desplazar e ir al estado 5
    '}'   desplazar e ir al estado 147

    encabezado_funcion            ir al estado 148
    interface_metodo_declaration  ir al estado 149


estado 115

   57 distributed_method_implementation: IMPL FOR ID ':' . '{' metodos_clase '}'

    '{'  desplazar e ir al estado 150


estado 116

  116 expresion_parentesis: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 116
    '-'         desplazar e ir al estado 83

    expresion_parentesis  ir al estado 151
    termino               ir al estado 118
    factor                ir al estado 90
    constante             ir al estado 91


estado 117

  114 expresion: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 152


estado 118

  117 expresion_parentesis: termino . '+' termino
  118                     | termino . '-' termino
  119                     | termino .
  121 termino: termino . '*' factor
  122        | termino . '/' factor

    '-'  desplazar e ir al estado 153
    '+'  desplazar e ir al estado 154
    '*'  desplazar e ir al estado 125
    '/'  desplazar e ir al estado 126

    $default  reduce usando la regla 119 (expresion_parentesis)


estado 119

  124 factor: '-' constante .

    $default  reduce usando la regla 124 (factor)


estado 120

   75 seleccion: IF '(' condicion ')' . bloque_if ELSE bloque_else END_IF
   76          | IF '(' condicion ')' . bloque_if END_IF
   77          | IF '(' condicion ')' . bloque_if
   78          | IF '(' condicion ')' . bloque_if ELSE bloque_else

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 137

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_if                          ir al estado 155
    bloque_sentencias                  ir al estado 156
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 121

   83 condicion: comparador expresion .
  109 expresion: expresion . '+' termino
  110          | expresion . '-' termino
  112          | expresion . '+' '(' expresion_parentesis ')'
  113          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 122
    '+'  desplazar e ir al estado 123

    $default  reduce usando la regla 83 (condicion)


estado 122

  110 expresion: expresion '-' . termino
  113          | expresion '-' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 157
    '-'         desplazar e ir al estado 83

    termino    ir al estado 158
    factor     ir al estado 90
    constante  ir al estado 91


estado 123

  109 expresion: expresion '+' . termino
  112          | expresion '+' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 159
    '-'         desplazar e ir al estado 83

    termino    ir al estado 160
    factor     ir al estado 90
    constante  ir al estado 91


estado 124

   81 condicion: expresion comparador . expresion
   82          | expresion comparador .

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 82
    '-'         desplazar e ir al estado 83

    $default  reduce usando la regla 82 (condicion)

    expresion  ir al estado 161
    termino    ir al estado 89
    factor     ir al estado 90
    constante  ir al estado 91
    tipo       ir al estado 92


estado 125

  121 termino: termino '*' . factor

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '-'         desplazar e ir al estado 83

    factor     ir al estado 162
    constante  ir al estado 91


estado 126

  122 termino: termino '/' . factor

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '-'         desplazar e ir al estado 83

    factor     ir al estado 163
    constante  ir al estado 91


estado 127

  111 expresion: tipo '(' . expresion ')'

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 82
    '-'         desplazar e ir al estado 83

    expresion  ir al estado 164
    termino    ir al estado 89
    factor     ir al estado 90
    constante  ir al estado 91
    tipo       ir al estado 92


estado 128

   99 encabezado_for: FOR ID IN RANGE .

    $default  reduce usando la regla 99 (encabezado_for)


estado 129

   71 invocacion: ID '.' ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 82
    '-'         desplazar e ir al estado 83

    $default  reduce usando la regla 74 (argumentos)

    argumentos  ir al estado 165
    expresion   ir al estado 99
    termino     ir al estado 89
    factor      ir al estado 90
    constante   ir al estado 91
    tipo        ir al estado 92


estado 130

   64 asignacion: ID '.' ID asignador . expresion
   66           | ID '.' ID asignador .

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 82
    '-'         desplazar e ir al estado 83

    $default  reduce usando la regla 66 (asignacion)

    expresion  ir al estado 166
    termino    ir al estado 89
    factor     ir al estado 90
    constante  ir al estado 91
    tipo       ir al estado 92


estado 131

   73 argumentos: argumentos ';' . expresion

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 82
    '-'         desplazar e ir al estado 83

    expresion  ir al estado 167
    termino    ir al estado 89
    factor     ir al estado 90
    constante  ir al estado 91
    tipo       ir al estado 92


estado 132

   70 invocacion: ID '(' argumentos ')' .

    $default  reduce usando la regla 70 (invocacion)


estado 133

   60 lista_objetos: lista_objetos ';' objeto .

    $default  reduce usando la regla 60 (lista_objetos)


estado 134

   55 parametro: parametro ';' . tipo ID

    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4

    tipo  ir al estado 168


estado 135

   40 funcion_declaration: encabezado_funcion '(' parametro ')' . '{' sentencias_metodo '}'

    '{'  desplazar e ir al estado 169


estado 136

   53 parametro: tipo ID .

    $default  reduce usando la regla 53 (parametro)


estado 137

   92 bloque_sentencias: '{' . sentencias '}'

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencias                         ir al estado 170
    sentencia                          ir al estado 18
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 138

   96 bucle_for: encabezado_for '(' argumento_bucle_for ')' . bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 137

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 171
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 139

   91 bloque_sentencias: sentencia .

    $default  reduce usando la regla 91 (bloque_sentencias)


estado 140

   97 bucle_for: encabezado_for '(' argumento_bucle_for bloque_sentencias .

    $default  reduce usando la regla 97 (bucle_for)


estado 141

   98 bucle_for: encabezado_for argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 98 (bucle_for)


estado 142

  104 argumento_bucle_for: constante ';' constante . ';' constante
  105                    | constante ';' constante .

    ';'  desplazar e ir al estado 172

    $default  reduce usando la regla 105 (argumento_bucle_for)


estado 143

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' . metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 38 (metodos_clase)

    metodos_clase  ir al estado 173


estado 144

   36 atributo_declaration: declaracion_variables . ','

    ','  desplazar e ir al estado 174


estado 145

   34 atributos: atributos atributo_declaration .

    $default  reduce usando la regla 34 (atributos)


estado 146

   27 clase_declaration: CLASS ID '{' atributos metodos_clase . herencia_composicion '}'
   37 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 5

    ','       reduce usando la regla 41 (funcion_declaration)
    $default  reduce usando la regla 43 (herencia_composicion)

    encabezado_funcion    ir al estado 24
    metodo_declaration    ir al estado 175
    funcion_declaration   ir al estado 176
    herencia_composicion  ir al estado 177


estado 147

   28 interface_declaration: INTERFACE ID '{' interface_metodos '}' .

    $default  reduce usando la regla 28 (interface_declaration)


estado 148

   32 interface_metodo_declaration: encabezado_funcion . '(' parametro ')' ','

    '('  desplazar e ir al estado 178


estado 149

   29 interface_metodos: interface_metodos interface_metodo_declaration .

    $default  reduce usando la regla 29 (interface_metodos)


estado 150

   57 distributed_method_implementation: IMPL FOR ID ':' '{' . metodos_clase '}'

    $default  reduce usando la regla 38 (metodos_clase)

    metodos_clase  ir al estado 179


estado 151

  116 expresion_parentesis: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 180


estado 152

  114 expresion: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 114 (expresion)


estado 153

  118 expresion_parentesis: termino '-' . termino

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '-'         desplazar e ir al estado 83

    termino    ir al estado 181
    factor     ir al estado 90
    constante  ir al estado 91


estado 154

  117 expresion_parentesis: termino '+' . termino

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '-'         desplazar e ir al estado 83

    termino    ir al estado 182
    factor     ir al estado 90
    constante  ir al estado 91


estado 155

   75 seleccion: IF '(' condicion ')' bloque_if . ELSE bloque_else END_IF
   76          | IF '(' condicion ')' bloque_if . END_IF
   77          | IF '(' condicion ')' bloque_if .
   78          | IF '(' condicion ')' bloque_if . ELSE bloque_else

    ELSE    desplazar e ir al estado 183
    END_IF  desplazar e ir al estado 184

    $default  reduce usando la regla 77 (seleccion)


estado 156

   79 bloque_if: bloque_sentencias .

    $default  reduce usando la regla 79 (bloque_if)


estado 157

  113 expresion: expresion '-' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 116
    '-'         desplazar e ir al estado 83

    expresion_parentesis  ir al estado 185
    termino               ir al estado 118
    factor                ir al estado 90
    constante             ir al estado 91


estado 158

  110 expresion: expresion '-' termino .
  121 termino: termino . '*' factor
  122        | termino . '/' factor

    '*'  desplazar e ir al estado 125
    '/'  desplazar e ir al estado 126

    $default  reduce usando la regla 110 (expresion)


estado 159

  112 expresion: expresion '+' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 81
    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66
    '('         desplazar e ir al estado 116
    '-'         desplazar e ir al estado 83

    expresion_parentesis  ir al estado 186
    termino               ir al estado 118
    factor                ir al estado 90
    constante             ir al estado 91


estado 160

  109 expresion: expresion '+' termino .
  121 termino: termino . '*' factor
  122        | termino . '/' factor

    '*'  desplazar e ir al estado 125
    '/'  desplazar e ir al estado 126

    $default  reduce usando la regla 109 (expresion)


estado 161

   81 condicion: expresion comparador expresion .
  109 expresion: expresion . '+' termino
  110          | expresion . '-' termino
  112          | expresion . '+' '(' expresion_parentesis ')'
  113          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 122
    '+'  desplazar e ir al estado 123

    $default  reduce usando la regla 81 (condicion)


estado 162

  121 termino: termino '*' factor .

    $default  reduce usando la regla 121 (termino)


estado 163

  122 termino: termino '/' factor .

    $default  reduce usando la regla 122 (termino)


estado 164

  109 expresion: expresion . '+' termino
  110          | expresion . '-' termino
  111          | tipo '(' expresion . ')'
  112          | expresion . '+' '(' expresion_parentesis ')'
  113          | expresion . '-' '(' expresion_parentesis ')'

    ')'  desplazar e ir al estado 187
    '-'  desplazar e ir al estado 122
    '+'  desplazar e ir al estado 123


estado 165

   71 invocacion: ID '.' ID '(' argumentos . ')'
   73 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 131
    ')'  desplazar e ir al estado 188


estado 166

   64 asignacion: ID '.' ID asignador expresion .
  109 expresion: expresion . '+' termino
  110          | expresion . '-' termino
  112          | expresion . '+' '(' expresion_parentesis ')'
  113          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 122
    '+'  desplazar e ir al estado 123

    $default  reduce usando la regla 64 (asignacion)


estado 167

   73 argumentos: argumentos ';' expresion .
  109 expresion: expresion . '+' termino
  110          | expresion . '-' termino
  112          | expresion . '+' '(' expresion_parentesis ')'
  113          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 122
    '+'  desplazar e ir al estado 123

    $default  reduce usando la regla 73 (argumentos)


estado 168

   55 parametro: parametro ';' tipo . ID

    ID  desplazar e ir al estado 189


estado 169

   40 funcion_declaration: encabezado_funcion '(' parametro ')' '{' . sentencias_metodo '}'

    $default  reduce usando la regla 47 (sentencias_metodo)

    sentencias_metodo  ir al estado 190


estado 170

    5 sentencias: sentencias . sentencia
   92 bloque_sentencias: '{' sentencias . '}'

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '}'        desplazar e ir al estado 191

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 60
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 171

   96 bucle_for: encabezado_for '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 96 (bucle_for)


estado 172

  104 argumento_bucle_for: constante ';' constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 64
    CTE_UINT    desplazar e ir al estado 65
    CTE_DOUBLE  desplazar e ir al estado 66

    constante  ir al estado 192


estado 173

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase . herencia_composicion '}'
   37 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 5

    ','       reduce usando la regla 41 (funcion_declaration)
    $default  reduce usando la regla 43 (herencia_composicion)

    encabezado_funcion    ir al estado 24
    metodo_declaration    ir al estado 175
    funcion_declaration   ir al estado 176
    herencia_composicion  ir al estado 193


estado 174

   36 atributo_declaration: declaracion_variables ',' .

    $default  reduce usando la regla 36 (atributo_declaration)


estado 175

   37 metodos_clase: metodos_clase metodo_declaration .

    $default  reduce usando la regla 37 (metodos_clase)


estado 176

   39 metodo_declaration: funcion_declaration . ','

    ','  desplazar e ir al estado 194


estado 177

   27 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion . '}'
   42 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 195
    '}'  desplazar e ir al estado 196


estado 178

   32 interface_metodo_declaration: encabezado_funcion '(' . parametro ')' ','

    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    ID      desplazar e ir al estado 104

    $default  reduce usando la regla 56 (parametro)

    parametro  ir al estado 197
    tipo       ir al estado 106


estado 179

   37 metodos_clase: metodos_clase . metodo_declaration
   57 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase . '}'

    VOID  desplazar e ir al estado 5
    '}'   desplazar e ir al estado 198

    $default  reduce usando la regla 41 (funcion_declaration)

    encabezado_funcion   ir al estado 24
    metodo_declaration   ir al estado 175
    funcion_declaration  ir al estado 176


estado 180

  116 expresion_parentesis: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 116 (expresion_parentesis)


estado 181

  118 expresion_parentesis: termino '-' termino .
  121 termino: termino . '*' factor
  122        | termino . '/' factor

    '*'  desplazar e ir al estado 125
    '/'  desplazar e ir al estado 126

    $default  reduce usando la regla 118 (expresion_parentesis)


estado 182

  117 expresion_parentesis: termino '+' termino .
  121 termino: termino . '*' factor
  122        | termino . '/' factor

    '*'  desplazar e ir al estado 125
    '/'  desplazar e ir al estado 126

    $default  reduce usando la regla 117 (expresion_parentesis)


estado 183

   75 seleccion: IF '(' condicion ')' bloque_if ELSE . bloque_else END_IF
   78          | IF '(' condicion ')' bloque_if ELSE . bloque_else

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 137

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_else                        ir al estado 199
    bloque_sentencias                  ir al estado 200
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    encabezado_for                     ir al estado 35
    acceso_atributo                    ir al estado 36
    tipo                               ir al estado 37


estado 184

   76 seleccion: IF '(' condicion ')' bloque_if END_IF .

    $default  reduce usando la regla 76 (seleccion)


estado 185

  113 expresion: expresion '-' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 201


estado 186

  112 expresion: expresion '+' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 202


estado 187

  111 expresion: tipo '(' expresion ')' .

    $default  reduce usando la regla 111 (expresion)


estado 188

   71 invocacion: ID '.' ID '(' argumentos ')' .

    $default  reduce usando la regla 71 (invocacion)


estado 189

   55 parametro: parametro ';' tipo ID .

    $default  reduce usando la regla 55 (parametro)


estado 190

   40 funcion_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_metodo . '}'
   44 sentencias_metodo: sentencias_metodo . declaracion_variables ','
   45                  | sentencias_metodo . ejecutable ','
   46                  | sentencias_metodo . local_function_declaration ','

    error   desplazar e ir al estado 1
    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    VOID    desplazar e ir al estado 5
    IF      desplazar e ir al estado 9
    PRINT   desplazar e ir al estado 10
    FOR     desplazar e ir al estado 11
    RETURN  desplazar e ir al estado 12
    ID      desplazar e ir al estado 203
    STRING  desplazar e ir al estado 14
    '}'     desplazar e ir al estado 204

    ejecutable                  ir al estado 205
    declaracion_variables       ir al estado 206
    encabezado_funcion          ir al estado 207
    local_function_declaration  ir al estado 208
    retorno                     ir al estado 28
    asignacion                  ir al estado 30
    invocacion                  ir al estado 31
    seleccion                   ir al estado 32
    print                       ir al estado 33
    bucle_for                   ir al estado 34
    encabezado_for              ir al estado 35
    acceso_atributo             ir al estado 36
    tipo                        ir al estado 37


estado 191

   92 bloque_sentencias: '{' sentencias '}' .

    $default  reduce usando la regla 92 (bloque_sentencias)


estado 192

  104 argumento_bucle_for: constante ';' constante ';' constante .

    $default  reduce usando la regla 104 (argumento_bucle_for)


estado 193

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion . '}'
   42 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 195
    '}'  desplazar e ir al estado 209


estado 194

   39 metodo_declaration: funcion_declaration ',' .

    $default  reduce usando la regla 39 (metodo_declaration)


estado 195

   42 herencia_composicion: herencia_composicion ID . ','

    ','  desplazar e ir al estado 210


estado 196

   27 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 27 (clase_declaration)


estado 197

   32 interface_metodo_declaration: encabezado_funcion '(' parametro . ')' ','
   55 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 134
    ')'  desplazar e ir al estado 211


estado 198

   57 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}' .

    $default  reduce usando la regla 57 (distributed_method_implementation)


estado 199

   75 seleccion: IF '(' condicion ')' bloque_if ELSE bloque_else . END_IF
   78          | IF '(' condicion ')' bloque_if ELSE bloque_else .

    END_IF  desplazar e ir al estado 212

    $default  reduce usando la regla 78 (seleccion)


estado 200

   80 bloque_else: bloque_sentencias .

    $default  reduce usando la regla 80 (bloque_else)


estado 201

  113 expresion: expresion '-' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 113 (expresion)


estado 202

  112 expresion: expresion '+' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 112 (expresion)


estado 203

   63 asignacion: ID . asignador expresion
   64           | ID . '.' ID asignador expresion
   65           | ID . asignador
   66           | ID . '.' ID asignador
   67           | ID . asignador '-'
   70 invocacion: ID . '(' argumentos ')'
   71           | ID . '.' ID '(' argumentos ')'
  100 encabezado_for: ID . IN RANGE
  108 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 48
    PLUS_EQUAL  desplazar e ir al estado 49
    '='         desplazar e ir al estado 51
    '.'         desplazar e ir al estado 52
    '('         desplazar e ir al estado 53

    asignador  ir al estado 56


estado 204

   40 funcion_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_metodo '}' .

    $default  reduce usando la regla 40 (funcion_declaration)


estado 205

   45 sentencias_metodo: sentencias_metodo ejecutable . ','

    ','  desplazar e ir al estado 213


estado 206

   44 sentencias_metodo: sentencias_metodo declaracion_variables . ','

    ','  desplazar e ir al estado 214


estado 207

   48 local_function_declaration: encabezado_funcion . '(' parametro ')' '{' sentencias_funcion_local '}'

    '('  desplazar e ir al estado 215


estado 208

   46 sentencias_metodo: sentencias_metodo local_function_declaration . ','

    ','  desplazar e ir al estado 216


estado 209

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 33 (implement_declaration)


estado 210

   42 herencia_composicion: herencia_composicion ID ',' .

    $default  reduce usando la regla 42 (herencia_composicion)


estado 211

   32 interface_metodo_declaration: encabezado_funcion '(' parametro ')' . ','

    ','  desplazar e ir al estado 217


estado 212

   75 seleccion: IF '(' condicion ')' bloque_if ELSE bloque_else END_IF .

    $default  reduce usando la regla 75 (seleccion)


estado 213

   45 sentencias_metodo: sentencias_metodo ejecutable ',' .

    $default  reduce usando la regla 45 (sentencias_metodo)


estado 214

   44 sentencias_metodo: sentencias_metodo declaracion_variables ',' .

    $default  reduce usando la regla 44 (sentencias_metodo)


estado 215

   48 local_function_declaration: encabezado_funcion '(' . parametro ')' '{' sentencias_funcion_local '}'

    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    ID      desplazar e ir al estado 104

    $default  reduce usando la regla 56 (parametro)

    parametro  ir al estado 218
    tipo       ir al estado 106


estado 216

   46 sentencias_metodo: sentencias_metodo local_function_declaration ',' .

    $default  reduce usando la regla 46 (sentencias_metodo)


estado 217

   32 interface_metodo_declaration: encabezado_funcion '(' parametro ')' ',' .

    $default  reduce usando la regla 32 (interface_metodo_declaration)


estado 218

   48 local_function_declaration: encabezado_funcion '(' parametro . ')' '{' sentencias_funcion_local '}'
   55 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 134
    ')'  desplazar e ir al estado 219


estado 219

   48 local_function_declaration: encabezado_funcion '(' parametro ')' . '{' sentencias_funcion_local '}'

    '{'  desplazar e ir al estado 220


estado 220

   48 local_function_declaration: encabezado_funcion '(' parametro ')' '{' . sentencias_funcion_local '}'

    $default  reduce usando la regla 52 (sentencias_funcion_local)

    sentencias_funcion_local  ir al estado 221


estado 221

   48 local_function_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_funcion_local . '}'
   49 sentencias_funcion_local: sentencias_funcion_local . declaracion_variables ','
   50                         | sentencias_funcion_local . ejecutable ','
   51                         | sentencias_funcion_local . local_function_declaration ','

    error   desplazar e ir al estado 1
    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    VOID    desplazar e ir al estado 5
    IF      desplazar e ir al estado 9
    PRINT   desplazar e ir al estado 10
    FOR     desplazar e ir al estado 11
    RETURN  desplazar e ir al estado 12
    ID      desplazar e ir al estado 203
    STRING  desplazar e ir al estado 14
    '}'     desplazar e ir al estado 222

    ejecutable                  ir al estado 223
    declaracion_variables       ir al estado 224
    encabezado_funcion          ir al estado 207
    local_function_declaration  ir al estado 225
    retorno                     ir al estado 28
    asignacion                  ir al estado 30
    invocacion                  ir al estado 31
    seleccion                   ir al estado 32
    print                       ir al estado 33
    bucle_for                   ir al estado 34
    encabezado_for              ir al estado 35
    acceso_atributo             ir al estado 36
    tipo                        ir al estado 37


estado 222

   48 local_function_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_funcion_local '}' .

    $default  reduce usando la regla 48 (local_function_declaration)


estado 223

   50 sentencias_funcion_local: sentencias_funcion_local ejecutable . ','

    ','  desplazar e ir al estado 226


estado 224

   49 sentencias_funcion_local: sentencias_funcion_local declaracion_variables . ','

    ','  desplazar e ir al estado 227


estado 225

   51 sentencias_funcion_local: sentencias_funcion_local local_function_declaration . ','

    ','  desplazar e ir al estado 228


estado 226

   50 sentencias_funcion_local: sentencias_funcion_local ejecutable ',' .

    $default  reduce usando la regla 50 (sentencias_funcion_local)


estado 227

   49 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ',' .

    $default  reduce usando la regla 49 (sentencias_funcion_local)


estado 228

   51 sentencias_funcion_local: sentencias_funcion_local local_function_declaration ',' .

    $default  reduce usando la regla 51 (sentencias_funcion_local)
