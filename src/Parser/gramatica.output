Gramática

    0 $accept: programa $end

    1 programa: '{' sentencias '}'

    2 sentencias: sentencia
    3           | sentencias sentencia

    4 sentencia: declarativa ','
    5          | ejecutable ','

    6 declarativa: declaracion_variables
    7            | clase_declaration
    8            | objeto_declaration
    9            | interface_declaration
   10            | implement_declaration
   11            | distributed_method_implementation
   12            | funcion_declaration

   13 ejecutable: asignacion
   14           | invocacion
   15           | seleccion
   16           | print
   17           | bucle_for
   18           | acceso_atributo

   19 declaracion_variables: tipo lista_variables

   20 lista_variables: lista_variables ';' ID
   21                | ID

   22 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}'

   23 interface_declaration: INTERFACE ID '{' interface_metodos '}'

   24 interface_metodos: interface_metodos interface_metodo_declaration
   25                  | /* vacío */

   26 interface_metodo_declaration: VOID ID '(' parametro ')' ','

   27 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

   28 atributos: atributos atributo_declaration
   29          | /* vacío */

   30 atributo_declaration: declaracion_variables ','

   31 metodos_clase: metodos_clase metodo_declaration
   32              | /* vacío */

   33 metodo_declaration: funcion_declaration ','

   34 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo '}'
   35                    | /* vacío */

   36 herencia_composicion: herencia_composicion ID ','
   37                     | /* vacío */

   38 sentencias_metodo: sentencias_metodo declaracion_variables ','
   39                  | sentencias_metodo retorno ','
   40                  | sentencias_metodo ejecutable ','
   41                  | sentencias_metodo local_function_declaration ','
   42                  | /* vacío */

   43 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local '}'

   44 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ','
   45                         | sentencias_funcion_local retorno ','
   46                         | sentencias_funcion_local ejecutable ','
   47                         | sentencias_funcion_local local_function_declaration ','
   48                         | /* vacío */

   49 parametro: tipo ID
   50          | /* vacío */

   51 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}'

   52 retorno: RETURN

   53 objeto_declaration: ID lista_objetos

   54 lista_objetos: lista_objetos ';' objeto
   55              | objeto

   56 objeto: ID

   57 asignacion: ID asignador expresion
   58           | ID '.' ID asignador expresion

   59 asignador: '='
   60          | PLUS_EQUAL

   61 invocacion: ID '(' argumentos ')'
   62           | ID '.' ID '(' argumentos ')'

   63 argumentos: expresion
   64           | /* vacío */

   65 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   66          | IF '(' condicion ')' bloque_sentencias END_IF

   67 condicion: expresion comparador expresion

   68 comparador: '<'
   69           | '>'
   70           | LESS_EQUAL
   71           | GREATER_EQUAL
   72           | EQUAL
   73           | NOT_EQUAL

   74 bloque_sentencias: sentencia
   75                  | '{' sentencias '}'

   76 print: PRINT STRING

   77 bucle_for: FOR ID IN RANGE '(' constante ';' constante ';' constante ')' bloque_sentencias

   78 acceso_atributo: ID '.' ID

   79 expresion: expresion '+' termino
   80          | expresion '-' termino
   81          | tipo '(' expresion ')'
   82          | expresion '+' '(' expresion_parentesis ')'
   83          | expresion '-' '(' expresion_parentesis ')'
   84          | '(' expresion_parentesis ')'
   85          | termino

   86 expresion_parentesis: '(' expresion_parentesis ')'
   87                     | termino '+' termino
   88                     | termino '-' termino
   89                     | termino

   90 termino: factor
   91        | termino '*' factor
   92        | termino '/' factor

   93 factor: ID
   94       | '-' constante
   95       | constante

   96 constante: CTE_SHORT
   97          | CTE_DOUBLE
   98          | CTE_UINT

   99 tipo: SHORT
  100     | UINT
  101     | DOUBLE


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 26 34 43 61 62 65 66 77 81 82 83 84 86
')' (41) 26 34 43 61 62 65 66 77 81 82 83 84 86
'*' (42) 91
'+' (43) 79 82 87
',' (44) 4 5 26 30 33 36 38 39 40 41 44 45 46 47
'-' (45) 80 83 88 94
'.' (46) 58 62 78
'/' (47) 92
':' (58) 51
';' (59) 20 54 77
'<' (60) 68
'=' (61) 59
'>' (62) 69
'{' (123) 1 22 23 27 34 43 51 75
'}' (125) 1 22 23 27 34 43 51 75
error (256)
SHORT (258) 99
UINT (259) 100
DOUBLE (260) 101
VOID (261) 26 34 43
CLASS (262) 22 27
INTERFACE (263) 23
IMPLEMENT (264) 27
IMPL (265) 51
IF (266) 65 66
ELSE (267) 65
END_IF (268) 65 66
PRINT (269) 76
FOR (270) 51 77
IN (271) 77
RANGE (272) 77
RETURN (273) 52
LESS_EQUAL (274) 70
GREATER_EQUAL (275) 71
EQUAL (276) 72
NOT_EQUAL (277) 73
PLUS_EQUAL (278) 60
ID (279) 20 21 22 23 26 27 34 36 43 49 51 53 56 57 58 61 62 77 78 93
STRING (280) 76
CTE_SHORT (281) 96
CTE_UINT (282) 98
CTE_DOUBLE (283) 97


No terminales con las reglas donde aparecen

$accept (44)
    en la izquierda: 0
programa (45)
    en la izquierda: 1, en la derecha: 0
sentencias (46)
    en la izquierda: 2 3, en la derecha: 1 3 75
sentencia (47)
    en la izquierda: 4 5, en la derecha: 2 3 74
declarativa (48)
    en la izquierda: 6 7 8 9 10 11 12, en la derecha: 4
ejecutable (49)
    en la izquierda: 13 14 15 16 17 18, en la derecha: 5 40 46
declaracion_variables (50)
    en la izquierda: 19, en la derecha: 6 30 38 44
lista_variables (51)
    en la izquierda: 20 21, en la derecha: 19 20
clase_declaration (52)
    en la izquierda: 22, en la derecha: 7
interface_declaration (53)
    en la izquierda: 23, en la derecha: 9
interface_metodos (54)
    en la izquierda: 24 25, en la derecha: 23 24
interface_metodo_declaration (55)
    en la izquierda: 26, en la derecha: 24
implement_declaration (56)
    en la izquierda: 27, en la derecha: 10
atributos (57)
    en la izquierda: 28 29, en la derecha: 22 28
atributo_declaration (58)
    en la izquierda: 30, en la derecha: 28
metodos_clase (59)
    en la izquierda: 31 32, en la derecha: 22 27 31 51
metodo_declaration (60)
    en la izquierda: 33, en la derecha: 31
funcion_declaration (61)
    en la izquierda: 34 35, en la derecha: 12 33
herencia_composicion (62)
    en la izquierda: 36 37, en la derecha: 22 27 36
sentencias_metodo (63)
    en la izquierda: 38 39 40 41 42, en la derecha: 34 38 39 40 41
local_function_declaration (64)
    en la izquierda: 43, en la derecha: 41 47
sentencias_funcion_local (65)
    en la izquierda: 44 45 46 47 48, en la derecha: 43 44 45 46 47
parametro (66)
    en la izquierda: 49 50, en la derecha: 26 34 43
distributed_method_implementation (67)
    en la izquierda: 51, en la derecha: 11
retorno (68)
    en la izquierda: 52, en la derecha: 39 45
objeto_declaration (69)
    en la izquierda: 53, en la derecha: 8
lista_objetos (70)
    en la izquierda: 54 55, en la derecha: 53 54
objeto (71)
    en la izquierda: 56, en la derecha: 54 55
asignacion (72)
    en la izquierda: 57 58, en la derecha: 13
asignador (73)
    en la izquierda: 59 60, en la derecha: 57 58
invocacion (74)
    en la izquierda: 61 62, en la derecha: 14
argumentos (75)
    en la izquierda: 63 64, en la derecha: 61 62
seleccion (76)
    en la izquierda: 65 66, en la derecha: 15
condicion (77)
    en la izquierda: 67, en la derecha: 65 66
comparador (78)
    en la izquierda: 68 69 70 71 72 73, en la derecha: 67
bloque_sentencias (79)
    en la izquierda: 74 75, en la derecha: 65 66 77
print (80)
    en la izquierda: 76, en la derecha: 16
bucle_for (81)
    en la izquierda: 77, en la derecha: 17
acceso_atributo (82)
    en la izquierda: 78, en la derecha: 18
expresion (83)
    en la izquierda: 79 80 81 82 83 84 85, en la derecha: 57 58 63
    67 79 80 81 82 83
expresion_parentesis (84)
    en la izquierda: 86 87 88 89, en la derecha: 82 83 84 86
termino (85)
    en la izquierda: 90 91 92, en la derecha: 79 80 85 87 88 89 91
    92
factor (86)
    en la izquierda: 93 94 95, en la derecha: 90 91 92
constante (87)
    en la izquierda: 96 97 98, en la derecha: 77 94 95
tipo (88)
    en la izquierda: 99 100 101, en la derecha: 19 49 81


estado 0

    0 $accept: . programa $end

    '{'  desplazar e ir al estado 1

    programa  ir al estado 2


estado 1

    1 programa: '{' . sentencias '}'

    SHORT      desplazar e ir al estado 3
    UINT       desplazar e ir al estado 4
    DOUBLE     desplazar e ir al estado 5
    VOID       desplazar e ir al estado 6
    CLASS      desplazar e ir al estado 7
    INTERFACE  desplazar e ir al estado 8
    IMPL       desplazar e ir al estado 9
    IF         desplazar e ir al estado 10
    PRINT      desplazar e ir al estado 11
    FOR        desplazar e ir al estado 12
    ID         desplazar e ir al estado 13

    $default  reduce usando la regla 35 (funcion_declaration)

    sentencias                         ir al estado 14
    sentencia                          ir al estado 15
    declarativa                        ir al estado 16
    ejecutable                         ir al estado 17
    declaracion_variables              ir al estado 18
    clase_declaration                  ir al estado 19
    interface_declaration              ir al estado 20
    implement_declaration              ir al estado 21
    funcion_declaration                ir al estado 22
    distributed_method_implementation  ir al estado 23
    objeto_declaration                 ir al estado 24
    asignacion                         ir al estado 25
    invocacion                         ir al estado 26
    seleccion                          ir al estado 27
    print                              ir al estado 28
    bucle_for                          ir al estado 29
    acceso_atributo                    ir al estado 30
    tipo                               ir al estado 31


estado 2

    0 $accept: programa . $end

    $end  desplazar e ir al estado 32


estado 3

   99 tipo: SHORT .

    $default  reduce usando la regla 99 (tipo)


estado 4

  100 tipo: UINT .

    $default  reduce usando la regla 100 (tipo)


estado 5

  101 tipo: DOUBLE .

    $default  reduce usando la regla 101 (tipo)


estado 6

   34 funcion_declaration: VOID . ID '(' parametro ')' '{' sentencias_metodo '}'

    ID  desplazar e ir al estado 33


estado 7

   22 clase_declaration: CLASS . ID '{' atributos metodos_clase herencia_composicion '}'
   27 implement_declaration: CLASS . ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 34


estado 8

   23 interface_declaration: INTERFACE . ID '{' interface_metodos '}'

    ID  desplazar e ir al estado 35


estado 9

   51 distributed_method_implementation: IMPL . FOR ID ':' '{' metodos_clase '}'

    FOR  desplazar e ir al estado 36


estado 10

   65 seleccion: IF . '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   66          | IF . '(' condicion ')' bloque_sentencias END_IF

    '('  desplazar e ir al estado 37


estado 11

   76 print: PRINT . STRING

    STRING  desplazar e ir al estado 38


estado 12

   77 bucle_for: FOR . ID IN RANGE '(' constante ';' constante ';' constante ')' bloque_sentencias

    ID  desplazar e ir al estado 39


estado 13

   53 objeto_declaration: ID . lista_objetos
   57 asignacion: ID . asignador expresion
   58           | ID . '.' ID asignador expresion
   61 invocacion: ID . '(' argumentos ')'
   62           | ID . '.' ID '(' argumentos ')'
   78 acceso_atributo: ID . '.' ID

    PLUS_EQUAL  desplazar e ir al estado 40
    '='         desplazar e ir al estado 41
    '.'         desplazar e ir al estado 42
    ID          desplazar e ir al estado 43
    '('         desplazar e ir al estado 44

    lista_objetos  ir al estado 45
    objeto         ir al estado 46
    asignador      ir al estado 47


estado 14

    1 programa: '{' sentencias . '}'
    3 sentencias: sentencias . sentencia

    SHORT      desplazar e ir al estado 3
    UINT       desplazar e ir al estado 4
    DOUBLE     desplazar e ir al estado 5
    VOID       desplazar e ir al estado 6
    CLASS      desplazar e ir al estado 7
    INTERFACE  desplazar e ir al estado 8
    IMPL       desplazar e ir al estado 9
    IF         desplazar e ir al estado 10
    PRINT      desplazar e ir al estado 11
    FOR        desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    '}'        desplazar e ir al estado 48

    $default  reduce usando la regla 35 (funcion_declaration)

    sentencia                          ir al estado 49
    declarativa                        ir al estado 16
    ejecutable                         ir al estado 17
    declaracion_variables              ir al estado 18
    clase_declaration                  ir al estado 19
    interface_declaration              ir al estado 20
    implement_declaration              ir al estado 21
    funcion_declaration                ir al estado 22
    distributed_method_implementation  ir al estado 23
    objeto_declaration                 ir al estado 24
    asignacion                         ir al estado 25
    invocacion                         ir al estado 26
    seleccion                          ir al estado 27
    print                              ir al estado 28
    bucle_for                          ir al estado 29
    acceso_atributo                    ir al estado 30
    tipo                               ir al estado 31


estado 15

    2 sentencias: sentencia .

    $default  reduce usando la regla 2 (sentencias)


estado 16

    4 sentencia: declarativa . ','

    ','  desplazar e ir al estado 50


estado 17

    5 sentencia: ejecutable . ','

    ','  desplazar e ir al estado 51


estado 18

    6 declarativa: declaracion_variables .

    $default  reduce usando la regla 6 (declarativa)


estado 19

    7 declarativa: clase_declaration .

    $default  reduce usando la regla 7 (declarativa)


estado 20

    9 declarativa: interface_declaration .

    $default  reduce usando la regla 9 (declarativa)


estado 21

   10 declarativa: implement_declaration .

    $default  reduce usando la regla 10 (declarativa)


estado 22

   12 declarativa: funcion_declaration .

    $default  reduce usando la regla 12 (declarativa)


estado 23

   11 declarativa: distributed_method_implementation .

    $default  reduce usando la regla 11 (declarativa)


estado 24

    8 declarativa: objeto_declaration .

    $default  reduce usando la regla 8 (declarativa)


estado 25

   13 ejecutable: asignacion .

    $default  reduce usando la regla 13 (ejecutable)


estado 26

   14 ejecutable: invocacion .

    $default  reduce usando la regla 14 (ejecutable)


estado 27

   15 ejecutable: seleccion .

    $default  reduce usando la regla 15 (ejecutable)


estado 28

   16 ejecutable: print .

    $default  reduce usando la regla 16 (ejecutable)


estado 29

   17 ejecutable: bucle_for .

    $default  reduce usando la regla 17 (ejecutable)


estado 30

   18 ejecutable: acceso_atributo .

    $default  reduce usando la regla 18 (ejecutable)


estado 31

   19 declaracion_variables: tipo . lista_variables

    ID  desplazar e ir al estado 52

    lista_variables  ir al estado 53


estado 32

    0 $accept: programa $end .

    $default  aceptar


estado 33

   34 funcion_declaration: VOID ID . '(' parametro ')' '{' sentencias_metodo '}'

    '('  desplazar e ir al estado 54


estado 34

   22 clase_declaration: CLASS ID . '{' atributos metodos_clase herencia_composicion '}'
   27 implement_declaration: CLASS ID . IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    IMPLEMENT  desplazar e ir al estado 55
    '{'        desplazar e ir al estado 56


estado 35

   23 interface_declaration: INTERFACE ID . '{' interface_metodos '}'

    '{'  desplazar e ir al estado 57


estado 36

   51 distributed_method_implementation: IMPL FOR . ID ':' '{' metodos_clase '}'

    ID  desplazar e ir al estado 58


estado 37

   65 seleccion: IF '(' . condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   66          | IF '(' . condicion ')' bloque_sentencias END_IF

    SHORT       desplazar e ir al estado 3
    UINT        desplazar e ir al estado 4
    DOUBLE      desplazar e ir al estado 5
    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 63
    '-'         desplazar e ir al estado 64

    condicion  ir al estado 65
    expresion  ir al estado 66
    termino    ir al estado 67
    factor     ir al estado 68
    constante  ir al estado 69
    tipo       ir al estado 70


estado 38

   76 print: PRINT STRING .

    $default  reduce usando la regla 76 (print)


estado 39

   77 bucle_for: FOR ID . IN RANGE '(' constante ';' constante ';' constante ')' bloque_sentencias

    IN  desplazar e ir al estado 71


estado 40

   60 asignador: PLUS_EQUAL .

    $default  reduce usando la regla 60 (asignador)


estado 41

   59 asignador: '=' .

    $default  reduce usando la regla 59 (asignador)


estado 42

   58 asignacion: ID '.' . ID asignador expresion
   62 invocacion: ID '.' . ID '(' argumentos ')'
   78 acceso_atributo: ID '.' . ID

    ID  desplazar e ir al estado 72


estado 43

   56 objeto: ID .

    $default  reduce usando la regla 56 (objeto)


estado 44

   61 invocacion: ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 3
    UINT        desplazar e ir al estado 4
    DOUBLE      desplazar e ir al estado 5
    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 63
    '-'         desplazar e ir al estado 64

    $default  reduce usando la regla 64 (argumentos)

    argumentos  ir al estado 73
    expresion   ir al estado 74
    termino     ir al estado 67
    factor      ir al estado 68
    constante   ir al estado 69
    tipo        ir al estado 70


estado 45

   53 objeto_declaration: ID lista_objetos .
   54 lista_objetos: lista_objetos . ';' objeto

    ';'  desplazar e ir al estado 75

    $default  reduce usando la regla 53 (objeto_declaration)


estado 46

   55 lista_objetos: objeto .

    $default  reduce usando la regla 55 (lista_objetos)


estado 47

   57 asignacion: ID asignador . expresion

    SHORT       desplazar e ir al estado 3
    UINT        desplazar e ir al estado 4
    DOUBLE      desplazar e ir al estado 5
    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 63
    '-'         desplazar e ir al estado 64

    expresion  ir al estado 76
    termino    ir al estado 67
    factor     ir al estado 68
    constante  ir al estado 69
    tipo       ir al estado 70


estado 48

    1 programa: '{' sentencias '}' .

    $default  reduce usando la regla 1 (programa)


estado 49

    3 sentencias: sentencias sentencia .

    $default  reduce usando la regla 3 (sentencias)


estado 50

    4 sentencia: declarativa ',' .

    $default  reduce usando la regla 4 (sentencia)


estado 51

    5 sentencia: ejecutable ',' .

    $default  reduce usando la regla 5 (sentencia)


estado 52

   21 lista_variables: ID .

    $default  reduce usando la regla 21 (lista_variables)


estado 53

   19 declaracion_variables: tipo lista_variables .
   20 lista_variables: lista_variables . ';' ID

    ';'  desplazar e ir al estado 77

    $default  reduce usando la regla 19 (declaracion_variables)


estado 54

   34 funcion_declaration: VOID ID '(' . parametro ')' '{' sentencias_metodo '}'

    SHORT   desplazar e ir al estado 3
    UINT    desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5

    $default  reduce usando la regla 50 (parametro)

    parametro  ir al estado 78
    tipo       ir al estado 79


estado 55

   27 implement_declaration: CLASS ID IMPLEMENT . ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 80


estado 56

   22 clase_declaration: CLASS ID '{' . atributos metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 29 (atributos)

    atributos  ir al estado 81


estado 57

   23 interface_declaration: INTERFACE ID '{' . interface_metodos '}'

    $default  reduce usando la regla 25 (interface_metodos)

    interface_metodos  ir al estado 82


estado 58

   51 distributed_method_implementation: IMPL FOR ID . ':' '{' metodos_clase '}'

    ':'  desplazar e ir al estado 83


estado 59

   93 factor: ID .

    $default  reduce usando la regla 93 (factor)


estado 60

   96 constante: CTE_SHORT .

    $default  reduce usando la regla 96 (constante)


estado 61

   98 constante: CTE_UINT .

    $default  reduce usando la regla 98 (constante)


estado 62

   97 constante: CTE_DOUBLE .

    $default  reduce usando la regla 97 (constante)


estado 63

   84 expresion: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 84
    '-'         desplazar e ir al estado 64

    expresion_parentesis  ir al estado 85
    termino               ir al estado 86
    factor                ir al estado 68
    constante             ir al estado 69


estado 64

   94 factor: '-' . constante

    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62

    constante  ir al estado 87


estado 65

   65 seleccion: IF '(' condicion . ')' bloque_sentencias ELSE bloque_sentencias END_IF
   66          | IF '(' condicion . ')' bloque_sentencias END_IF

    ')'  desplazar e ir al estado 88


estado 66

   67 condicion: expresion . comparador expresion
   79 expresion: expresion . '+' termino
   80          | expresion . '-' termino
   82          | expresion . '+' '(' expresion_parentesis ')'
   83          | expresion . '-' '(' expresion_parentesis ')'

    LESS_EQUAL     desplazar e ir al estado 89
    GREATER_EQUAL  desplazar e ir al estado 90
    EQUAL          desplazar e ir al estado 91
    NOT_EQUAL      desplazar e ir al estado 92
    '<'            desplazar e ir al estado 93
    '>'            desplazar e ir al estado 94
    '+'            desplazar e ir al estado 95
    '-'            desplazar e ir al estado 96

    comparador  ir al estado 97


estado 67

   85 expresion: termino .
   91 termino: termino . '*' factor
   92        | termino . '/' factor

    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 85 (expresion)


estado 68

   90 termino: factor .

    $default  reduce usando la regla 90 (termino)


estado 69

   95 factor: constante .

    $default  reduce usando la regla 95 (factor)


estado 70

   81 expresion: tipo . '(' expresion ')'

    '('  desplazar e ir al estado 100


estado 71

   77 bucle_for: FOR ID IN . RANGE '(' constante ';' constante ';' constante ')' bloque_sentencias

    RANGE  desplazar e ir al estado 101


estado 72

   58 asignacion: ID '.' ID . asignador expresion
   62 invocacion: ID '.' ID . '(' argumentos ')'
   78 acceso_atributo: ID '.' ID .

    PLUS_EQUAL  desplazar e ir al estado 40
    '='         desplazar e ir al estado 41
    '('         desplazar e ir al estado 102

    $default  reduce usando la regla 78 (acceso_atributo)

    asignador  ir al estado 103


estado 73

   61 invocacion: ID '(' argumentos . ')'

    ')'  desplazar e ir al estado 104


estado 74

   63 argumentos: expresion .
   79 expresion: expresion . '+' termino
   80          | expresion . '-' termino
   82          | expresion . '+' '(' expresion_parentesis ')'
   83          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 95
    '-'  desplazar e ir al estado 96

    $default  reduce usando la regla 63 (argumentos)


estado 75

   54 lista_objetos: lista_objetos ';' . objeto

    ID  desplazar e ir al estado 43

    objeto  ir al estado 105


estado 76

   57 asignacion: ID asignador expresion .
   79 expresion: expresion . '+' termino
   80          | expresion . '-' termino
   82          | expresion . '+' '(' expresion_parentesis ')'
   83          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 95
    '-'  desplazar e ir al estado 96

    $default  reduce usando la regla 57 (asignacion)


estado 77

   20 lista_variables: lista_variables ';' . ID

    ID  desplazar e ir al estado 106


estado 78

   34 funcion_declaration: VOID ID '(' parametro . ')' '{' sentencias_metodo '}'

    ')'  desplazar e ir al estado 107


estado 79

   49 parametro: tipo . ID

    ID  desplazar e ir al estado 108


estado 80

   27 implement_declaration: CLASS ID IMPLEMENT ID . '{' metodos_clase herencia_composicion '}'

    '{'  desplazar e ir al estado 109


estado 81

   22 clase_declaration: CLASS ID '{' atributos . metodos_clase herencia_composicion '}'
   28 atributos: atributos . atributo_declaration

    SHORT   desplazar e ir al estado 3
    UINT    desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5

    $default  reduce usando la regla 32 (metodos_clase)

    declaracion_variables  ir al estado 110
    atributo_declaration   ir al estado 111
    metodos_clase          ir al estado 112
    tipo                   ir al estado 31


estado 82

   23 interface_declaration: INTERFACE ID '{' interface_metodos . '}'
   24 interface_metodos: interface_metodos . interface_metodo_declaration

    VOID  desplazar e ir al estado 113
    '}'   desplazar e ir al estado 114

    interface_metodo_declaration  ir al estado 115


estado 83

   51 distributed_method_implementation: IMPL FOR ID ':' . '{' metodos_clase '}'

    '{'  desplazar e ir al estado 116


estado 84

   86 expresion_parentesis: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 84
    '-'         desplazar e ir al estado 64

    expresion_parentesis  ir al estado 117
    termino               ir al estado 86
    factor                ir al estado 68
    constante             ir al estado 69


estado 85

   84 expresion: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 118


estado 86

   87 expresion_parentesis: termino . '+' termino
   88                     | termino . '-' termino
   89                     | termino .
   91 termino: termino . '*' factor
   92        | termino . '/' factor

    '+'  desplazar e ir al estado 119
    '-'  desplazar e ir al estado 120
    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 89 (expresion_parentesis)


estado 87

   94 factor: '-' constante .

    $default  reduce usando la regla 94 (factor)


estado 88

   65 seleccion: IF '(' condicion ')' . bloque_sentencias ELSE bloque_sentencias END_IF
   66          | IF '(' condicion ')' . bloque_sentencias END_IF

    SHORT      desplazar e ir al estado 3
    UINT       desplazar e ir al estado 4
    DOUBLE     desplazar e ir al estado 5
    VOID       desplazar e ir al estado 6
    CLASS      desplazar e ir al estado 7
    INTERFACE  desplazar e ir al estado 8
    IMPL       desplazar e ir al estado 9
    IF         desplazar e ir al estado 10
    PRINT      desplazar e ir al estado 11
    FOR        desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    '{'        desplazar e ir al estado 121

    $default  reduce usando la regla 35 (funcion_declaration)

    sentencia                          ir al estado 122
    declarativa                        ir al estado 16
    ejecutable                         ir al estado 17
    declaracion_variables              ir al estado 18
    clase_declaration                  ir al estado 19
    interface_declaration              ir al estado 20
    implement_declaration              ir al estado 21
    funcion_declaration                ir al estado 22
    distributed_method_implementation  ir al estado 23
    objeto_declaration                 ir al estado 24
    asignacion                         ir al estado 25
    invocacion                         ir al estado 26
    seleccion                          ir al estado 27
    bloque_sentencias                  ir al estado 123
    print                              ir al estado 28
    bucle_for                          ir al estado 29
    acceso_atributo                    ir al estado 30
    tipo                               ir al estado 31


estado 89

   70 comparador: LESS_EQUAL .

    $default  reduce usando la regla 70 (comparador)


estado 90

   71 comparador: GREATER_EQUAL .

    $default  reduce usando la regla 71 (comparador)


estado 91

   72 comparador: EQUAL .

    $default  reduce usando la regla 72 (comparador)


estado 92

   73 comparador: NOT_EQUAL .

    $default  reduce usando la regla 73 (comparador)


estado 93

   68 comparador: '<' .

    $default  reduce usando la regla 68 (comparador)


estado 94

   69 comparador: '>' .

    $default  reduce usando la regla 69 (comparador)


estado 95

   79 expresion: expresion '+' . termino
   82          | expresion '+' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 124
    '-'         desplazar e ir al estado 64

    termino    ir al estado 125
    factor     ir al estado 68
    constante  ir al estado 69


estado 96

   80 expresion: expresion '-' . termino
   83          | expresion '-' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 126
    '-'         desplazar e ir al estado 64

    termino    ir al estado 127
    factor     ir al estado 68
    constante  ir al estado 69


estado 97

   67 condicion: expresion comparador . expresion

    SHORT       desplazar e ir al estado 3
    UINT        desplazar e ir al estado 4
    DOUBLE      desplazar e ir al estado 5
    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 63
    '-'         desplazar e ir al estado 64

    expresion  ir al estado 128
    termino    ir al estado 67
    factor     ir al estado 68
    constante  ir al estado 69
    tipo       ir al estado 70


estado 98

   91 termino: termino '*' . factor

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '-'         desplazar e ir al estado 64

    factor     ir al estado 129
    constante  ir al estado 69


estado 99

   92 termino: termino '/' . factor

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '-'         desplazar e ir al estado 64

    factor     ir al estado 130
    constante  ir al estado 69


estado 100

   81 expresion: tipo '(' . expresion ')'

    SHORT       desplazar e ir al estado 3
    UINT        desplazar e ir al estado 4
    DOUBLE      desplazar e ir al estado 5
    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 63
    '-'         desplazar e ir al estado 64

    expresion  ir al estado 131
    termino    ir al estado 67
    factor     ir al estado 68
    constante  ir al estado 69
    tipo       ir al estado 70


estado 101

   77 bucle_for: FOR ID IN RANGE . '(' constante ';' constante ';' constante ')' bloque_sentencias

    '('  desplazar e ir al estado 132


estado 102

   62 invocacion: ID '.' ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 3
    UINT        desplazar e ir al estado 4
    DOUBLE      desplazar e ir al estado 5
    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 63
    '-'         desplazar e ir al estado 64

    $default  reduce usando la regla 64 (argumentos)

    argumentos  ir al estado 133
    expresion   ir al estado 74
    termino     ir al estado 67
    factor      ir al estado 68
    constante   ir al estado 69
    tipo        ir al estado 70


estado 103

   58 asignacion: ID '.' ID asignador . expresion

    SHORT       desplazar e ir al estado 3
    UINT        desplazar e ir al estado 4
    DOUBLE      desplazar e ir al estado 5
    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 63
    '-'         desplazar e ir al estado 64

    expresion  ir al estado 134
    termino    ir al estado 67
    factor     ir al estado 68
    constante  ir al estado 69
    tipo       ir al estado 70


estado 104

   61 invocacion: ID '(' argumentos ')' .

    $default  reduce usando la regla 61 (invocacion)


estado 105

   54 lista_objetos: lista_objetos ';' objeto .

    $default  reduce usando la regla 54 (lista_objetos)


estado 106

   20 lista_variables: lista_variables ';' ID .

    $default  reduce usando la regla 20 (lista_variables)


estado 107

   34 funcion_declaration: VOID ID '(' parametro ')' . '{' sentencias_metodo '}'

    '{'  desplazar e ir al estado 135


estado 108

   49 parametro: tipo ID .

    $default  reduce usando la regla 49 (parametro)


estado 109

   27 implement_declaration: CLASS ID IMPLEMENT ID '{' . metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 32 (metodos_clase)

    metodos_clase  ir al estado 136


estado 110

   30 atributo_declaration: declaracion_variables . ','

    ','  desplazar e ir al estado 137


estado 111

   28 atributos: atributos atributo_declaration .

    $default  reduce usando la regla 28 (atributos)


estado 112

   22 clase_declaration: CLASS ID '{' atributos metodos_clase . herencia_composicion '}'
   31 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 6

    ','       reduce usando la regla 35 (funcion_declaration)
    $default  reduce usando la regla 37 (herencia_composicion)

    metodo_declaration    ir al estado 138
    funcion_declaration   ir al estado 139
    herencia_composicion  ir al estado 140


estado 113

   26 interface_metodo_declaration: VOID . ID '(' parametro ')' ','

    ID  desplazar e ir al estado 141


estado 114

   23 interface_declaration: INTERFACE ID '{' interface_metodos '}' .

    $default  reduce usando la regla 23 (interface_declaration)


estado 115

   24 interface_metodos: interface_metodos interface_metodo_declaration .

    $default  reduce usando la regla 24 (interface_metodos)


estado 116

   51 distributed_method_implementation: IMPL FOR ID ':' '{' . metodos_clase '}'

    $default  reduce usando la regla 32 (metodos_clase)

    metodos_clase  ir al estado 142


estado 117

   86 expresion_parentesis: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 143


estado 118

   84 expresion: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 84 (expresion)


estado 119

   87 expresion_parentesis: termino '+' . termino

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '-'         desplazar e ir al estado 64

    termino    ir al estado 144
    factor     ir al estado 68
    constante  ir al estado 69


estado 120

   88 expresion_parentesis: termino '-' . termino

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '-'         desplazar e ir al estado 64

    termino    ir al estado 145
    factor     ir al estado 68
    constante  ir al estado 69


estado 121

   75 bloque_sentencias: '{' . sentencias '}'

    SHORT      desplazar e ir al estado 3
    UINT       desplazar e ir al estado 4
    DOUBLE     desplazar e ir al estado 5
    VOID       desplazar e ir al estado 6
    CLASS      desplazar e ir al estado 7
    INTERFACE  desplazar e ir al estado 8
    IMPL       desplazar e ir al estado 9
    IF         desplazar e ir al estado 10
    PRINT      desplazar e ir al estado 11
    FOR        desplazar e ir al estado 12
    ID         desplazar e ir al estado 13

    $default  reduce usando la regla 35 (funcion_declaration)

    sentencias                         ir al estado 146
    sentencia                          ir al estado 15
    declarativa                        ir al estado 16
    ejecutable                         ir al estado 17
    declaracion_variables              ir al estado 18
    clase_declaration                  ir al estado 19
    interface_declaration              ir al estado 20
    implement_declaration              ir al estado 21
    funcion_declaration                ir al estado 22
    distributed_method_implementation  ir al estado 23
    objeto_declaration                 ir al estado 24
    asignacion                         ir al estado 25
    invocacion                         ir al estado 26
    seleccion                          ir al estado 27
    print                              ir al estado 28
    bucle_for                          ir al estado 29
    acceso_atributo                    ir al estado 30
    tipo                               ir al estado 31


estado 122

   74 bloque_sentencias: sentencia .

    $default  reduce usando la regla 74 (bloque_sentencias)


estado 123

   65 seleccion: IF '(' condicion ')' bloque_sentencias . ELSE bloque_sentencias END_IF
   66          | IF '(' condicion ')' bloque_sentencias . END_IF

    ELSE    desplazar e ir al estado 147
    END_IF  desplazar e ir al estado 148


estado 124

   82 expresion: expresion '+' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 84
    '-'         desplazar e ir al estado 64

    expresion_parentesis  ir al estado 149
    termino               ir al estado 86
    factor                ir al estado 68
    constante             ir al estado 69


estado 125

   79 expresion: expresion '+' termino .
   91 termino: termino . '*' factor
   92        | termino . '/' factor

    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 79 (expresion)


estado 126

   83 expresion: expresion '-' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 59
    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62
    '('         desplazar e ir al estado 84
    '-'         desplazar e ir al estado 64

    expresion_parentesis  ir al estado 150
    termino               ir al estado 86
    factor                ir al estado 68
    constante             ir al estado 69


estado 127

   80 expresion: expresion '-' termino .
   91 termino: termino . '*' factor
   92        | termino . '/' factor

    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 80 (expresion)


estado 128

   67 condicion: expresion comparador expresion .
   79 expresion: expresion . '+' termino
   80          | expresion . '-' termino
   82          | expresion . '+' '(' expresion_parentesis ')'
   83          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 95
    '-'  desplazar e ir al estado 96

    $default  reduce usando la regla 67 (condicion)


estado 129

   91 termino: termino '*' factor .

    $default  reduce usando la regla 91 (termino)


estado 130

   92 termino: termino '/' factor .

    $default  reduce usando la regla 92 (termino)


estado 131

   79 expresion: expresion . '+' termino
   80          | expresion . '-' termino
   81          | tipo '(' expresion . ')'
   82          | expresion . '+' '(' expresion_parentesis ')'
   83          | expresion . '-' '(' expresion_parentesis ')'

    ')'  desplazar e ir al estado 151
    '+'  desplazar e ir al estado 95
    '-'  desplazar e ir al estado 96


estado 132

   77 bucle_for: FOR ID IN RANGE '(' . constante ';' constante ';' constante ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62

    constante  ir al estado 152


estado 133

   62 invocacion: ID '.' ID '(' argumentos . ')'

    ')'  desplazar e ir al estado 153


estado 134

   58 asignacion: ID '.' ID asignador expresion .
   79 expresion: expresion . '+' termino
   80          | expresion . '-' termino
   82          | expresion . '+' '(' expresion_parentesis ')'
   83          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 95
    '-'  desplazar e ir al estado 96

    $default  reduce usando la regla 58 (asignacion)


estado 135

   34 funcion_declaration: VOID ID '(' parametro ')' '{' . sentencias_metodo '}'

    $default  reduce usando la regla 42 (sentencias_metodo)

    sentencias_metodo  ir al estado 154


estado 136

   27 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase . herencia_composicion '}'
   31 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 6

    ','       reduce usando la regla 35 (funcion_declaration)
    $default  reduce usando la regla 37 (herencia_composicion)

    metodo_declaration    ir al estado 138
    funcion_declaration   ir al estado 139
    herencia_composicion  ir al estado 155


estado 137

   30 atributo_declaration: declaracion_variables ',' .

    $default  reduce usando la regla 30 (atributo_declaration)


estado 138

   31 metodos_clase: metodos_clase metodo_declaration .

    $default  reduce usando la regla 31 (metodos_clase)


estado 139

   33 metodo_declaration: funcion_declaration . ','

    ','  desplazar e ir al estado 156


estado 140

   22 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion . '}'
   36 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 157
    '}'  desplazar e ir al estado 158


estado 141

   26 interface_metodo_declaration: VOID ID . '(' parametro ')' ','

    '('  desplazar e ir al estado 159


estado 142

   31 metodos_clase: metodos_clase . metodo_declaration
   51 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase . '}'

    VOID  desplazar e ir al estado 6
    '}'   desplazar e ir al estado 160

    $default  reduce usando la regla 35 (funcion_declaration)

    metodo_declaration   ir al estado 138
    funcion_declaration  ir al estado 139


estado 143

   86 expresion_parentesis: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 86 (expresion_parentesis)


estado 144

   87 expresion_parentesis: termino '+' termino .
   91 termino: termino . '*' factor
   92        | termino . '/' factor

    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 87 (expresion_parentesis)


estado 145

   88 expresion_parentesis: termino '-' termino .
   91 termino: termino . '*' factor
   92        | termino . '/' factor

    '*'  desplazar e ir al estado 98
    '/'  desplazar e ir al estado 99

    $default  reduce usando la regla 88 (expresion_parentesis)


estado 146

    3 sentencias: sentencias . sentencia
   75 bloque_sentencias: '{' sentencias . '}'

    SHORT      desplazar e ir al estado 3
    UINT       desplazar e ir al estado 4
    DOUBLE     desplazar e ir al estado 5
    VOID       desplazar e ir al estado 6
    CLASS      desplazar e ir al estado 7
    INTERFACE  desplazar e ir al estado 8
    IMPL       desplazar e ir al estado 9
    IF         desplazar e ir al estado 10
    PRINT      desplazar e ir al estado 11
    FOR        desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    '}'        desplazar e ir al estado 161

    $default  reduce usando la regla 35 (funcion_declaration)

    sentencia                          ir al estado 49
    declarativa                        ir al estado 16
    ejecutable                         ir al estado 17
    declaracion_variables              ir al estado 18
    clase_declaration                  ir al estado 19
    interface_declaration              ir al estado 20
    implement_declaration              ir al estado 21
    funcion_declaration                ir al estado 22
    distributed_method_implementation  ir al estado 23
    objeto_declaration                 ir al estado 24
    asignacion                         ir al estado 25
    invocacion                         ir al estado 26
    seleccion                          ir al estado 27
    print                              ir al estado 28
    bucle_for                          ir al estado 29
    acceso_atributo                    ir al estado 30
    tipo                               ir al estado 31


estado 147

   65 seleccion: IF '(' condicion ')' bloque_sentencias ELSE . bloque_sentencias END_IF

    SHORT      desplazar e ir al estado 3
    UINT       desplazar e ir al estado 4
    DOUBLE     desplazar e ir al estado 5
    VOID       desplazar e ir al estado 6
    CLASS      desplazar e ir al estado 7
    INTERFACE  desplazar e ir al estado 8
    IMPL       desplazar e ir al estado 9
    IF         desplazar e ir al estado 10
    PRINT      desplazar e ir al estado 11
    FOR        desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    '{'        desplazar e ir al estado 121

    $default  reduce usando la regla 35 (funcion_declaration)

    sentencia                          ir al estado 122
    declarativa                        ir al estado 16
    ejecutable                         ir al estado 17
    declaracion_variables              ir al estado 18
    clase_declaration                  ir al estado 19
    interface_declaration              ir al estado 20
    implement_declaration              ir al estado 21
    funcion_declaration                ir al estado 22
    distributed_method_implementation  ir al estado 23
    objeto_declaration                 ir al estado 24
    asignacion                         ir al estado 25
    invocacion                         ir al estado 26
    seleccion                          ir al estado 27
    bloque_sentencias                  ir al estado 162
    print                              ir al estado 28
    bucle_for                          ir al estado 29
    acceso_atributo                    ir al estado 30
    tipo                               ir al estado 31


estado 148

   66 seleccion: IF '(' condicion ')' bloque_sentencias END_IF .

    $default  reduce usando la regla 66 (seleccion)


estado 149

   82 expresion: expresion '+' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 163


estado 150

   83 expresion: expresion '-' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 164


estado 151

   81 expresion: tipo '(' expresion ')' .

    $default  reduce usando la regla 81 (expresion)


estado 152

   77 bucle_for: FOR ID IN RANGE '(' constante . ';' constante ';' constante ')' bloque_sentencias

    ';'  desplazar e ir al estado 165


estado 153

   62 invocacion: ID '.' ID '(' argumentos ')' .

    $default  reduce usando la regla 62 (invocacion)


estado 154

   34 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo . '}'
   38 sentencias_metodo: sentencias_metodo . declaracion_variables ','
   39                  | sentencias_metodo . retorno ','
   40                  | sentencias_metodo . ejecutable ','
   41                  | sentencias_metodo . local_function_declaration ','

    SHORT   desplazar e ir al estado 3
    UINT    desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    VOID    desplazar e ir al estado 166
    IF      desplazar e ir al estado 10
    PRINT   desplazar e ir al estado 11
    FOR     desplazar e ir al estado 12
    RETURN  desplazar e ir al estado 167
    ID      desplazar e ir al estado 168
    '}'     desplazar e ir al estado 169

    ejecutable                  ir al estado 170
    declaracion_variables       ir al estado 171
    local_function_declaration  ir al estado 172
    retorno                     ir al estado 173
    asignacion                  ir al estado 25
    invocacion                  ir al estado 26
    seleccion                   ir al estado 27
    print                       ir al estado 28
    bucle_for                   ir al estado 29
    acceso_atributo             ir al estado 30
    tipo                        ir al estado 31


estado 155

   27 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion . '}'
   36 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 157
    '}'  desplazar e ir al estado 174


estado 156

   33 metodo_declaration: funcion_declaration ',' .

    $default  reduce usando la regla 33 (metodo_declaration)


estado 157

   36 herencia_composicion: herencia_composicion ID . ','

    ','  desplazar e ir al estado 175


estado 158

   22 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 22 (clase_declaration)


estado 159

   26 interface_metodo_declaration: VOID ID '(' . parametro ')' ','

    SHORT   desplazar e ir al estado 3
    UINT    desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5

    $default  reduce usando la regla 50 (parametro)

    parametro  ir al estado 176
    tipo       ir al estado 79


estado 160

   51 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}' .

    $default  reduce usando la regla 51 (distributed_method_implementation)


estado 161

   75 bloque_sentencias: '{' sentencias '}' .

    $default  reduce usando la regla 75 (bloque_sentencias)


estado 162

   65 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias . END_IF

    END_IF  desplazar e ir al estado 177


estado 163

   82 expresion: expresion '+' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 82 (expresion)


estado 164

   83 expresion: expresion '-' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 83 (expresion)


estado 165

   77 bucle_for: FOR ID IN RANGE '(' constante ';' . constante ';' constante ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62

    constante  ir al estado 178


estado 166

   43 local_function_declaration: VOID . ID '(' parametro ')' '{' sentencias_funcion_local '}'

    ID  desplazar e ir al estado 179


estado 167

   52 retorno: RETURN .

    $default  reduce usando la regla 52 (retorno)


estado 168

   57 asignacion: ID . asignador expresion
   58           | ID . '.' ID asignador expresion
   61 invocacion: ID . '(' argumentos ')'
   62           | ID . '.' ID '(' argumentos ')'
   78 acceso_atributo: ID . '.' ID

    PLUS_EQUAL  desplazar e ir al estado 40
    '='         desplazar e ir al estado 41
    '.'         desplazar e ir al estado 42
    '('         desplazar e ir al estado 44

    asignador  ir al estado 47


estado 169

   34 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo '}' .

    $default  reduce usando la regla 34 (funcion_declaration)


estado 170

   40 sentencias_metodo: sentencias_metodo ejecutable . ','

    ','  desplazar e ir al estado 180


estado 171

   38 sentencias_metodo: sentencias_metodo declaracion_variables . ','

    ','  desplazar e ir al estado 181


estado 172

   41 sentencias_metodo: sentencias_metodo local_function_declaration . ','

    ','  desplazar e ir al estado 182


estado 173

   39 sentencias_metodo: sentencias_metodo retorno . ','

    ','  desplazar e ir al estado 183


estado 174

   27 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 27 (implement_declaration)


estado 175

   36 herencia_composicion: herencia_composicion ID ',' .

    $default  reduce usando la regla 36 (herencia_composicion)


estado 176

   26 interface_metodo_declaration: VOID ID '(' parametro . ')' ','

    ')'  desplazar e ir al estado 184


estado 177

   65 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF .

    $default  reduce usando la regla 65 (seleccion)


estado 178

   77 bucle_for: FOR ID IN RANGE '(' constante ';' constante . ';' constante ')' bloque_sentencias

    ';'  desplazar e ir al estado 185


estado 179

   43 local_function_declaration: VOID ID . '(' parametro ')' '{' sentencias_funcion_local '}'

    '('  desplazar e ir al estado 186


estado 180

   40 sentencias_metodo: sentencias_metodo ejecutable ',' .

    $default  reduce usando la regla 40 (sentencias_metodo)


estado 181

   38 sentencias_metodo: sentencias_metodo declaracion_variables ',' .

    $default  reduce usando la regla 38 (sentencias_metodo)


estado 182

   41 sentencias_metodo: sentencias_metodo local_function_declaration ',' .

    $default  reduce usando la regla 41 (sentencias_metodo)


estado 183

   39 sentencias_metodo: sentencias_metodo retorno ',' .

    $default  reduce usando la regla 39 (sentencias_metodo)


estado 184

   26 interface_metodo_declaration: VOID ID '(' parametro ')' . ','

    ','  desplazar e ir al estado 187


estado 185

   77 bucle_for: FOR ID IN RANGE '(' constante ';' constante ';' . constante ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 60
    CTE_UINT    desplazar e ir al estado 61
    CTE_DOUBLE  desplazar e ir al estado 62

    constante  ir al estado 188


estado 186

   43 local_function_declaration: VOID ID '(' . parametro ')' '{' sentencias_funcion_local '}'

    SHORT   desplazar e ir al estado 3
    UINT    desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5

    $default  reduce usando la regla 50 (parametro)

    parametro  ir al estado 189
    tipo       ir al estado 79


estado 187

   26 interface_metodo_declaration: VOID ID '(' parametro ')' ',' .

    $default  reduce usando la regla 26 (interface_metodo_declaration)


estado 188

   77 bucle_for: FOR ID IN RANGE '(' constante ';' constante ';' constante . ')' bloque_sentencias

    ')'  desplazar e ir al estado 190


estado 189

   43 local_function_declaration: VOID ID '(' parametro . ')' '{' sentencias_funcion_local '}'

    ')'  desplazar e ir al estado 191


estado 190

   77 bucle_for: FOR ID IN RANGE '(' constante ';' constante ';' constante ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 3
    UINT       desplazar e ir al estado 4
    DOUBLE     desplazar e ir al estado 5
    VOID       desplazar e ir al estado 6
    CLASS      desplazar e ir al estado 7
    INTERFACE  desplazar e ir al estado 8
    IMPL       desplazar e ir al estado 9
    IF         desplazar e ir al estado 10
    PRINT      desplazar e ir al estado 11
    FOR        desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    '{'        desplazar e ir al estado 121

    $default  reduce usando la regla 35 (funcion_declaration)

    sentencia                          ir al estado 122
    declarativa                        ir al estado 16
    ejecutable                         ir al estado 17
    declaracion_variables              ir al estado 18
    clase_declaration                  ir al estado 19
    interface_declaration              ir al estado 20
    implement_declaration              ir al estado 21
    funcion_declaration                ir al estado 22
    distributed_method_implementation  ir al estado 23
    objeto_declaration                 ir al estado 24
    asignacion                         ir al estado 25
    invocacion                         ir al estado 26
    seleccion                          ir al estado 27
    bloque_sentencias                  ir al estado 192
    print                              ir al estado 28
    bucle_for                          ir al estado 29
    acceso_atributo                    ir al estado 30
    tipo                               ir al estado 31


estado 191

   43 local_function_declaration: VOID ID '(' parametro ')' . '{' sentencias_funcion_local '}'

    '{'  desplazar e ir al estado 193


estado 192

   77 bucle_for: FOR ID IN RANGE '(' constante ';' constante ';' constante ')' bloque_sentencias .

    $default  reduce usando la regla 77 (bucle_for)


estado 193

   43 local_function_declaration: VOID ID '(' parametro ')' '{' . sentencias_funcion_local '}'

    $default  reduce usando la regla 48 (sentencias_funcion_local)

    sentencias_funcion_local  ir al estado 194


estado 194

   43 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local . '}'
   44 sentencias_funcion_local: sentencias_funcion_local . declaracion_variables ','
   45                         | sentencias_funcion_local . retorno ','
   46                         | sentencias_funcion_local . ejecutable ','
   47                         | sentencias_funcion_local . local_function_declaration ','

    SHORT   desplazar e ir al estado 3
    UINT    desplazar e ir al estado 4
    DOUBLE  desplazar e ir al estado 5
    VOID    desplazar e ir al estado 166
    IF      desplazar e ir al estado 10
    PRINT   desplazar e ir al estado 11
    FOR     desplazar e ir al estado 12
    RETURN  desplazar e ir al estado 167
    ID      desplazar e ir al estado 168
    '}'     desplazar e ir al estado 195

    ejecutable                  ir al estado 196
    declaracion_variables       ir al estado 197
    local_function_declaration  ir al estado 198
    retorno                     ir al estado 199
    asignacion                  ir al estado 25
    invocacion                  ir al estado 26
    seleccion                   ir al estado 27
    print                       ir al estado 28
    bucle_for                   ir al estado 29
    acceso_atributo             ir al estado 30
    tipo                        ir al estado 31


estado 195

   43 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local '}' .

    $default  reduce usando la regla 43 (local_function_declaration)


estado 196

   46 sentencias_funcion_local: sentencias_funcion_local ejecutable . ','

    ','  desplazar e ir al estado 200


estado 197

   44 sentencias_funcion_local: sentencias_funcion_local declaracion_variables . ','

    ','  desplazar e ir al estado 201


estado 198

   47 sentencias_funcion_local: sentencias_funcion_local local_function_declaration . ','

    ','  desplazar e ir al estado 202


estado 199

   45 sentencias_funcion_local: sentencias_funcion_local retorno . ','

    ','  desplazar e ir al estado 203


estado 200

   46 sentencias_funcion_local: sentencias_funcion_local ejecutable ',' .

    $default  reduce usando la regla 46 (sentencias_funcion_local)


estado 201

   44 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ',' .

    $default  reduce usando la regla 44 (sentencias_funcion_local)


estado 202

   47 sentencias_funcion_local: sentencias_funcion_local local_function_declaration ',' .

    $default  reduce usando la regla 47 (sentencias_funcion_local)


estado 203

   45 sentencias_funcion_local: sentencias_funcion_local retorno ',' .

    $default  reduce usando la regla 45 (sentencias_funcion_local)
