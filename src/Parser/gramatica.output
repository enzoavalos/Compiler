Gramática

    0 $accept: programa $end

    1 programa: '{' sentencias '}'
    2         | '{' sentencias
    3         | sentencias '}'

    4 sentencias: sentencia
    5           | sentencias sentencia

    6 sentencia: declarativa ','
    7          | ejecutable ','

    8 declarativa: declaracion_variables
    9            | clase_declaration
   10            | objeto_declaration
   11            | interface_declaration
   12            | implement_declaration
   13            | distributed_method_implementation
   14            | funcion_declaration

   15 ejecutable: asignacion
   16           | invocacion
   17           | seleccion
   18           | print
   19           | bucle_for
   20           | acceso_atributo

   21 declaracion_variables: tipo lista_variables

   22 lista_variables: lista_variables ';' ID
   23                | ID

   24 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}'

   25 interface_declaration: INTERFACE ID '{' interface_metodos '}'

   26 interface_metodos: interface_metodos interface_metodo_declaration
   27                  | /* vacío */

   28 interface_metodo_declaration: VOID ID '(' parametro ')' ','

   29 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

   30 atributos: atributos atributo_declaration
   31          | /* vacío */

   32 atributo_declaration: declaracion_variables ','

   33 metodos_clase: metodos_clase metodo_declaration
   34              | /* vacío */

   35 metodo_declaration: funcion_declaration ','

   36 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo '}'
   37                    | /* vacío */

   38 herencia_composicion: herencia_composicion ID ','
   39                     | /* vacío */

   40 sentencias_metodo: sentencias_metodo declaracion_variables ','
   41                  | sentencias_metodo retorno ','
   42                  | sentencias_metodo ejecutable ','
   43                  | sentencias_metodo local_function_declaration ','
   44                  | /* vacío */

   45 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local '}'

   46 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ','
   47                         | sentencias_funcion_local retorno ','
   48                         | sentencias_funcion_local ejecutable ','
   49                         | sentencias_funcion_local local_function_declaration ','
   50                         | /* vacío */

   51 parametro: tipo ID
   52          | ID
   53          | parametro ';' tipo ID
   54          | /* vacío */

   55 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}'

   56 retorno: RETURN
   57        | /* vacío */

   58 objeto_declaration: ID lista_objetos

   59 lista_objetos: lista_objetos ';' objeto
   60              | objeto

   61 objeto: ID

   62 asignacion: ID asignador expresion
   63           | ID '.' ID asignador expresion
   64           | ID asignador
   65           | ID '.' ID asignador

   66 asignador: '='
   67          | PLUS_EQUAL

   68 invocacion: ID '(' argumentos ')'
   69           | ID '.' ID '(' argumentos ')'

   70 argumentos: expresion
   71           | argumentos ';' expresion
   72           | /* vacío */

   73 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   74          | IF '(' condicion ')' bloque_sentencias END_IF
   75          | IF '(' condicion ')' bloque_sentencias
   76          | IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias

   77 condicion: expresion comparador expresion
   78          | expresion comparador
   79          | comparador expresion
   80          | expresion

   81 comparador: '<'
   82           | '>'
   83           | LESS_EQUAL
   84           | GREATER_EQUAL
   85           | EQUAL
   86           | NOT_EQUAL

   87 bloque_sentencias: sentencia
   88                  | '{' sentencias '}'

   89 print: PRINT STRING
   90      | PRINT
   91      | STRING

   92 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   93          | ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   94          | FOR IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   95          | FOR ID IN '(' argumento_bucle_for ')' bloque_sentencias
   96          | FOR ID RANGE '(' argumento_bucle_for ')' bloque_sentencias

   97 argumento_bucle_for: constante ';' constante ';' constante
   98                    | constante ';' constante
   99                    | constante
  100                    | /* vacío */

  101 acceso_atributo: ID '.' ID

  102 expresion: expresion '+' termino
  103          | expresion '-' termino
  104          | tipo '(' expresion ')'
  105          | expresion '+' '(' expresion_parentesis ')'
  106          | expresion '-' '(' expresion_parentesis ')'
  107          | '(' expresion_parentesis ')'
  108          | termino

  109 expresion_parentesis: '(' expresion_parentesis ')'
  110                     | termino '+' termino
  111                     | termino '-' termino
  112                     | termino

  113 termino: factor
  114        | termino '*' factor
  115        | termino '/' factor

  116 factor: ID
  117       | '-' constante
  118       | constante

  119 constante: CTE_SHORT
  120          | CTE_DOUBLE
  121          | CTE_UINT

  122 tipo: SHORT
  123     | UINT
  124     | DOUBLE


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 28 36 45 68 69 73 74 75 76 92 93 94 95 96 104 105 106 107
    109
')' (41) 28 36 45 68 69 73 74 75 76 92 93 94 95 96 104 105 106 107
    109
'*' (42) 114
'+' (43) 102 105 110
',' (44) 6 7 28 32 35 38 40 41 42 43 46 47 48 49
'-' (45) 103 106 111 117
'.' (46) 63 65 69 101
'/' (47) 115
':' (58) 55
';' (59) 22 53 59 71 97 98
'<' (60) 81
'=' (61) 66
'>' (62) 82
'{' (123) 1 2 24 25 29 36 45 55 88
'}' (125) 1 3 24 25 29 36 45 55 88
error (256)
SHORT (258) 122
UINT (259) 123
DOUBLE (260) 124
VOID (261) 28 36 45
CLASS (262) 24 29
INTERFACE (263) 25
IMPLEMENT (264) 29
IMPL (265) 55
IF (266) 73 74 75 76
ELSE (267) 73 76
END_IF (268) 73 74
PRINT (269) 89 90
FOR (270) 55 92 94 95 96
IN (271) 92 93 94 95
RANGE (272) 92 93 94 96
RETURN (273) 56
LESS_EQUAL (274) 83
GREATER_EQUAL (275) 84
EQUAL (276) 85
NOT_EQUAL (277) 86
PLUS_EQUAL (278) 67
ID (279) 22 23 24 25 28 29 36 38 45 51 52 53 55 58 61 62 63 64 65 68
    69 92 93 95 96 101 116
STRING (280) 89 91
CTE_SHORT (281) 119
CTE_UINT (282) 121
CTE_DOUBLE (283) 120


No terminales con las reglas donde aparecen

$accept (44)
    en la izquierda: 0
programa (45)
    en la izquierda: 1 2 3, en la derecha: 0
sentencias (46)
    en la izquierda: 4 5, en la derecha: 1 2 3 5 88
sentencia (47)
    en la izquierda: 6 7, en la derecha: 4 5 87
declarativa (48)
    en la izquierda: 8 9 10 11 12 13 14, en la derecha: 6
ejecutable (49)
    en la izquierda: 15 16 17 18 19 20, en la derecha: 7 42 48
declaracion_variables (50)
    en la izquierda: 21, en la derecha: 8 32 40 46
lista_variables (51)
    en la izquierda: 22 23, en la derecha: 21 22
clase_declaration (52)
    en la izquierda: 24, en la derecha: 9
interface_declaration (53)
    en la izquierda: 25, en la derecha: 11
interface_metodos (54)
    en la izquierda: 26 27, en la derecha: 25 26
interface_metodo_declaration (55)
    en la izquierda: 28, en la derecha: 26
implement_declaration (56)
    en la izquierda: 29, en la derecha: 12
atributos (57)
    en la izquierda: 30 31, en la derecha: 24 30
atributo_declaration (58)
    en la izquierda: 32, en la derecha: 30
metodos_clase (59)
    en la izquierda: 33 34, en la derecha: 24 29 33 55
metodo_declaration (60)
    en la izquierda: 35, en la derecha: 33
funcion_declaration (61)
    en la izquierda: 36 37, en la derecha: 14 35
herencia_composicion (62)
    en la izquierda: 38 39, en la derecha: 24 29 38
sentencias_metodo (63)
    en la izquierda: 40 41 42 43 44, en la derecha: 36 40 41 42 43
local_function_declaration (64)
    en la izquierda: 45, en la derecha: 43 49
sentencias_funcion_local (65)
    en la izquierda: 46 47 48 49 50, en la derecha: 45 46 47 48 49
parametro (66)
    en la izquierda: 51 52 53 54, en la derecha: 28 36 45 53
distributed_method_implementation (67)
    en la izquierda: 55, en la derecha: 13
retorno (68)
    en la izquierda: 56 57, en la derecha: 41 47
objeto_declaration (69)
    en la izquierda: 58, en la derecha: 10
lista_objetos (70)
    en la izquierda: 59 60, en la derecha: 58 59
objeto (71)
    en la izquierda: 61, en la derecha: 59 60
asignacion (72)
    en la izquierda: 62 63 64 65, en la derecha: 15
asignador (73)
    en la izquierda: 66 67, en la derecha: 62 63 64 65
invocacion (74)
    en la izquierda: 68 69, en la derecha: 16
argumentos (75)
    en la izquierda: 70 71 72, en la derecha: 68 69 71
seleccion (76)
    en la izquierda: 73 74 75 76, en la derecha: 17
condicion (77)
    en la izquierda: 77 78 79 80, en la derecha: 73 74 75 76
comparador (78)
    en la izquierda: 81 82 83 84 85 86, en la derecha: 77 78 79
bloque_sentencias (79)
    en la izquierda: 87 88, en la derecha: 73 74 75 76 92 93 94 95
    96
print (80)
    en la izquierda: 89 90 91, en la derecha: 18
bucle_for (81)
    en la izquierda: 92 93 94 95 96, en la derecha: 19
argumento_bucle_for (82)
    en la izquierda: 97 98 99 100, en la derecha: 92 93 94 95 96
acceso_atributo (83)
    en la izquierda: 101, en la derecha: 20
expresion (84)
    en la izquierda: 102 103 104 105 106 107 108, en la derecha: 62
    63 70 71 77 78 79 80 102 103 104 105 106
expresion_parentesis (85)
    en la izquierda: 109 110 111 112, en la derecha: 105 106 107 109
termino (86)
    en la izquierda: 113 114 115, en la derecha: 102 103 108 110 111
    112 114 115
factor (87)
    en la izquierda: 116 117 118, en la derecha: 113 114 115
constante (88)
    en la izquierda: 119 120 121, en la derecha: 97 98 99 117 118
tipo (89)
    en la izquierda: 122 123 124, en la derecha: 21 51 53 104


estado 0

    0 $accept: . programa $end

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '{'        desplazar e ir al estado 13

    $default  reduce usando la regla 37 (funcion_declaration)

    programa                           ir al estado 14
    sentencias                         ir al estado 15
    sentencia                          ir al estado 16
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 1

  122 tipo: SHORT .

    $default  reduce usando la regla 122 (tipo)


estado 2

  123 tipo: UINT .

    $default  reduce usando la regla 123 (tipo)


estado 3

  124 tipo: DOUBLE .

    $default  reduce usando la regla 124 (tipo)


estado 4

   36 funcion_declaration: VOID . ID '(' parametro ')' '{' sentencias_metodo '}'

    ID  desplazar e ir al estado 33


estado 5

   24 clase_declaration: CLASS . ID '{' atributos metodos_clase herencia_composicion '}'
   29 implement_declaration: CLASS . ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 34


estado 6

   25 interface_declaration: INTERFACE . ID '{' interface_metodos '}'

    ID  desplazar e ir al estado 35


estado 7

   55 distributed_method_implementation: IMPL . FOR ID ':' '{' metodos_clase '}'

    FOR  desplazar e ir al estado 36


estado 8

   73 seleccion: IF . '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   74          | IF . '(' condicion ')' bloque_sentencias END_IF
   75          | IF . '(' condicion ')' bloque_sentencias
   76          | IF . '(' condicion ')' bloque_sentencias ELSE bloque_sentencias

    '('  desplazar e ir al estado 37


estado 9

   89 print: PRINT . STRING
   90      | PRINT .

    STRING  desplazar e ir al estado 38

    $default  reduce usando la regla 90 (print)


estado 10

   92 bucle_for: FOR . ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   94          | FOR . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   95          | FOR . ID IN '(' argumento_bucle_for ')' bloque_sentencias
   96          | FOR . ID RANGE '(' argumento_bucle_for ')' bloque_sentencias

    IN  desplazar e ir al estado 39
    ID  desplazar e ir al estado 40


estado 11

   58 objeto_declaration: ID . lista_objetos
   62 asignacion: ID . asignador expresion
   63           | ID . '.' ID asignador expresion
   64           | ID . asignador
   65           | ID . '.' ID asignador
   68 invocacion: ID . '(' argumentos ')'
   69           | ID . '.' ID '(' argumentos ')'
   93 bucle_for: ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
  101 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 41
    PLUS_EQUAL  desplazar e ir al estado 42
    '='         desplazar e ir al estado 43
    '.'         desplazar e ir al estado 44
    ID          desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    lista_objetos  ir al estado 47
    objeto         ir al estado 48
    asignador      ir al estado 49


estado 12

   91 print: STRING .

    $default  reduce usando la regla 91 (print)


estado 13

    1 programa: '{' . sentencias '}'
    2         | '{' . sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencias                         ir al estado 50
    sentencia                          ir al estado 16
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 14

    0 $accept: programa . $end

    $end  desplazar e ir al estado 51


estado 15

    3 programa: sentencias . '}'
    5 sentencias: sentencias . sentencia

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '}'        desplazar e ir al estado 52

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencia                          ir al estado 53
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 16

    4 sentencias: sentencia .

    $default  reduce usando la regla 4 (sentencias)


estado 17

    6 sentencia: declarativa . ','

    ','  desplazar e ir al estado 54


estado 18

    7 sentencia: ejecutable . ','

    ','  desplazar e ir al estado 55


estado 19

    8 declarativa: declaracion_variables .

    $default  reduce usando la regla 8 (declarativa)


estado 20

    9 declarativa: clase_declaration .

    $default  reduce usando la regla 9 (declarativa)


estado 21

   11 declarativa: interface_declaration .

    $default  reduce usando la regla 11 (declarativa)


estado 22

   12 declarativa: implement_declaration .

    $default  reduce usando la regla 12 (declarativa)


estado 23

   14 declarativa: funcion_declaration .

    $default  reduce usando la regla 14 (declarativa)


estado 24

   13 declarativa: distributed_method_implementation .

    $default  reduce usando la regla 13 (declarativa)


estado 25

   10 declarativa: objeto_declaration .

    $default  reduce usando la regla 10 (declarativa)


estado 26

   15 ejecutable: asignacion .

    $default  reduce usando la regla 15 (ejecutable)


estado 27

   16 ejecutable: invocacion .

    $default  reduce usando la regla 16 (ejecutable)


estado 28

   17 ejecutable: seleccion .

    $default  reduce usando la regla 17 (ejecutable)


estado 29

   18 ejecutable: print .

    $default  reduce usando la regla 18 (ejecutable)


estado 30

   19 ejecutable: bucle_for .

    $default  reduce usando la regla 19 (ejecutable)


estado 31

   20 ejecutable: acceso_atributo .

    $default  reduce usando la regla 20 (ejecutable)


estado 32

   21 declaracion_variables: tipo . lista_variables

    ID  desplazar e ir al estado 56

    lista_variables  ir al estado 57


estado 33

   36 funcion_declaration: VOID ID . '(' parametro ')' '{' sentencias_metodo '}'

    '('  desplazar e ir al estado 58


estado 34

   24 clase_declaration: CLASS ID . '{' atributos metodos_clase herencia_composicion '}'
   29 implement_declaration: CLASS ID . IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    IMPLEMENT  desplazar e ir al estado 59
    '{'        desplazar e ir al estado 60


estado 35

   25 interface_declaration: INTERFACE ID . '{' interface_metodos '}'

    '{'  desplazar e ir al estado 61


estado 36

   55 distributed_method_implementation: IMPL FOR . ID ':' '{' metodos_clase '}'

    ID  desplazar e ir al estado 62


estado 37

   73 seleccion: IF '(' . condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   74          | IF '(' . condicion ')' bloque_sentencias END_IF
   75          | IF '(' . condicion ')' bloque_sentencias
   76          | IF '(' . condicion ')' bloque_sentencias ELSE bloque_sentencias

    SHORT          desplazar e ir al estado 1
    UINT           desplazar e ir al estado 2
    DOUBLE         desplazar e ir al estado 3
    LESS_EQUAL     desplazar e ir al estado 63
    GREATER_EQUAL  desplazar e ir al estado 64
    EQUAL          desplazar e ir al estado 65
    NOT_EQUAL      desplazar e ir al estado 66
    ID             desplazar e ir al estado 67
    CTE_SHORT      desplazar e ir al estado 68
    CTE_UINT       desplazar e ir al estado 69
    CTE_DOUBLE     desplazar e ir al estado 70
    '('            desplazar e ir al estado 71
    '<'            desplazar e ir al estado 72
    '>'            desplazar e ir al estado 73
    '-'            desplazar e ir al estado 74

    condicion   ir al estado 75
    comparador  ir al estado 76
    expresion   ir al estado 77
    termino     ir al estado 78
    factor      ir al estado 79
    constante   ir al estado 80
    tipo        ir al estado 81


estado 38

   89 print: PRINT STRING .

    $default  reduce usando la regla 89 (print)


estado 39

   94 bucle_for: FOR IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 82


estado 40

   92 bucle_for: FOR ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   95          | FOR ID . IN '(' argumento_bucle_for ')' bloque_sentencias
   96          | FOR ID . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    IN     desplazar e ir al estado 83
    RANGE  desplazar e ir al estado 84


estado 41

   93 bucle_for: ID IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 85


estado 42

   67 asignador: PLUS_EQUAL .

    $default  reduce usando la regla 67 (asignador)


estado 43

   66 asignador: '=' .

    $default  reduce usando la regla 66 (asignador)


estado 44

   63 asignacion: ID '.' . ID asignador expresion
   65           | ID '.' . ID asignador
   69 invocacion: ID '.' . ID '(' argumentos ')'
  101 acceso_atributo: ID '.' . ID

    ID  desplazar e ir al estado 86


estado 45

   61 objeto: ID .

    $default  reduce usando la regla 61 (objeto)


estado 46

   68 invocacion: ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 71
    '-'         desplazar e ir al estado 74

    $default  reduce usando la regla 72 (argumentos)

    argumentos  ir al estado 87
    expresion   ir al estado 88
    termino     ir al estado 78
    factor      ir al estado 79
    constante   ir al estado 80
    tipo        ir al estado 81


estado 47

   58 objeto_declaration: ID lista_objetos .
   59 lista_objetos: lista_objetos . ';' objeto

    ';'  desplazar e ir al estado 89

    $default  reduce usando la regla 58 (objeto_declaration)


estado 48

   60 lista_objetos: objeto .

    $default  reduce usando la regla 60 (lista_objetos)


estado 49

   62 asignacion: ID asignador . expresion
   64           | ID asignador .

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 71
    '-'         desplazar e ir al estado 74

    $default  reduce usando la regla 64 (asignacion)

    expresion  ir al estado 90
    termino    ir al estado 78
    factor     ir al estado 79
    constante  ir al estado 80
    tipo       ir al estado 81


estado 50

    1 programa: '{' sentencias . '}'
    2         | '{' sentencias .
    5 sentencias: sentencias . sentencia

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '}'        desplazar e ir al estado 91

    ','       reduce usando la regla 37 (funcion_declaration)
    $default  reduce usando la regla 2 (programa)

    sentencia                          ir al estado 53
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 51

    0 $accept: programa $end .

    $default  aceptar


estado 52

    3 programa: sentencias '}' .

    $default  reduce usando la regla 3 (programa)


estado 53

    5 sentencias: sentencias sentencia .

    $default  reduce usando la regla 5 (sentencias)


estado 54

    6 sentencia: declarativa ',' .

    $default  reduce usando la regla 6 (sentencia)


estado 55

    7 sentencia: ejecutable ',' .

    $default  reduce usando la regla 7 (sentencia)


estado 56

   23 lista_variables: ID .

    $default  reduce usando la regla 23 (lista_variables)


estado 57

   21 declaracion_variables: tipo lista_variables .
   22 lista_variables: lista_variables . ';' ID

    ';'  desplazar e ir al estado 92

    $default  reduce usando la regla 21 (declaracion_variables)


estado 58

   36 funcion_declaration: VOID ID '(' . parametro ')' '{' sentencias_metodo '}'

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    ID      desplazar e ir al estado 93

    $default  reduce usando la regla 54 (parametro)

    parametro  ir al estado 94
    tipo       ir al estado 95


estado 59

   29 implement_declaration: CLASS ID IMPLEMENT . ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 96


estado 60

   24 clase_declaration: CLASS ID '{' . atributos metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 31 (atributos)

    atributos  ir al estado 97


estado 61

   25 interface_declaration: INTERFACE ID '{' . interface_metodos '}'

    $default  reduce usando la regla 27 (interface_metodos)

    interface_metodos  ir al estado 98


estado 62

   55 distributed_method_implementation: IMPL FOR ID . ':' '{' metodos_clase '}'

    ':'  desplazar e ir al estado 99


estado 63

   83 comparador: LESS_EQUAL .

    $default  reduce usando la regla 83 (comparador)


estado 64

   84 comparador: GREATER_EQUAL .

    $default  reduce usando la regla 84 (comparador)


estado 65

   85 comparador: EQUAL .

    $default  reduce usando la regla 85 (comparador)


estado 66

   86 comparador: NOT_EQUAL .

    $default  reduce usando la regla 86 (comparador)


estado 67

  116 factor: ID .

    $default  reduce usando la regla 116 (factor)


estado 68

  119 constante: CTE_SHORT .

    $default  reduce usando la regla 119 (constante)


estado 69

  121 constante: CTE_UINT .

    $default  reduce usando la regla 121 (constante)


estado 70

  120 constante: CTE_DOUBLE .

    $default  reduce usando la regla 120 (constante)


estado 71

  107 expresion: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 100
    '-'         desplazar e ir al estado 74

    expresion_parentesis  ir al estado 101
    termino               ir al estado 102
    factor                ir al estado 79
    constante             ir al estado 80


estado 72

   81 comparador: '<' .

    $default  reduce usando la regla 81 (comparador)


estado 73

   82 comparador: '>' .

    $default  reduce usando la regla 82 (comparador)


estado 74

  117 factor: '-' . constante

    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70

    constante  ir al estado 103


estado 75

   73 seleccion: IF '(' condicion . ')' bloque_sentencias ELSE bloque_sentencias END_IF
   74          | IF '(' condicion . ')' bloque_sentencias END_IF
   75          | IF '(' condicion . ')' bloque_sentencias
   76          | IF '(' condicion . ')' bloque_sentencias ELSE bloque_sentencias

    ')'  desplazar e ir al estado 104


estado 76

   79 condicion: comparador . expresion

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 71
    '-'         desplazar e ir al estado 74

    expresion  ir al estado 105
    termino    ir al estado 78
    factor     ir al estado 79
    constante  ir al estado 80
    tipo       ir al estado 81


estado 77

   77 condicion: expresion . comparador expresion
   78          | expresion . comparador
   80          | expresion .
  102 expresion: expresion . '+' termino
  103          | expresion . '-' termino
  105          | expresion . '+' '(' expresion_parentesis ')'
  106          | expresion . '-' '(' expresion_parentesis ')'

    LESS_EQUAL     desplazar e ir al estado 63
    GREATER_EQUAL  desplazar e ir al estado 64
    EQUAL          desplazar e ir al estado 65
    NOT_EQUAL      desplazar e ir al estado 66
    '<'            desplazar e ir al estado 72
    '>'            desplazar e ir al estado 73
    '+'            desplazar e ir al estado 106
    '-'            desplazar e ir al estado 107

    $default  reduce usando la regla 80 (condicion)

    comparador  ir al estado 108


estado 78

  108 expresion: termino .
  114 termino: termino . '*' factor
  115        | termino . '/' factor

    '*'  desplazar e ir al estado 109
    '/'  desplazar e ir al estado 110

    $default  reduce usando la regla 108 (expresion)


estado 79

  113 termino: factor .

    $default  reduce usando la regla 113 (termino)


estado 80

  118 factor: constante .

    $default  reduce usando la regla 118 (factor)


estado 81

  104 expresion: tipo . '(' expresion ')'

    '('  desplazar e ir al estado 111


estado 82

   94 bucle_for: FOR IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 112


estado 83

   92 bucle_for: FOR ID IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias
   95          | FOR ID IN . '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 113
    '('    desplazar e ir al estado 114


estado 84

   96 bucle_for: FOR ID RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 115


estado 85

   93 bucle_for: ID IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 116


estado 86

   63 asignacion: ID '.' ID . asignador expresion
   65           | ID '.' ID . asignador
   69 invocacion: ID '.' ID . '(' argumentos ')'
  101 acceso_atributo: ID '.' ID .

    PLUS_EQUAL  desplazar e ir al estado 42
    '='         desplazar e ir al estado 43
    '('         desplazar e ir al estado 117

    $default  reduce usando la regla 101 (acceso_atributo)

    asignador  ir al estado 118


estado 87

   68 invocacion: ID '(' argumentos . ')'
   71 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 119
    ')'  desplazar e ir al estado 120


estado 88

   70 argumentos: expresion .
  102 expresion: expresion . '+' termino
  103          | expresion . '-' termino
  105          | expresion . '+' '(' expresion_parentesis ')'
  106          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 106
    '-'  desplazar e ir al estado 107

    $default  reduce usando la regla 70 (argumentos)


estado 89

   59 lista_objetos: lista_objetos ';' . objeto

    ID  desplazar e ir al estado 45

    objeto  ir al estado 121


estado 90

   62 asignacion: ID asignador expresion .
  102 expresion: expresion . '+' termino
  103          | expresion . '-' termino
  105          | expresion . '+' '(' expresion_parentesis ')'
  106          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 106
    '-'  desplazar e ir al estado 107

    $default  reduce usando la regla 62 (asignacion)


estado 91

    1 programa: '{' sentencias '}' .

    $default  reduce usando la regla 1 (programa)


estado 92

   22 lista_variables: lista_variables ';' . ID

    ID  desplazar e ir al estado 122


estado 93

   52 parametro: ID .

    $default  reduce usando la regla 52 (parametro)


estado 94

   36 funcion_declaration: VOID ID '(' parametro . ')' '{' sentencias_metodo '}'
   53 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 123
    ')'  desplazar e ir al estado 124


estado 95

   51 parametro: tipo . ID

    ID  desplazar e ir al estado 125


estado 96

   29 implement_declaration: CLASS ID IMPLEMENT ID . '{' metodos_clase herencia_composicion '}'

    '{'  desplazar e ir al estado 126


estado 97

   24 clase_declaration: CLASS ID '{' atributos . metodos_clase herencia_composicion '}'
   30 atributos: atributos . atributo_declaration

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3

    $default  reduce usando la regla 34 (metodos_clase)

    declaracion_variables  ir al estado 127
    atributo_declaration   ir al estado 128
    metodos_clase          ir al estado 129
    tipo                   ir al estado 32


estado 98

   25 interface_declaration: INTERFACE ID '{' interface_metodos . '}'
   26 interface_metodos: interface_metodos . interface_metodo_declaration

    VOID  desplazar e ir al estado 130
    '}'   desplazar e ir al estado 131

    interface_metodo_declaration  ir al estado 132


estado 99

   55 distributed_method_implementation: IMPL FOR ID ':' . '{' metodos_clase '}'

    '{'  desplazar e ir al estado 133


estado 100

  109 expresion_parentesis: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 100
    '-'         desplazar e ir al estado 74

    expresion_parentesis  ir al estado 134
    termino               ir al estado 102
    factor                ir al estado 79
    constante             ir al estado 80


estado 101

  107 expresion: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 135


estado 102

  110 expresion_parentesis: termino . '+' termino
  111                     | termino . '-' termino
  112                     | termino .
  114 termino: termino . '*' factor
  115        | termino . '/' factor

    '+'  desplazar e ir al estado 136
    '-'  desplazar e ir al estado 137
    '*'  desplazar e ir al estado 109
    '/'  desplazar e ir al estado 110

    $default  reduce usando la regla 112 (expresion_parentesis)


estado 103

  117 factor: '-' constante .

    $default  reduce usando la regla 117 (factor)


estado 104

   73 seleccion: IF '(' condicion ')' . bloque_sentencias ELSE bloque_sentencias END_IF
   74          | IF '(' condicion ')' . bloque_sentencias END_IF
   75          | IF '(' condicion ')' . bloque_sentencias
   76          | IF '(' condicion ')' . bloque_sentencias ELSE bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '{'        desplazar e ir al estado 138

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    bloque_sentencias                  ir al estado 140
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 105

   79 condicion: comparador expresion .
  102 expresion: expresion . '+' termino
  103          | expresion . '-' termino
  105          | expresion . '+' '(' expresion_parentesis ')'
  106          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 106
    '-'  desplazar e ir al estado 107

    $default  reduce usando la regla 79 (condicion)


estado 106

  102 expresion: expresion '+' . termino
  105          | expresion '+' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 141
    '-'         desplazar e ir al estado 74

    termino    ir al estado 142
    factor     ir al estado 79
    constante  ir al estado 80


estado 107

  103 expresion: expresion '-' . termino
  106          | expresion '-' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 143
    '-'         desplazar e ir al estado 74

    termino    ir al estado 144
    factor     ir al estado 79
    constante  ir al estado 80


estado 108

   77 condicion: expresion comparador . expresion
   78          | expresion comparador .

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 71
    '-'         desplazar e ir al estado 74

    $default  reduce usando la regla 78 (condicion)

    expresion  ir al estado 145
    termino    ir al estado 78
    factor     ir al estado 79
    constante  ir al estado 80
    tipo       ir al estado 81


estado 109

  114 termino: termino '*' . factor

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '-'         desplazar e ir al estado 74

    factor     ir al estado 146
    constante  ir al estado 80


estado 110

  115 termino: termino '/' . factor

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '-'         desplazar e ir al estado 74

    factor     ir al estado 147
    constante  ir al estado 80


estado 111

  104 expresion: tipo '(' . expresion ')'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 71
    '-'         desplazar e ir al estado 74

    expresion  ir al estado 148
    termino    ir al estado 78
    factor     ir al estado 79
    constante  ir al estado 80
    tipo       ir al estado 81


estado 112

   94 bucle_for: FOR IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70

    $default  reduce usando la regla 100 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 149
    constante            ir al estado 150


estado 113

   92 bucle_for: FOR ID IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 151


estado 114

   95 bucle_for: FOR ID IN '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70

    $default  reduce usando la regla 100 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 152
    constante            ir al estado 150


estado 115

   96 bucle_for: FOR ID RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70

    $default  reduce usando la regla 100 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 153
    constante            ir al estado 150


estado 116

   93 bucle_for: ID IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70

    $default  reduce usando la regla 100 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 154
    constante            ir al estado 150


estado 117

   69 invocacion: ID '.' ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 71
    '-'         desplazar e ir al estado 74

    $default  reduce usando la regla 72 (argumentos)

    argumentos  ir al estado 155
    expresion   ir al estado 88
    termino     ir al estado 78
    factor      ir al estado 79
    constante   ir al estado 80
    tipo        ir al estado 81


estado 118

   63 asignacion: ID '.' ID asignador . expresion
   65           | ID '.' ID asignador .

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 71
    '-'         desplazar e ir al estado 74

    $default  reduce usando la regla 65 (asignacion)

    expresion  ir al estado 156
    termino    ir al estado 78
    factor     ir al estado 79
    constante  ir al estado 80
    tipo       ir al estado 81


estado 119

   71 argumentos: argumentos ';' . expresion

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 71
    '-'         desplazar e ir al estado 74

    expresion  ir al estado 157
    termino    ir al estado 78
    factor     ir al estado 79
    constante  ir al estado 80
    tipo       ir al estado 81


estado 120

   68 invocacion: ID '(' argumentos ')' .

    $default  reduce usando la regla 68 (invocacion)


estado 121

   59 lista_objetos: lista_objetos ';' objeto .

    $default  reduce usando la regla 59 (lista_objetos)


estado 122

   22 lista_variables: lista_variables ';' ID .

    $default  reduce usando la regla 22 (lista_variables)


estado 123

   53 parametro: parametro ';' . tipo ID

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3

    tipo  ir al estado 158


estado 124

   36 funcion_declaration: VOID ID '(' parametro ')' . '{' sentencias_metodo '}'

    '{'  desplazar e ir al estado 159


estado 125

   51 parametro: tipo ID .

    $default  reduce usando la regla 51 (parametro)


estado 126

   29 implement_declaration: CLASS ID IMPLEMENT ID '{' . metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 34 (metodos_clase)

    metodos_clase  ir al estado 160


estado 127

   32 atributo_declaration: declaracion_variables . ','

    ','  desplazar e ir al estado 161


estado 128

   30 atributos: atributos atributo_declaration .

    $default  reduce usando la regla 30 (atributos)


estado 129

   24 clase_declaration: CLASS ID '{' atributos metodos_clase . herencia_composicion '}'
   33 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 4

    ','       reduce usando la regla 37 (funcion_declaration)
    $default  reduce usando la regla 39 (herencia_composicion)

    metodo_declaration    ir al estado 162
    funcion_declaration   ir al estado 163
    herencia_composicion  ir al estado 164


estado 130

   28 interface_metodo_declaration: VOID . ID '(' parametro ')' ','

    ID  desplazar e ir al estado 165


estado 131

   25 interface_declaration: INTERFACE ID '{' interface_metodos '}' .

    $default  reduce usando la regla 25 (interface_declaration)


estado 132

   26 interface_metodos: interface_metodos interface_metodo_declaration .

    $default  reduce usando la regla 26 (interface_metodos)


estado 133

   55 distributed_method_implementation: IMPL FOR ID ':' '{' . metodos_clase '}'

    $default  reduce usando la regla 34 (metodos_clase)

    metodos_clase  ir al estado 166


estado 134

  109 expresion_parentesis: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 167


estado 135

  107 expresion: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 107 (expresion)


estado 136

  110 expresion_parentesis: termino '+' . termino

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '-'         desplazar e ir al estado 74

    termino    ir al estado 168
    factor     ir al estado 79
    constante  ir al estado 80


estado 137

  111 expresion_parentesis: termino '-' . termino

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '-'         desplazar e ir al estado 74

    termino    ir al estado 169
    factor     ir al estado 79
    constante  ir al estado 80


estado 138

   88 bloque_sentencias: '{' . sentencias '}'

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencias                         ir al estado 170
    sentencia                          ir al estado 16
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 139

   87 bloque_sentencias: sentencia .

    $default  reduce usando la regla 87 (bloque_sentencias)


estado 140

   73 seleccion: IF '(' condicion ')' bloque_sentencias . ELSE bloque_sentencias END_IF
   74          | IF '(' condicion ')' bloque_sentencias . END_IF
   75          | IF '(' condicion ')' bloque_sentencias .
   76          | IF '(' condicion ')' bloque_sentencias . ELSE bloque_sentencias

    ELSE    desplazar e ir al estado 171
    END_IF  desplazar e ir al estado 172

    $default  reduce usando la regla 75 (seleccion)


estado 141

  105 expresion: expresion '+' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 100
    '-'         desplazar e ir al estado 74

    expresion_parentesis  ir al estado 173
    termino               ir al estado 102
    factor                ir al estado 79
    constante             ir al estado 80


estado 142

  102 expresion: expresion '+' termino .
  114 termino: termino . '*' factor
  115        | termino . '/' factor

    '*'  desplazar e ir al estado 109
    '/'  desplazar e ir al estado 110

    $default  reduce usando la regla 102 (expresion)


estado 143

  106 expresion: expresion '-' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 67
    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70
    '('         desplazar e ir al estado 100
    '-'         desplazar e ir al estado 74

    expresion_parentesis  ir al estado 174
    termino               ir al estado 102
    factor                ir al estado 79
    constante             ir al estado 80


estado 144

  103 expresion: expresion '-' termino .
  114 termino: termino . '*' factor
  115        | termino . '/' factor

    '*'  desplazar e ir al estado 109
    '/'  desplazar e ir al estado 110

    $default  reduce usando la regla 103 (expresion)


estado 145

   77 condicion: expresion comparador expresion .
  102 expresion: expresion . '+' termino
  103          | expresion . '-' termino
  105          | expresion . '+' '(' expresion_parentesis ')'
  106          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 106
    '-'  desplazar e ir al estado 107

    $default  reduce usando la regla 77 (condicion)


estado 146

  114 termino: termino '*' factor .

    $default  reduce usando la regla 114 (termino)


estado 147

  115 termino: termino '/' factor .

    $default  reduce usando la regla 115 (termino)


estado 148

  102 expresion: expresion . '+' termino
  103          | expresion . '-' termino
  104          | tipo '(' expresion . ')'
  105          | expresion . '+' '(' expresion_parentesis ')'
  106          | expresion . '-' '(' expresion_parentesis ')'

    ')'  desplazar e ir al estado 175
    '+'  desplazar e ir al estado 106
    '-'  desplazar e ir al estado 107


estado 149

   94 bucle_for: FOR IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 176


estado 150

   97 argumento_bucle_for: constante . ';' constante ';' constante
   98                    | constante . ';' constante
   99                    | constante .

    ';'  desplazar e ir al estado 177

    $default  reduce usando la regla 99 (argumento_bucle_for)


estado 151

   92 bucle_for: FOR ID IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70

    $default  reduce usando la regla 100 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 178
    constante            ir al estado 150


estado 152

   95 bucle_for: FOR ID IN '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 179


estado 153

   96 bucle_for: FOR ID RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 180


estado 154

   93 bucle_for: ID IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 181


estado 155

   69 invocacion: ID '.' ID '(' argumentos . ')'
   71 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 119
    ')'  desplazar e ir al estado 182


estado 156

   63 asignacion: ID '.' ID asignador expresion .
  102 expresion: expresion . '+' termino
  103          | expresion . '-' termino
  105          | expresion . '+' '(' expresion_parentesis ')'
  106          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 106
    '-'  desplazar e ir al estado 107

    $default  reduce usando la regla 63 (asignacion)


estado 157

   71 argumentos: argumentos ';' expresion .
  102 expresion: expresion . '+' termino
  103          | expresion . '-' termino
  105          | expresion . '+' '(' expresion_parentesis ')'
  106          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 106
    '-'  desplazar e ir al estado 107

    $default  reduce usando la regla 71 (argumentos)


estado 158

   53 parametro: parametro ';' tipo . ID

    ID  desplazar e ir al estado 183


estado 159

   36 funcion_declaration: VOID ID '(' parametro ')' '{' . sentencias_metodo '}'

    $default  reduce usando la regla 44 (sentencias_metodo)

    sentencias_metodo  ir al estado 184


estado 160

   29 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase . herencia_composicion '}'
   33 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 4

    ','       reduce usando la regla 37 (funcion_declaration)
    $default  reduce usando la regla 39 (herencia_composicion)

    metodo_declaration    ir al estado 162
    funcion_declaration   ir al estado 163
    herencia_composicion  ir al estado 185


estado 161

   32 atributo_declaration: declaracion_variables ',' .

    $default  reduce usando la regla 32 (atributo_declaration)


estado 162

   33 metodos_clase: metodos_clase metodo_declaration .

    $default  reduce usando la regla 33 (metodos_clase)


estado 163

   35 metodo_declaration: funcion_declaration . ','

    ','  desplazar e ir al estado 186


estado 164

   24 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion . '}'
   38 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 187
    '}'  desplazar e ir al estado 188


estado 165

   28 interface_metodo_declaration: VOID ID . '(' parametro ')' ','

    '('  desplazar e ir al estado 189


estado 166

   33 metodos_clase: metodos_clase . metodo_declaration
   55 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase . '}'

    VOID  desplazar e ir al estado 4
    '}'   desplazar e ir al estado 190

    $default  reduce usando la regla 37 (funcion_declaration)

    metodo_declaration   ir al estado 162
    funcion_declaration  ir al estado 163


estado 167

  109 expresion_parentesis: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 109 (expresion_parentesis)


estado 168

  110 expresion_parentesis: termino '+' termino .
  114 termino: termino . '*' factor
  115        | termino . '/' factor

    '*'  desplazar e ir al estado 109
    '/'  desplazar e ir al estado 110

    $default  reduce usando la regla 110 (expresion_parentesis)


estado 169

  111 expresion_parentesis: termino '-' termino .
  114 termino: termino . '*' factor
  115        | termino . '/' factor

    '*'  desplazar e ir al estado 109
    '/'  desplazar e ir al estado 110

    $default  reduce usando la regla 111 (expresion_parentesis)


estado 170

    5 sentencias: sentencias . sentencia
   88 bloque_sentencias: '{' sentencias . '}'

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '}'        desplazar e ir al estado 191

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencia                          ir al estado 53
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 171

   73 seleccion: IF '(' condicion ')' bloque_sentencias ELSE . bloque_sentencias END_IF
   76          | IF '(' condicion ')' bloque_sentencias ELSE . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '{'        desplazar e ir al estado 138

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    bloque_sentencias                  ir al estado 192
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 172

   74 seleccion: IF '(' condicion ')' bloque_sentencias END_IF .

    $default  reduce usando la regla 74 (seleccion)


estado 173

  105 expresion: expresion '+' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 193


estado 174

  106 expresion: expresion '-' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 194


estado 175

  104 expresion: tipo '(' expresion ')' .

    $default  reduce usando la regla 104 (expresion)


estado 176

   94 bucle_for: FOR IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '{'        desplazar e ir al estado 138

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    bloque_sentencias                  ir al estado 195
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 177

   97 argumento_bucle_for: constante ';' . constante ';' constante
   98                    | constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70

    constante  ir al estado 196


estado 178

   92 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 197


estado 179

   95 bucle_for: FOR ID IN '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '{'        desplazar e ir al estado 138

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    bloque_sentencias                  ir al estado 198
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 180

   96 bucle_for: FOR ID RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '{'        desplazar e ir al estado 138

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    bloque_sentencias                  ir al estado 199
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 181

   93 bucle_for: ID IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '{'        desplazar e ir al estado 138

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    bloque_sentencias                  ir al estado 200
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 182

   69 invocacion: ID '.' ID '(' argumentos ')' .

    $default  reduce usando la regla 69 (invocacion)


estado 183

   53 parametro: parametro ';' tipo ID .

    $default  reduce usando la regla 53 (parametro)


estado 184

   36 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo . '}'
   40 sentencias_metodo: sentencias_metodo . declaracion_variables ','
   41                  | sentencias_metodo . retorno ','
   42                  | sentencias_metodo . ejecutable ','
   43                  | sentencias_metodo . local_function_declaration ','

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    VOID    desplazar e ir al estado 201
    IF      desplazar e ir al estado 8
    PRINT   desplazar e ir al estado 9
    FOR     desplazar e ir al estado 10
    RETURN  desplazar e ir al estado 202
    ID      desplazar e ir al estado 203
    STRING  desplazar e ir al estado 12
    '}'     desplazar e ir al estado 204

    $default  reduce usando la regla 57 (retorno)

    ejecutable                  ir al estado 205
    declaracion_variables       ir al estado 206
    local_function_declaration  ir al estado 207
    retorno                     ir al estado 208
    asignacion                  ir al estado 26
    invocacion                  ir al estado 27
    seleccion                   ir al estado 28
    print                       ir al estado 29
    bucle_for                   ir al estado 30
    acceso_atributo             ir al estado 31
    tipo                        ir al estado 32


estado 185

   29 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion . '}'
   38 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 187
    '}'  desplazar e ir al estado 209


estado 186

   35 metodo_declaration: funcion_declaration ',' .

    $default  reduce usando la regla 35 (metodo_declaration)


estado 187

   38 herencia_composicion: herencia_composicion ID . ','

    ','  desplazar e ir al estado 210


estado 188

   24 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 24 (clase_declaration)


estado 189

   28 interface_metodo_declaration: VOID ID '(' . parametro ')' ','

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    ID      desplazar e ir al estado 93

    $default  reduce usando la regla 54 (parametro)

    parametro  ir al estado 211
    tipo       ir al estado 95


estado 190

   55 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}' .

    $default  reduce usando la regla 55 (distributed_method_implementation)


estado 191

   88 bloque_sentencias: '{' sentencias '}' .

    $default  reduce usando la regla 88 (bloque_sentencias)


estado 192

   73 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias . END_IF
   76          | IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias .

    END_IF  desplazar e ir al estado 212

    $default  reduce usando la regla 76 (seleccion)


estado 193

  105 expresion: expresion '+' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 105 (expresion)


estado 194

  106 expresion: expresion '-' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 106 (expresion)


estado 195

   94 bucle_for: FOR IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 94 (bucle_for)


estado 196

   97 argumento_bucle_for: constante ';' constante . ';' constante
   98                    | constante ';' constante .

    ';'  desplazar e ir al estado 213

    $default  reduce usando la regla 98 (argumento_bucle_for)


estado 197

   92 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    ID         desplazar e ir al estado 11
    STRING     desplazar e ir al estado 12
    '{'        desplazar e ir al estado 138

    $default  reduce usando la regla 37 (funcion_declaration)

    sentencia                          ir al estado 139
    declarativa                        ir al estado 17
    ejecutable                         ir al estado 18
    declaracion_variables              ir al estado 19
    clase_declaration                  ir al estado 20
    interface_declaration              ir al estado 21
    implement_declaration              ir al estado 22
    funcion_declaration                ir al estado 23
    distributed_method_implementation  ir al estado 24
    objeto_declaration                 ir al estado 25
    asignacion                         ir al estado 26
    invocacion                         ir al estado 27
    seleccion                          ir al estado 28
    bloque_sentencias                  ir al estado 214
    print                              ir al estado 29
    bucle_for                          ir al estado 30
    acceso_atributo                    ir al estado 31
    tipo                               ir al estado 32


estado 198

   95 bucle_for: FOR ID IN '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 95 (bucle_for)


estado 199

   96 bucle_for: FOR ID RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 96 (bucle_for)


estado 200

   93 bucle_for: ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 93 (bucle_for)


estado 201

   45 local_function_declaration: VOID . ID '(' parametro ')' '{' sentencias_funcion_local '}'

    ID  desplazar e ir al estado 215


estado 202

   56 retorno: RETURN .

    $default  reduce usando la regla 56 (retorno)


estado 203

   62 asignacion: ID . asignador expresion
   63           | ID . '.' ID asignador expresion
   64           | ID . asignador
   65           | ID . '.' ID asignador
   68 invocacion: ID . '(' argumentos ')'
   69           | ID . '.' ID '(' argumentos ')'
   93 bucle_for: ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
  101 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 41
    PLUS_EQUAL  desplazar e ir al estado 42
    '='         desplazar e ir al estado 43
    '.'         desplazar e ir al estado 44
    '('         desplazar e ir al estado 46

    asignador  ir al estado 49


estado 204

   36 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo '}' .

    $default  reduce usando la regla 36 (funcion_declaration)


estado 205

   42 sentencias_metodo: sentencias_metodo ejecutable . ','

    ','  desplazar e ir al estado 216


estado 206

   40 sentencias_metodo: sentencias_metodo declaracion_variables . ','

    ','  desplazar e ir al estado 217


estado 207

   43 sentencias_metodo: sentencias_metodo local_function_declaration . ','

    ','  desplazar e ir al estado 218


estado 208

   41 sentencias_metodo: sentencias_metodo retorno . ','

    ','  desplazar e ir al estado 219


estado 209

   29 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 29 (implement_declaration)


estado 210

   38 herencia_composicion: herencia_composicion ID ',' .

    $default  reduce usando la regla 38 (herencia_composicion)


estado 211

   28 interface_metodo_declaration: VOID ID '(' parametro . ')' ','
   53 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 123
    ')'  desplazar e ir al estado 220


estado 212

   73 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF .

    $default  reduce usando la regla 73 (seleccion)


estado 213

   97 argumento_bucle_for: constante ';' constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 68
    CTE_UINT    desplazar e ir al estado 69
    CTE_DOUBLE  desplazar e ir al estado 70

    constante  ir al estado 221


estado 214

   92 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 92 (bucle_for)


estado 215

   45 local_function_declaration: VOID ID . '(' parametro ')' '{' sentencias_funcion_local '}'

    '('  desplazar e ir al estado 222


estado 216

   42 sentencias_metodo: sentencias_metodo ejecutable ',' .

    $default  reduce usando la regla 42 (sentencias_metodo)


estado 217

   40 sentencias_metodo: sentencias_metodo declaracion_variables ',' .

    $default  reduce usando la regla 40 (sentencias_metodo)


estado 218

   43 sentencias_metodo: sentencias_metodo local_function_declaration ',' .

    $default  reduce usando la regla 43 (sentencias_metodo)


estado 219

   41 sentencias_metodo: sentencias_metodo retorno ',' .

    $default  reduce usando la regla 41 (sentencias_metodo)


estado 220

   28 interface_metodo_declaration: VOID ID '(' parametro ')' . ','

    ','  desplazar e ir al estado 223


estado 221

   97 argumento_bucle_for: constante ';' constante ';' constante .

    $default  reduce usando la regla 97 (argumento_bucle_for)


estado 222

   45 local_function_declaration: VOID ID '(' . parametro ')' '{' sentencias_funcion_local '}'

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    ID      desplazar e ir al estado 93

    $default  reduce usando la regla 54 (parametro)

    parametro  ir al estado 224
    tipo       ir al estado 95


estado 223

   28 interface_metodo_declaration: VOID ID '(' parametro ')' ',' .

    $default  reduce usando la regla 28 (interface_metodo_declaration)


estado 224

   45 local_function_declaration: VOID ID '(' parametro . ')' '{' sentencias_funcion_local '}'
   53 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 123
    ')'  desplazar e ir al estado 225


estado 225

   45 local_function_declaration: VOID ID '(' parametro ')' . '{' sentencias_funcion_local '}'

    '{'  desplazar e ir al estado 226


estado 226

   45 local_function_declaration: VOID ID '(' parametro ')' '{' . sentencias_funcion_local '}'

    $default  reduce usando la regla 50 (sentencias_funcion_local)

    sentencias_funcion_local  ir al estado 227


estado 227

   45 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local . '}'
   46 sentencias_funcion_local: sentencias_funcion_local . declaracion_variables ','
   47                         | sentencias_funcion_local . retorno ','
   48                         | sentencias_funcion_local . ejecutable ','
   49                         | sentencias_funcion_local . local_function_declaration ','

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    VOID    desplazar e ir al estado 201
    IF      desplazar e ir al estado 8
    PRINT   desplazar e ir al estado 9
    FOR     desplazar e ir al estado 10
    RETURN  desplazar e ir al estado 202
    ID      desplazar e ir al estado 203
    STRING  desplazar e ir al estado 12
    '}'     desplazar e ir al estado 228

    $default  reduce usando la regla 57 (retorno)

    ejecutable                  ir al estado 229
    declaracion_variables       ir al estado 230
    local_function_declaration  ir al estado 231
    retorno                     ir al estado 232
    asignacion                  ir al estado 26
    invocacion                  ir al estado 27
    seleccion                   ir al estado 28
    print                       ir al estado 29
    bucle_for                   ir al estado 30
    acceso_atributo             ir al estado 31
    tipo                        ir al estado 32


estado 228

   45 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local '}' .

    $default  reduce usando la regla 45 (local_function_declaration)


estado 229

   48 sentencias_funcion_local: sentencias_funcion_local ejecutable . ','

    ','  desplazar e ir al estado 233


estado 230

   46 sentencias_funcion_local: sentencias_funcion_local declaracion_variables . ','

    ','  desplazar e ir al estado 234


estado 231

   49 sentencias_funcion_local: sentencias_funcion_local local_function_declaration . ','

    ','  desplazar e ir al estado 235


estado 232

   47 sentencias_funcion_local: sentencias_funcion_local retorno . ','

    ','  desplazar e ir al estado 236


estado 233

   48 sentencias_funcion_local: sentencias_funcion_local ejecutable ',' .

    $default  reduce usando la regla 48 (sentencias_funcion_local)


estado 234

   46 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ',' .

    $default  reduce usando la regla 46 (sentencias_funcion_local)


estado 235

   49 sentencias_funcion_local: sentencias_funcion_local local_function_declaration ',' .

    $default  reduce usando la regla 49 (sentencias_funcion_local)


estado 236

   47 sentencias_funcion_local: sentencias_funcion_local retorno ',' .

    $default  reduce usando la regla 47 (sentencias_funcion_local)
