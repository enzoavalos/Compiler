Gramática

    0 $accept: programa $end

    1 programa: '{' sentencias '}'
    2         | '{' sentencias
    3         | sentencias '}'

    4 sentencias: sentencia
    5           | sentencias sentencia

    6 sentencia: declarativa ','
    7          | ejecutable ','

    8 declarativa: declaracion_variables
    9            | clase_declaration
   10            | objeto_declaration
   11            | interface_declaration
   12            | implement_declaration
   13            | distributed_method_implementation
   14            | funcion_declaration

   15 ejecutable: asignacion
   16           | invocacion
   17           | seleccion
   18           | print
   19           | bucle_for
   20           | acceso_atributo
   21           | retorno

   22 declaracion_variables: tipo lista_variables
   23                      | error lista_variables

   24 lista_variables: lista_variables ';' ID
   25                | ID
   26                | ID error ','

   27 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}'

   28 interface_declaration: INTERFACE ID '{' interface_metodos '}'

   29 interface_metodos: interface_metodos interface_metodo_declaration
   30                  | /* vacío */

   31 encabezado_funcion: VOID ID

   32 interface_metodo_declaration: encabezado_funcion '(' parametro ')' ','

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

   34 atributos: atributos atributo_declaration
   35          | /* vacío */

   36 atributo_declaration: declaracion_variables ','

   37 metodos_clase: metodos_clase metodo_declaration
   38              | /* vacío */

   39 metodo_declaration: funcion_declaration ','

   40 funcion_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_metodo '}'
   41                    | /* vacío */

   42 herencia_composicion: herencia_composicion ID ','
   43                     | /* vacío */

   44 sentencias_metodo: sentencias_metodo declaracion_variables ','
   45                  | sentencias_metodo ejecutable ','
   46                  | sentencias_metodo local_function_declaration ','
   47                  | /* vacío */

   48 local_function_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_funcion_local '}'

   49 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ','
   50                         | sentencias_funcion_local ejecutable ','
   51                         | sentencias_funcion_local local_function_declaration ','
   52                         | /* vacío */

   53 parametro: tipo ID
   54          | ID
   55          | parametro ';' tipo ID
   56          | /* vacío */

   57 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}'

   58 retorno: RETURN

   59 objeto_declaration: ID lista_objetos

   60 lista_objetos: lista_objetos ';' objeto
   61              | objeto

   62 objeto: ID

   63 asignacion: ID asignador expresion
   64           | ID '.' ID asignador expresion
   65           | ID asignador
   66           | ID '.' ID asignador
   67           | ID asignador '-'

   68 asignador: '='
   69          | PLUS_EQUAL

   70 invocacion: ID '(' argumentos ')'
   71           | ID '.' ID '(' argumentos ')'

   72 argumentos: expresion
   73           | argumentos ';' expresion
   74           | /* vacío */

   75 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   76          | IF '(' condicion ')' bloque_sentencias END_IF
   77          | IF '(' condicion ')' bloque_sentencias
   78          | IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias

   79 condicion: expresion comparador expresion
   80          | expresion comparador
   81          | comparador expresion
   82          | expresion

   83 comparador: '<'
   84           | '>'
   85           | LESS_EQUAL
   86           | GREATER_EQUAL
   87           | EQUAL
   88           | NOT_EQUAL

   89 bloque_sentencias: sentencia
   90                  | '{' sentencias '}'

   91 print: PRINT STRING
   92      | PRINT
   93      | STRING

   94 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   95          | ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   96          | FOR IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   97          | FOR ID IN '(' argumento_bucle_for ')' bloque_sentencias
   98          | FOR ID RANGE '(' argumento_bucle_for ')' bloque_sentencias

   99 argumento_bucle_for: constante ';' constante ';' constante
  100                    | constante ';' constante
  101                    | constante
  102                    | /* vacío */

  103 acceso_atributo: ID '.' ID

  104 expresion: expresion '+' termino
  105          | expresion '-' termino
  106          | tipo '(' expresion ')'
  107          | expresion '+' '(' expresion_parentesis ')'
  108          | expresion '-' '(' expresion_parentesis ')'
  109          | '(' expresion_parentesis ')'
  110          | termino

  111 expresion_parentesis: '(' expresion_parentesis ')'
  112                     | termino '+' termino
  113                     | termino '-' termino
  114                     | termino

  115 termino: factor
  116        | termino '*' factor
  117        | termino '/' factor

  118 factor: ID
  119       | '-' constante
  120       | constante

  121 constante: CTE_SHORT
  122          | CTE_DOUBLE
  123          | CTE_UINT

  124 tipo: SHORT
  125     | UINT
  126     | DOUBLE


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 32 40 48 70 71 75 76 77 78 94 95 96 97 98 106 107 108 109
    111
')' (41) 32 40 48 70 71 75 76 77 78 94 95 96 97 98 106 107 108 109
    111
'*' (42) 116
'+' (43) 104 107 112
',' (44) 6 7 26 32 36 39 42 44 45 46 49 50 51
'-' (45) 67 105 108 113 119
'.' (46) 64 66 71 103
'/' (47) 117
':' (58) 57
';' (59) 24 55 60 73 99 100
'<' (60) 83
'=' (61) 68
'>' (62) 84
'{' (123) 1 2 27 28 33 40 48 57 90
'}' (125) 1 3 27 28 33 40 48 57 90
error (256) 23 26
SHORT (258) 124
UINT (259) 125
DOUBLE (260) 126
VOID (261) 31
CLASS (262) 27 33
INTERFACE (263) 28
IMPLEMENT (264) 33
IMPL (265) 57
IF (266) 75 76 77 78
ELSE (267) 75 78
END_IF (268) 75 76
PRINT (269) 91 92
FOR (270) 57 94 96 97 98
IN (271) 94 95 96 97
RANGE (272) 94 95 96 98
RETURN (273) 58
LESS_EQUAL (274) 85
GREATER_EQUAL (275) 86
EQUAL (276) 87
NOT_EQUAL (277) 88
PLUS_EQUAL (278) 69
ID (279) 24 25 26 27 28 31 33 42 53 54 55 57 59 62 63 64 65 66 67 70
    71 94 95 97 98 103 118
STRING (280) 91 93
CTE_SHORT (281) 121
CTE_UINT (282) 123
CTE_DOUBLE (283) 122


No terminales con las reglas donde aparecen

$accept (44)
    en la izquierda: 0
programa (45)
    en la izquierda: 1 2 3, en la derecha: 0
sentencias (46)
    en la izquierda: 4 5, en la derecha: 1 2 3 5 90
sentencia (47)
    en la izquierda: 6 7, en la derecha: 4 5 89
declarativa (48)
    en la izquierda: 8 9 10 11 12 13 14, en la derecha: 6
ejecutable (49)
    en la izquierda: 15 16 17 18 19 20 21, en la derecha: 7 45 50
declaracion_variables (50)
    en la izquierda: 22 23, en la derecha: 8 36 44 49
lista_variables (51)
    en la izquierda: 24 25 26, en la derecha: 22 23 24
clase_declaration (52)
    en la izquierda: 27, en la derecha: 9
interface_declaration (53)
    en la izquierda: 28, en la derecha: 11
interface_metodos (54)
    en la izquierda: 29 30, en la derecha: 28 29
encabezado_funcion (55)
    en la izquierda: 31, en la derecha: 32 40 48
interface_metodo_declaration (56)
    en la izquierda: 32, en la derecha: 29
implement_declaration (57)
    en la izquierda: 33, en la derecha: 12
atributos (58)
    en la izquierda: 34 35, en la derecha: 27 34
atributo_declaration (59)
    en la izquierda: 36, en la derecha: 34
metodos_clase (60)
    en la izquierda: 37 38, en la derecha: 27 33 37 57
metodo_declaration (61)
    en la izquierda: 39, en la derecha: 37
funcion_declaration (62)
    en la izquierda: 40 41, en la derecha: 14 39
herencia_composicion (63)
    en la izquierda: 42 43, en la derecha: 27 33 42
sentencias_metodo (64)
    en la izquierda: 44 45 46 47, en la derecha: 40 44 45 46
local_function_declaration (65)
    en la izquierda: 48, en la derecha: 46 51
sentencias_funcion_local (66)
    en la izquierda: 49 50 51 52, en la derecha: 48 49 50 51
parametro (67)
    en la izquierda: 53 54 55 56, en la derecha: 32 40 48 55
distributed_method_implementation (68)
    en la izquierda: 57, en la derecha: 13
retorno (69)
    en la izquierda: 58, en la derecha: 21
objeto_declaration (70)
    en la izquierda: 59, en la derecha: 10
lista_objetos (71)
    en la izquierda: 60 61, en la derecha: 59 60
objeto (72)
    en la izquierda: 62, en la derecha: 60 61
asignacion (73)
    en la izquierda: 63 64 65 66 67, en la derecha: 15
asignador (74)
    en la izquierda: 68 69, en la derecha: 63 64 65 66 67
invocacion (75)
    en la izquierda: 70 71, en la derecha: 16
argumentos (76)
    en la izquierda: 72 73 74, en la derecha: 70 71 73
seleccion (77)
    en la izquierda: 75 76 77 78, en la derecha: 17
condicion (78)
    en la izquierda: 79 80 81 82, en la derecha: 75 76 77 78
comparador (79)
    en la izquierda: 83 84 85 86 87 88, en la derecha: 79 80 81
bloque_sentencias (80)
    en la izquierda: 89 90, en la derecha: 75 76 77 78 94 95 96 97
    98
print (81)
    en la izquierda: 91 92 93, en la derecha: 18
bucle_for (82)
    en la izquierda: 94 95 96 97 98, en la derecha: 19
argumento_bucle_for (83)
    en la izquierda: 99 100 101 102, en la derecha: 94 95 96 97 98
acceso_atributo (84)
    en la izquierda: 103, en la derecha: 20
expresion (85)
    en la izquierda: 104 105 106 107 108 109 110, en la derecha: 63
    64 72 73 79 80 81 82 104 105 106 107 108
expresion_parentesis (86)
    en la izquierda: 111 112 113 114, en la derecha: 107 108 109 111
termino (87)
    en la izquierda: 115 116 117, en la derecha: 104 105 110 112 113
    114 116 117
factor (88)
    en la izquierda: 118 119 120, en la derecha: 115 116 117
constante (89)
    en la izquierda: 121 122 123, en la derecha: 99 100 101 119 120
tipo (90)
    en la izquierda: 124 125 126, en la derecha: 22 53 55 106


estado 0

    0 $accept: . programa $end

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 15

    ','  reduce usando la regla 41 (funcion_declaration)

    programa                           ir al estado 16
    sentencias                         ir al estado 17
    sentencia                          ir al estado 18
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 1

   23 declaracion_variables: error . lista_variables

    ID  desplazar e ir al estado 37

    lista_variables  ir al estado 38


estado 2

  124 tipo: SHORT .

    $default  reduce usando la regla 124 (tipo)


estado 3

  125 tipo: UINT .

    $default  reduce usando la regla 125 (tipo)


estado 4

  126 tipo: DOUBLE .

    $default  reduce usando la regla 126 (tipo)


estado 5

   31 encabezado_funcion: VOID . ID

    ID  desplazar e ir al estado 39


estado 6

   27 clase_declaration: CLASS . ID '{' atributos metodos_clase herencia_composicion '}'
   33 implement_declaration: CLASS . ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 40


estado 7

   28 interface_declaration: INTERFACE . ID '{' interface_metodos '}'

    ID  desplazar e ir al estado 41


estado 8

   57 distributed_method_implementation: IMPL . FOR ID ':' '{' metodos_clase '}'

    FOR  desplazar e ir al estado 42


estado 9

   75 seleccion: IF . '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   76          | IF . '(' condicion ')' bloque_sentencias END_IF
   77          | IF . '(' condicion ')' bloque_sentencias
   78          | IF . '(' condicion ')' bloque_sentencias ELSE bloque_sentencias

    '('  desplazar e ir al estado 43


estado 10

   91 print: PRINT . STRING
   92      | PRINT .

    STRING  desplazar e ir al estado 44

    $default  reduce usando la regla 92 (print)


estado 11

   94 bucle_for: FOR . ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   96          | FOR . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   97          | FOR . ID IN '(' argumento_bucle_for ')' bloque_sentencias
   98          | FOR . ID RANGE '(' argumento_bucle_for ')' bloque_sentencias

    IN  desplazar e ir al estado 45
    ID  desplazar e ir al estado 46


estado 12

   58 retorno: RETURN .

    $default  reduce usando la regla 58 (retorno)


estado 13

   59 objeto_declaration: ID . lista_objetos
   63 asignacion: ID . asignador expresion
   64           | ID . '.' ID asignador expresion
   65           | ID . asignador
   66           | ID . '.' ID asignador
   67           | ID . asignador '-'
   70 invocacion: ID . '(' argumentos ')'
   71           | ID . '.' ID '(' argumentos ')'
   95 bucle_for: ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
  103 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 47
    PLUS_EQUAL  desplazar e ir al estado 48
    '='         desplazar e ir al estado 49
    '.'         desplazar e ir al estado 50
    ID          desplazar e ir al estado 51
    '('         desplazar e ir al estado 52

    lista_objetos  ir al estado 53
    objeto         ir al estado 54
    asignador      ir al estado 55


estado 14

   93 print: STRING .

    $default  reduce usando la regla 93 (print)


estado 15

    1 programa: '{' . sentencias '}'
    2         | '{' . sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencias                         ir al estado 56
    sentencia                          ir al estado 18
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 16

    0 $accept: programa . $end

    $end  desplazar e ir al estado 57


estado 17

    3 programa: sentencias . '}'
    5 sentencias: sentencias . sentencia

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '}'        desplazar e ir al estado 58

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 59
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 18

    4 sentencias: sentencia .

    $default  reduce usando la regla 4 (sentencias)


estado 19

    6 sentencia: declarativa . ','

    ','  desplazar e ir al estado 60


estado 20

    7 sentencia: ejecutable . ','

    ','  desplazar e ir al estado 61


estado 21

    8 declarativa: declaracion_variables .

    $default  reduce usando la regla 8 (declarativa)


estado 22

    9 declarativa: clase_declaration .

    $default  reduce usando la regla 9 (declarativa)


estado 23

   11 declarativa: interface_declaration .

    $default  reduce usando la regla 11 (declarativa)


estado 24

   40 funcion_declaration: encabezado_funcion . '(' parametro ')' '{' sentencias_metodo '}'

    '('  desplazar e ir al estado 62


estado 25

   12 declarativa: implement_declaration .

    $default  reduce usando la regla 12 (declarativa)


estado 26

   14 declarativa: funcion_declaration .

    $default  reduce usando la regla 14 (declarativa)


estado 27

   13 declarativa: distributed_method_implementation .

    $default  reduce usando la regla 13 (declarativa)


estado 28

   21 ejecutable: retorno .

    $default  reduce usando la regla 21 (ejecutable)


estado 29

   10 declarativa: objeto_declaration .

    $default  reduce usando la regla 10 (declarativa)


estado 30

   15 ejecutable: asignacion .

    $default  reduce usando la regla 15 (ejecutable)


estado 31

   16 ejecutable: invocacion .

    $default  reduce usando la regla 16 (ejecutable)


estado 32

   17 ejecutable: seleccion .

    $default  reduce usando la regla 17 (ejecutable)


estado 33

   18 ejecutable: print .

    $default  reduce usando la regla 18 (ejecutable)


estado 34

   19 ejecutable: bucle_for .

    $default  reduce usando la regla 19 (ejecutable)


estado 35

   20 ejecutable: acceso_atributo .

    $default  reduce usando la regla 20 (ejecutable)


estado 36

   22 declaracion_variables: tipo . lista_variables

    ID  desplazar e ir al estado 37

    lista_variables  ir al estado 63


estado 37

   25 lista_variables: ID .
   26                | ID . error ','

    error  desplazar e ir al estado 64

    ','  reduce usando la regla 25 (lista_variables)
    ';'  reduce usando la regla 25 (lista_variables)


estado 38

   23 declaracion_variables: error lista_variables .
   24 lista_variables: lista_variables . ';' ID

    ';'  desplazar e ir al estado 65

    $default  reduce usando la regla 23 (declaracion_variables)


estado 39

   31 encabezado_funcion: VOID ID .

    $default  reduce usando la regla 31 (encabezado_funcion)


estado 40

   27 clase_declaration: CLASS ID . '{' atributos metodos_clase herencia_composicion '}'
   33 implement_declaration: CLASS ID . IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    IMPLEMENT  desplazar e ir al estado 66
    '{'        desplazar e ir al estado 67


estado 41

   28 interface_declaration: INTERFACE ID . '{' interface_metodos '}'

    '{'  desplazar e ir al estado 68


estado 42

   57 distributed_method_implementation: IMPL FOR . ID ':' '{' metodos_clase '}'

    ID  desplazar e ir al estado 69


estado 43

   75 seleccion: IF '(' . condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   76          | IF '(' . condicion ')' bloque_sentencias END_IF
   77          | IF '(' . condicion ')' bloque_sentencias
   78          | IF '(' . condicion ')' bloque_sentencias ELSE bloque_sentencias

    SHORT          desplazar e ir al estado 2
    UINT           desplazar e ir al estado 3
    DOUBLE         desplazar e ir al estado 4
    LESS_EQUAL     desplazar e ir al estado 70
    GREATER_EQUAL  desplazar e ir al estado 71
    EQUAL          desplazar e ir al estado 72
    NOT_EQUAL      desplazar e ir al estado 73
    ID             desplazar e ir al estado 74
    CTE_SHORT      desplazar e ir al estado 75
    CTE_UINT       desplazar e ir al estado 76
    CTE_DOUBLE     desplazar e ir al estado 77
    '('            desplazar e ir al estado 78
    '-'            desplazar e ir al estado 79
    '<'            desplazar e ir al estado 80
    '>'            desplazar e ir al estado 81

    condicion   ir al estado 82
    comparador  ir al estado 83
    expresion   ir al estado 84
    termino     ir al estado 85
    factor      ir al estado 86
    constante   ir al estado 87
    tipo        ir al estado 88


estado 44

   91 print: PRINT STRING .

    $default  reduce usando la regla 91 (print)


estado 45

   96 bucle_for: FOR IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 89


estado 46

   94 bucle_for: FOR ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   97          | FOR ID . IN '(' argumento_bucle_for ')' bloque_sentencias
   98          | FOR ID . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    IN     desplazar e ir al estado 90
    RANGE  desplazar e ir al estado 91


estado 47

   95 bucle_for: ID IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 92


estado 48

   69 asignador: PLUS_EQUAL .

    $default  reduce usando la regla 69 (asignador)


estado 49

   68 asignador: '=' .

    $default  reduce usando la regla 68 (asignador)


estado 50

   64 asignacion: ID '.' . ID asignador expresion
   66           | ID '.' . ID asignador
   71 invocacion: ID '.' . ID '(' argumentos ')'
  103 acceso_atributo: ID '.' . ID

    ID  desplazar e ir al estado 93


estado 51

   62 objeto: ID .

    $default  reduce usando la regla 62 (objeto)


estado 52

   70 invocacion: ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 78
    '-'         desplazar e ir al estado 79

    $default  reduce usando la regla 74 (argumentos)

    argumentos  ir al estado 94
    expresion   ir al estado 95
    termino     ir al estado 85
    factor      ir al estado 86
    constante   ir al estado 87
    tipo        ir al estado 88


estado 53

   59 objeto_declaration: ID lista_objetos .
   60 lista_objetos: lista_objetos . ';' objeto

    ';'  desplazar e ir al estado 96

    $default  reduce usando la regla 59 (objeto_declaration)


estado 54

   61 lista_objetos: objeto .

    $default  reduce usando la regla 61 (lista_objetos)


estado 55

   63 asignacion: ID asignador . expresion
   65           | ID asignador .
   67           | ID asignador . '-'

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 78
    '-'         desplazar e ir al estado 97

    $default  reduce usando la regla 65 (asignacion)

    expresion  ir al estado 98
    termino    ir al estado 85
    factor     ir al estado 86
    constante  ir al estado 87
    tipo       ir al estado 88


estado 56

    1 programa: '{' sentencias . '}'
    2         | '{' sentencias .
    5 sentencias: sentencias . sentencia

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '}'        desplazar e ir al estado 99

    $end  reduce usando la regla 2 (programa)
    ','   reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 59
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 57

    0 $accept: programa $end .

    $default  aceptar


estado 58

    3 programa: sentencias '}' .

    $default  reduce usando la regla 3 (programa)


estado 59

    5 sentencias: sentencias sentencia .

    $default  reduce usando la regla 5 (sentencias)


estado 60

    6 sentencia: declarativa ',' .

    $default  reduce usando la regla 6 (sentencia)


estado 61

    7 sentencia: ejecutable ',' .

    $default  reduce usando la regla 7 (sentencia)


estado 62

   40 funcion_declaration: encabezado_funcion '(' . parametro ')' '{' sentencias_metodo '}'

    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    ID      desplazar e ir al estado 100

    $default  reduce usando la regla 56 (parametro)

    parametro  ir al estado 101
    tipo       ir al estado 102


estado 63

   22 declaracion_variables: tipo lista_variables .
   24 lista_variables: lista_variables . ';' ID

    ';'  desplazar e ir al estado 65

    $default  reduce usando la regla 22 (declaracion_variables)


estado 64

   26 lista_variables: ID error . ','

    ','  desplazar e ir al estado 103


estado 65

   24 lista_variables: lista_variables ';' . ID

    ID  desplazar e ir al estado 104


estado 66

   33 implement_declaration: CLASS ID IMPLEMENT . ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 105


estado 67

   27 clase_declaration: CLASS ID '{' . atributos metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 35 (atributos)

    atributos  ir al estado 106


estado 68

   28 interface_declaration: INTERFACE ID '{' . interface_metodos '}'

    $default  reduce usando la regla 30 (interface_metodos)

    interface_metodos  ir al estado 107


estado 69

   57 distributed_method_implementation: IMPL FOR ID . ':' '{' metodos_clase '}'

    ':'  desplazar e ir al estado 108


estado 70

   85 comparador: LESS_EQUAL .

    $default  reduce usando la regla 85 (comparador)


estado 71

   86 comparador: GREATER_EQUAL .

    $default  reduce usando la regla 86 (comparador)


estado 72

   87 comparador: EQUAL .

    $default  reduce usando la regla 87 (comparador)


estado 73

   88 comparador: NOT_EQUAL .

    $default  reduce usando la regla 88 (comparador)


estado 74

  118 factor: ID .

    $default  reduce usando la regla 118 (factor)


estado 75

  121 constante: CTE_SHORT .

    $default  reduce usando la regla 121 (constante)


estado 76

  123 constante: CTE_UINT .

    $default  reduce usando la regla 123 (constante)


estado 77

  122 constante: CTE_DOUBLE .

    $default  reduce usando la regla 122 (constante)


estado 78

  109 expresion: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 109
    '-'         desplazar e ir al estado 79

    expresion_parentesis  ir al estado 110
    termino               ir al estado 111
    factor                ir al estado 86
    constante             ir al estado 87


estado 79

  119 factor: '-' . constante

    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77

    constante  ir al estado 112


estado 80

   83 comparador: '<' .

    $default  reduce usando la regla 83 (comparador)


estado 81

   84 comparador: '>' .

    $default  reduce usando la regla 84 (comparador)


estado 82

   75 seleccion: IF '(' condicion . ')' bloque_sentencias ELSE bloque_sentencias END_IF
   76          | IF '(' condicion . ')' bloque_sentencias END_IF
   77          | IF '(' condicion . ')' bloque_sentencias
   78          | IF '(' condicion . ')' bloque_sentencias ELSE bloque_sentencias

    ')'  desplazar e ir al estado 113


estado 83

   81 condicion: comparador . expresion

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 78
    '-'         desplazar e ir al estado 79

    expresion  ir al estado 114
    termino    ir al estado 85
    factor     ir al estado 86
    constante  ir al estado 87
    tipo       ir al estado 88


estado 84

   79 condicion: expresion . comparador expresion
   80          | expresion . comparador
   82          | expresion .
  104 expresion: expresion . '+' termino
  105          | expresion . '-' termino
  107          | expresion . '+' '(' expresion_parentesis ')'
  108          | expresion . '-' '(' expresion_parentesis ')'

    LESS_EQUAL     desplazar e ir al estado 70
    GREATER_EQUAL  desplazar e ir al estado 71
    EQUAL          desplazar e ir al estado 72
    NOT_EQUAL      desplazar e ir al estado 73
    '-'            desplazar e ir al estado 115
    '<'            desplazar e ir al estado 80
    '>'            desplazar e ir al estado 81
    '+'            desplazar e ir al estado 116

    $default  reduce usando la regla 82 (condicion)

    comparador  ir al estado 117


estado 85

  110 expresion: termino .
  116 termino: termino . '*' factor
  117        | termino . '/' factor

    '*'  desplazar e ir al estado 118
    '/'  desplazar e ir al estado 119

    $default  reduce usando la regla 110 (expresion)


estado 86

  115 termino: factor .

    $default  reduce usando la regla 115 (termino)


estado 87

  120 factor: constante .

    $default  reduce usando la regla 120 (factor)


estado 88

  106 expresion: tipo . '(' expresion ')'

    '('  desplazar e ir al estado 120


estado 89

   96 bucle_for: FOR IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 121


estado 90

   94 bucle_for: FOR ID IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias
   97          | FOR ID IN . '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 122
    '('    desplazar e ir al estado 123


estado 91

   98 bucle_for: FOR ID RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 124


estado 92

   95 bucle_for: ID IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 125


estado 93

   64 asignacion: ID '.' ID . asignador expresion
   66           | ID '.' ID . asignador
   71 invocacion: ID '.' ID . '(' argumentos ')'
  103 acceso_atributo: ID '.' ID .

    PLUS_EQUAL  desplazar e ir al estado 48
    '='         desplazar e ir al estado 49
    '('         desplazar e ir al estado 126

    $default  reduce usando la regla 103 (acceso_atributo)

    asignador  ir al estado 127


estado 94

   70 invocacion: ID '(' argumentos . ')'
   73 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 128
    ')'  desplazar e ir al estado 129


estado 95

   72 argumentos: expresion .
  104 expresion: expresion . '+' termino
  105          | expresion . '-' termino
  107          | expresion . '+' '(' expresion_parentesis ')'
  108          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 115
    '+'  desplazar e ir al estado 116

    $default  reduce usando la regla 72 (argumentos)


estado 96

   60 lista_objetos: lista_objetos ';' . objeto

    ID  desplazar e ir al estado 51

    objeto  ir al estado 130


estado 97

   67 asignacion: ID asignador '-' .
  119 factor: '-' . constante

    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77

    $default  reduce usando la regla 67 (asignacion)

    constante  ir al estado 112


estado 98

   63 asignacion: ID asignador expresion .
  104 expresion: expresion . '+' termino
  105          | expresion . '-' termino
  107          | expresion . '+' '(' expresion_parentesis ')'
  108          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 115
    '+'  desplazar e ir al estado 116

    $default  reduce usando la regla 63 (asignacion)


estado 99

    1 programa: '{' sentencias '}' .

    $default  reduce usando la regla 1 (programa)


estado 100

   54 parametro: ID .

    $default  reduce usando la regla 54 (parametro)


estado 101

   40 funcion_declaration: encabezado_funcion '(' parametro . ')' '{' sentencias_metodo '}'
   55 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 131
    ')'  desplazar e ir al estado 132


estado 102

   53 parametro: tipo . ID

    ID  desplazar e ir al estado 133


estado 103

   26 lista_variables: ID error ',' .

    $default  reduce usando la regla 26 (lista_variables)


estado 104

   24 lista_variables: lista_variables ';' ID .

    $default  reduce usando la regla 24 (lista_variables)


estado 105

   33 implement_declaration: CLASS ID IMPLEMENT ID . '{' metodos_clase herencia_composicion '}'

    '{'  desplazar e ir al estado 134


estado 106

   27 clase_declaration: CLASS ID '{' atributos . metodos_clase herencia_composicion '}'
   34 atributos: atributos . atributo_declaration

    error   desplazar e ir al estado 1
    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4

    VOID  reduce usando la regla 38 (metodos_clase)
    ID    reduce usando la regla 38 (metodos_clase)
    '}'   reduce usando la regla 38 (metodos_clase)
    ','   reduce usando la regla 38 (metodos_clase)

    declaracion_variables  ir al estado 135
    atributo_declaration   ir al estado 136
    metodos_clase          ir al estado 137
    tipo                   ir al estado 36


estado 107

   28 interface_declaration: INTERFACE ID '{' interface_metodos . '}'
   29 interface_metodos: interface_metodos . interface_metodo_declaration

    VOID  desplazar e ir al estado 5
    '}'   desplazar e ir al estado 138

    encabezado_funcion            ir al estado 139
    interface_metodo_declaration  ir al estado 140


estado 108

   57 distributed_method_implementation: IMPL FOR ID ':' . '{' metodos_clase '}'

    '{'  desplazar e ir al estado 141


estado 109

  111 expresion_parentesis: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 109
    '-'         desplazar e ir al estado 79

    expresion_parentesis  ir al estado 142
    termino               ir al estado 111
    factor                ir al estado 86
    constante             ir al estado 87


estado 110

  109 expresion: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 143


estado 111

  112 expresion_parentesis: termino . '+' termino
  113                     | termino . '-' termino
  114                     | termino .
  116 termino: termino . '*' factor
  117        | termino . '/' factor

    '-'  desplazar e ir al estado 144
    '+'  desplazar e ir al estado 145
    '*'  desplazar e ir al estado 118
    '/'  desplazar e ir al estado 119

    $default  reduce usando la regla 114 (expresion_parentesis)


estado 112

  119 factor: '-' constante .

    $default  reduce usando la regla 119 (factor)


estado 113

   75 seleccion: IF '(' condicion ')' . bloque_sentencias ELSE bloque_sentencias END_IF
   76          | IF '(' condicion ')' . bloque_sentencias END_IF
   77          | IF '(' condicion ')' . bloque_sentencias
   78          | IF '(' condicion ')' . bloque_sentencias ELSE bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 146

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 147
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 148
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 114

   81 condicion: comparador expresion .
  104 expresion: expresion . '+' termino
  105          | expresion . '-' termino
  107          | expresion . '+' '(' expresion_parentesis ')'
  108          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 115
    '+'  desplazar e ir al estado 116

    $default  reduce usando la regla 81 (condicion)


estado 115

  105 expresion: expresion '-' . termino
  108          | expresion '-' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 149
    '-'         desplazar e ir al estado 79

    termino    ir al estado 150
    factor     ir al estado 86
    constante  ir al estado 87


estado 116

  104 expresion: expresion '+' . termino
  107          | expresion '+' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 151
    '-'         desplazar e ir al estado 79

    termino    ir al estado 152
    factor     ir al estado 86
    constante  ir al estado 87


estado 117

   79 condicion: expresion comparador . expresion
   80          | expresion comparador .

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 78
    '-'         desplazar e ir al estado 79

    $default  reduce usando la regla 80 (condicion)

    expresion  ir al estado 153
    termino    ir al estado 85
    factor     ir al estado 86
    constante  ir al estado 87
    tipo       ir al estado 88


estado 118

  116 termino: termino '*' . factor

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '-'         desplazar e ir al estado 79

    factor     ir al estado 154
    constante  ir al estado 87


estado 119

  117 termino: termino '/' . factor

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '-'         desplazar e ir al estado 79

    factor     ir al estado 155
    constante  ir al estado 87


estado 120

  106 expresion: tipo '(' . expresion ')'

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 78
    '-'         desplazar e ir al estado 79

    expresion  ir al estado 156
    termino    ir al estado 85
    factor     ir al estado 86
    constante  ir al estado 87
    tipo       ir al estado 88


estado 121

   96 bucle_for: FOR IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77

    $default  reduce usando la regla 102 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 157
    constante            ir al estado 158


estado 122

   94 bucle_for: FOR ID IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 159


estado 123

   97 bucle_for: FOR ID IN '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77

    $default  reduce usando la regla 102 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 160
    constante            ir al estado 158


estado 124

   98 bucle_for: FOR ID RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77

    $default  reduce usando la regla 102 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 161
    constante            ir al estado 158


estado 125

   95 bucle_for: ID IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77

    $default  reduce usando la regla 102 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 162
    constante            ir al estado 158


estado 126

   71 invocacion: ID '.' ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 78
    '-'         desplazar e ir al estado 79

    $default  reduce usando la regla 74 (argumentos)

    argumentos  ir al estado 163
    expresion   ir al estado 95
    termino     ir al estado 85
    factor      ir al estado 86
    constante   ir al estado 87
    tipo        ir al estado 88


estado 127

   64 asignacion: ID '.' ID asignador . expresion
   66           | ID '.' ID asignador .

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 78
    '-'         desplazar e ir al estado 79

    $default  reduce usando la regla 66 (asignacion)

    expresion  ir al estado 164
    termino    ir al estado 85
    factor     ir al estado 86
    constante  ir al estado 87
    tipo       ir al estado 88


estado 128

   73 argumentos: argumentos ';' . expresion

    SHORT       desplazar e ir al estado 2
    UINT        desplazar e ir al estado 3
    DOUBLE      desplazar e ir al estado 4
    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 78
    '-'         desplazar e ir al estado 79

    expresion  ir al estado 165
    termino    ir al estado 85
    factor     ir al estado 86
    constante  ir al estado 87
    tipo       ir al estado 88


estado 129

   70 invocacion: ID '(' argumentos ')' .

    $default  reduce usando la regla 70 (invocacion)


estado 130

   60 lista_objetos: lista_objetos ';' objeto .

    $default  reduce usando la regla 60 (lista_objetos)


estado 131

   55 parametro: parametro ';' . tipo ID

    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4

    tipo  ir al estado 166


estado 132

   40 funcion_declaration: encabezado_funcion '(' parametro ')' . '{' sentencias_metodo '}'

    '{'  desplazar e ir al estado 167


estado 133

   53 parametro: tipo ID .

    $default  reduce usando la regla 53 (parametro)


estado 134

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' . metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 38 (metodos_clase)

    metodos_clase  ir al estado 168


estado 135

   36 atributo_declaration: declaracion_variables . ','

    ','  desplazar e ir al estado 169


estado 136

   34 atributos: atributos atributo_declaration .

    $default  reduce usando la regla 34 (atributos)


estado 137

   27 clase_declaration: CLASS ID '{' atributos metodos_clase . herencia_composicion '}'
   37 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 5

    ','       reduce usando la regla 41 (funcion_declaration)
    $default  reduce usando la regla 43 (herencia_composicion)

    encabezado_funcion    ir al estado 24
    metodo_declaration    ir al estado 170
    funcion_declaration   ir al estado 171
    herencia_composicion  ir al estado 172


estado 138

   28 interface_declaration: INTERFACE ID '{' interface_metodos '}' .

    $default  reduce usando la regla 28 (interface_declaration)


estado 139

   32 interface_metodo_declaration: encabezado_funcion . '(' parametro ')' ','

    '('  desplazar e ir al estado 173


estado 140

   29 interface_metodos: interface_metodos interface_metodo_declaration .

    $default  reduce usando la regla 29 (interface_metodos)


estado 141

   57 distributed_method_implementation: IMPL FOR ID ':' '{' . metodos_clase '}'

    $default  reduce usando la regla 38 (metodos_clase)

    metodos_clase  ir al estado 174


estado 142

  111 expresion_parentesis: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 175


estado 143

  109 expresion: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 109 (expresion)


estado 144

  113 expresion_parentesis: termino '-' . termino

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '-'         desplazar e ir al estado 79

    termino    ir al estado 176
    factor     ir al estado 86
    constante  ir al estado 87


estado 145

  112 expresion_parentesis: termino '+' . termino

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '-'         desplazar e ir al estado 79

    termino    ir al estado 177
    factor     ir al estado 86
    constante  ir al estado 87


estado 146

   90 bloque_sentencias: '{' . sentencias '}'

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencias                         ir al estado 178
    sentencia                          ir al estado 18
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 147

   89 bloque_sentencias: sentencia .

    $default  reduce usando la regla 89 (bloque_sentencias)


estado 148

   75 seleccion: IF '(' condicion ')' bloque_sentencias . ELSE bloque_sentencias END_IF
   76          | IF '(' condicion ')' bloque_sentencias . END_IF
   77          | IF '(' condicion ')' bloque_sentencias .
   78          | IF '(' condicion ')' bloque_sentencias . ELSE bloque_sentencias

    ELSE    desplazar e ir al estado 179
    END_IF  desplazar e ir al estado 180

    $default  reduce usando la regla 77 (seleccion)


estado 149

  108 expresion: expresion '-' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 109
    '-'         desplazar e ir al estado 79

    expresion_parentesis  ir al estado 181
    termino               ir al estado 111
    factor                ir al estado 86
    constante             ir al estado 87


estado 150

  105 expresion: expresion '-' termino .
  116 termino: termino . '*' factor
  117        | termino . '/' factor

    '*'  desplazar e ir al estado 118
    '/'  desplazar e ir al estado 119

    $default  reduce usando la regla 105 (expresion)


estado 151

  107 expresion: expresion '+' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 74
    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77
    '('         desplazar e ir al estado 109
    '-'         desplazar e ir al estado 79

    expresion_parentesis  ir al estado 182
    termino               ir al estado 111
    factor                ir al estado 86
    constante             ir al estado 87


estado 152

  104 expresion: expresion '+' termino .
  116 termino: termino . '*' factor
  117        | termino . '/' factor

    '*'  desplazar e ir al estado 118
    '/'  desplazar e ir al estado 119

    $default  reduce usando la regla 104 (expresion)


estado 153

   79 condicion: expresion comparador expresion .
  104 expresion: expresion . '+' termino
  105          | expresion . '-' termino
  107          | expresion . '+' '(' expresion_parentesis ')'
  108          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 115
    '+'  desplazar e ir al estado 116

    $default  reduce usando la regla 79 (condicion)


estado 154

  116 termino: termino '*' factor .

    $default  reduce usando la regla 116 (termino)


estado 155

  117 termino: termino '/' factor .

    $default  reduce usando la regla 117 (termino)


estado 156

  104 expresion: expresion . '+' termino
  105          | expresion . '-' termino
  106          | tipo '(' expresion . ')'
  107          | expresion . '+' '(' expresion_parentesis ')'
  108          | expresion . '-' '(' expresion_parentesis ')'

    ')'  desplazar e ir al estado 183
    '-'  desplazar e ir al estado 115
    '+'  desplazar e ir al estado 116


estado 157

   96 bucle_for: FOR IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 184


estado 158

   99 argumento_bucle_for: constante . ';' constante ';' constante
  100                    | constante . ';' constante
  101                    | constante .

    ';'  desplazar e ir al estado 185

    $default  reduce usando la regla 101 (argumento_bucle_for)


estado 159

   94 bucle_for: FOR ID IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77

    $default  reduce usando la regla 102 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 186
    constante            ir al estado 158


estado 160

   97 bucle_for: FOR ID IN '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 187


estado 161

   98 bucle_for: FOR ID RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 188


estado 162

   95 bucle_for: ID IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 189


estado 163

   71 invocacion: ID '.' ID '(' argumentos . ')'
   73 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 128
    ')'  desplazar e ir al estado 190


estado 164

   64 asignacion: ID '.' ID asignador expresion .
  104 expresion: expresion . '+' termino
  105          | expresion . '-' termino
  107          | expresion . '+' '(' expresion_parentesis ')'
  108          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 115
    '+'  desplazar e ir al estado 116

    $default  reduce usando la regla 64 (asignacion)


estado 165

   73 argumentos: argumentos ';' expresion .
  104 expresion: expresion . '+' termino
  105          | expresion . '-' termino
  107          | expresion . '+' '(' expresion_parentesis ')'
  108          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 115
    '+'  desplazar e ir al estado 116

    $default  reduce usando la regla 73 (argumentos)


estado 166

   55 parametro: parametro ';' tipo . ID

    ID  desplazar e ir al estado 191


estado 167

   40 funcion_declaration: encabezado_funcion '(' parametro ')' '{' . sentencias_metodo '}'

    $default  reduce usando la regla 47 (sentencias_metodo)

    sentencias_metodo  ir al estado 192


estado 168

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase . herencia_composicion '}'
   37 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 5

    ','       reduce usando la regla 41 (funcion_declaration)
    $default  reduce usando la regla 43 (herencia_composicion)

    encabezado_funcion    ir al estado 24
    metodo_declaration    ir al estado 170
    funcion_declaration   ir al estado 171
    herencia_composicion  ir al estado 193


estado 169

   36 atributo_declaration: declaracion_variables ',' .

    $default  reduce usando la regla 36 (atributo_declaration)


estado 170

   37 metodos_clase: metodos_clase metodo_declaration .

    $default  reduce usando la regla 37 (metodos_clase)


estado 171

   39 metodo_declaration: funcion_declaration . ','

    ','  desplazar e ir al estado 194


estado 172

   27 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion . '}'
   42 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 195
    '}'  desplazar e ir al estado 196


estado 173

   32 interface_metodo_declaration: encabezado_funcion '(' . parametro ')' ','

    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    ID      desplazar e ir al estado 100

    $default  reduce usando la regla 56 (parametro)

    parametro  ir al estado 197
    tipo       ir al estado 102


estado 174

   37 metodos_clase: metodos_clase . metodo_declaration
   57 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase . '}'

    VOID  desplazar e ir al estado 5
    '}'   desplazar e ir al estado 198

    $default  reduce usando la regla 41 (funcion_declaration)

    encabezado_funcion   ir al estado 24
    metodo_declaration   ir al estado 170
    funcion_declaration  ir al estado 171


estado 175

  111 expresion_parentesis: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 111 (expresion_parentesis)


estado 176

  113 expresion_parentesis: termino '-' termino .
  116 termino: termino . '*' factor
  117        | termino . '/' factor

    '*'  desplazar e ir al estado 118
    '/'  desplazar e ir al estado 119

    $default  reduce usando la regla 113 (expresion_parentesis)


estado 177

  112 expresion_parentesis: termino '+' termino .
  116 termino: termino . '*' factor
  117        | termino . '/' factor

    '*'  desplazar e ir al estado 118
    '/'  desplazar e ir al estado 119

    $default  reduce usando la regla 112 (expresion_parentesis)


estado 178

    5 sentencias: sentencias . sentencia
   90 bloque_sentencias: '{' sentencias . '}'

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '}'        desplazar e ir al estado 199

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 59
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 179

   75 seleccion: IF '(' condicion ')' bloque_sentencias ELSE . bloque_sentencias END_IF
   78          | IF '(' condicion ')' bloque_sentencias ELSE . bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 146

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 147
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 200
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 180

   76 seleccion: IF '(' condicion ')' bloque_sentencias END_IF .

    $default  reduce usando la regla 76 (seleccion)


estado 181

  108 expresion: expresion '-' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 201


estado 182

  107 expresion: expresion '+' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 202


estado 183

  106 expresion: tipo '(' expresion ')' .

    $default  reduce usando la regla 106 (expresion)


estado 184

   96 bucle_for: FOR IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 146

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 147
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 203
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 185

   99 argumento_bucle_for: constante ';' . constante ';' constante
  100                    | constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77

    constante  ir al estado 204


estado 186

   94 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 205


estado 187

   97 bucle_for: FOR ID IN '(' argumento_bucle_for ')' . bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 146

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 147
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 206
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 188

   98 bucle_for: FOR ID RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 146

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 147
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 207
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 189

   95 bucle_for: ID IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 146

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 147
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 208
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 190

   71 invocacion: ID '.' ID '(' argumentos ')' .

    $default  reduce usando la regla 71 (invocacion)


estado 191

   55 parametro: parametro ';' tipo ID .

    $default  reduce usando la regla 55 (parametro)


estado 192

   40 funcion_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_metodo . '}'
   44 sentencias_metodo: sentencias_metodo . declaracion_variables ','
   45                  | sentencias_metodo . ejecutable ','
   46                  | sentencias_metodo . local_function_declaration ','

    error   desplazar e ir al estado 1
    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    VOID    desplazar e ir al estado 5
    IF      desplazar e ir al estado 9
    PRINT   desplazar e ir al estado 10
    FOR     desplazar e ir al estado 11
    RETURN  desplazar e ir al estado 12
    ID      desplazar e ir al estado 209
    STRING  desplazar e ir al estado 14
    '}'     desplazar e ir al estado 210

    ejecutable                  ir al estado 211
    declaracion_variables       ir al estado 212
    encabezado_funcion          ir al estado 213
    local_function_declaration  ir al estado 214
    retorno                     ir al estado 28
    asignacion                  ir al estado 30
    invocacion                  ir al estado 31
    seleccion                   ir al estado 32
    print                       ir al estado 33
    bucle_for                   ir al estado 34
    acceso_atributo             ir al estado 35
    tipo                        ir al estado 36


estado 193

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion . '}'
   42 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 195
    '}'  desplazar e ir al estado 215


estado 194

   39 metodo_declaration: funcion_declaration ',' .

    $default  reduce usando la regla 39 (metodo_declaration)


estado 195

   42 herencia_composicion: herencia_composicion ID . ','

    ','  desplazar e ir al estado 216


estado 196

   27 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 27 (clase_declaration)


estado 197

   32 interface_metodo_declaration: encabezado_funcion '(' parametro . ')' ','
   55 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 131
    ')'  desplazar e ir al estado 217


estado 198

   57 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}' .

    $default  reduce usando la regla 57 (distributed_method_implementation)


estado 199

   90 bloque_sentencias: '{' sentencias '}' .

    $default  reduce usando la regla 90 (bloque_sentencias)


estado 200

   75 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias . END_IF
   78          | IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias .

    END_IF  desplazar e ir al estado 218

    $default  reduce usando la regla 78 (seleccion)


estado 201

  108 expresion: expresion '-' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 108 (expresion)


estado 202

  107 expresion: expresion '+' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 107 (expresion)


estado 203

   96 bucle_for: FOR IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 96 (bucle_for)


estado 204

   99 argumento_bucle_for: constante ';' constante . ';' constante
  100                    | constante ';' constante .

    ';'  desplazar e ir al estado 219

    $default  reduce usando la regla 100 (argumento_bucle_for)


estado 205

   94 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    error      desplazar e ir al estado 1
    SHORT      desplazar e ir al estado 2
    UINT       desplazar e ir al estado 3
    DOUBLE     desplazar e ir al estado 4
    VOID       desplazar e ir al estado 5
    CLASS      desplazar e ir al estado 6
    INTERFACE  desplazar e ir al estado 7
    IMPL       desplazar e ir al estado 8
    IF         desplazar e ir al estado 9
    PRINT      desplazar e ir al estado 10
    FOR        desplazar e ir al estado 11
    RETURN     desplazar e ir al estado 12
    ID         desplazar e ir al estado 13
    STRING     desplazar e ir al estado 14
    '{'        desplazar e ir al estado 146

    ','  reduce usando la regla 41 (funcion_declaration)

    sentencia                          ir al estado 147
    declarativa                        ir al estado 19
    ejecutable                         ir al estado 20
    declaracion_variables              ir al estado 21
    clase_declaration                  ir al estado 22
    interface_declaration              ir al estado 23
    encabezado_funcion                 ir al estado 24
    implement_declaration              ir al estado 25
    funcion_declaration                ir al estado 26
    distributed_method_implementation  ir al estado 27
    retorno                            ir al estado 28
    objeto_declaration                 ir al estado 29
    asignacion                         ir al estado 30
    invocacion                         ir al estado 31
    seleccion                          ir al estado 32
    bloque_sentencias                  ir al estado 220
    print                              ir al estado 33
    bucle_for                          ir al estado 34
    acceso_atributo                    ir al estado 35
    tipo                               ir al estado 36


estado 206

   97 bucle_for: FOR ID IN '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 97 (bucle_for)


estado 207

   98 bucle_for: FOR ID RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 98 (bucle_for)


estado 208

   95 bucle_for: ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 95 (bucle_for)


estado 209

   63 asignacion: ID . asignador expresion
   64           | ID . '.' ID asignador expresion
   65           | ID . asignador
   66           | ID . '.' ID asignador
   67           | ID . asignador '-'
   70 invocacion: ID . '(' argumentos ')'
   71           | ID . '.' ID '(' argumentos ')'
   95 bucle_for: ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
  103 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 47
    PLUS_EQUAL  desplazar e ir al estado 48
    '='         desplazar e ir al estado 49
    '.'         desplazar e ir al estado 50
    '('         desplazar e ir al estado 52

    asignador  ir al estado 55


estado 210

   40 funcion_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_metodo '}' .

    $default  reduce usando la regla 40 (funcion_declaration)


estado 211

   45 sentencias_metodo: sentencias_metodo ejecutable . ','

    ','  desplazar e ir al estado 221


estado 212

   44 sentencias_metodo: sentencias_metodo declaracion_variables . ','

    ','  desplazar e ir al estado 222


estado 213

   48 local_function_declaration: encabezado_funcion . '(' parametro ')' '{' sentencias_funcion_local '}'

    '('  desplazar e ir al estado 223


estado 214

   46 sentencias_metodo: sentencias_metodo local_function_declaration . ','

    ','  desplazar e ir al estado 224


estado 215

   33 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 33 (implement_declaration)


estado 216

   42 herencia_composicion: herencia_composicion ID ',' .

    $default  reduce usando la regla 42 (herencia_composicion)


estado 217

   32 interface_metodo_declaration: encabezado_funcion '(' parametro ')' . ','

    ','  desplazar e ir al estado 225


estado 218

   75 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF .

    $default  reduce usando la regla 75 (seleccion)


estado 219

   99 argumento_bucle_for: constante ';' constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 75
    CTE_UINT    desplazar e ir al estado 76
    CTE_DOUBLE  desplazar e ir al estado 77

    constante  ir al estado 226


estado 220

   94 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 94 (bucle_for)


estado 221

   45 sentencias_metodo: sentencias_metodo ejecutable ',' .

    $default  reduce usando la regla 45 (sentencias_metodo)


estado 222

   44 sentencias_metodo: sentencias_metodo declaracion_variables ',' .

    $default  reduce usando la regla 44 (sentencias_metodo)


estado 223

   48 local_function_declaration: encabezado_funcion '(' . parametro ')' '{' sentencias_funcion_local '}'

    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    ID      desplazar e ir al estado 100

    $default  reduce usando la regla 56 (parametro)

    parametro  ir al estado 227
    tipo       ir al estado 102


estado 224

   46 sentencias_metodo: sentencias_metodo local_function_declaration ',' .

    $default  reduce usando la regla 46 (sentencias_metodo)


estado 225

   32 interface_metodo_declaration: encabezado_funcion '(' parametro ')' ',' .

    $default  reduce usando la regla 32 (interface_metodo_declaration)


estado 226

   99 argumento_bucle_for: constante ';' constante ';' constante .

    $default  reduce usando la regla 99 (argumento_bucle_for)


estado 227

   48 local_function_declaration: encabezado_funcion '(' parametro . ')' '{' sentencias_funcion_local '}'
   55 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 131
    ')'  desplazar e ir al estado 228


estado 228

   48 local_function_declaration: encabezado_funcion '(' parametro ')' . '{' sentencias_funcion_local '}'

    '{'  desplazar e ir al estado 229


estado 229

   48 local_function_declaration: encabezado_funcion '(' parametro ')' '{' . sentencias_funcion_local '}'

    $default  reduce usando la regla 52 (sentencias_funcion_local)

    sentencias_funcion_local  ir al estado 230


estado 230

   48 local_function_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_funcion_local . '}'
   49 sentencias_funcion_local: sentencias_funcion_local . declaracion_variables ','
   50                         | sentencias_funcion_local . ejecutable ','
   51                         | sentencias_funcion_local . local_function_declaration ','

    error   desplazar e ir al estado 1
    SHORT   desplazar e ir al estado 2
    UINT    desplazar e ir al estado 3
    DOUBLE  desplazar e ir al estado 4
    VOID    desplazar e ir al estado 5
    IF      desplazar e ir al estado 9
    PRINT   desplazar e ir al estado 10
    FOR     desplazar e ir al estado 11
    RETURN  desplazar e ir al estado 12
    ID      desplazar e ir al estado 209
    STRING  desplazar e ir al estado 14
    '}'     desplazar e ir al estado 231

    ejecutable                  ir al estado 232
    declaracion_variables       ir al estado 233
    encabezado_funcion          ir al estado 213
    local_function_declaration  ir al estado 234
    retorno                     ir al estado 28
    asignacion                  ir al estado 30
    invocacion                  ir al estado 31
    seleccion                   ir al estado 32
    print                       ir al estado 33
    bucle_for                   ir al estado 34
    acceso_atributo             ir al estado 35
    tipo                        ir al estado 36


estado 231

   48 local_function_declaration: encabezado_funcion '(' parametro ')' '{' sentencias_funcion_local '}' .

    $default  reduce usando la regla 48 (local_function_declaration)


estado 232

   50 sentencias_funcion_local: sentencias_funcion_local ejecutable . ','

    ','  desplazar e ir al estado 235


estado 233

   49 sentencias_funcion_local: sentencias_funcion_local declaracion_variables . ','

    ','  desplazar e ir al estado 236


estado 234

   51 sentencias_funcion_local: sentencias_funcion_local local_function_declaration . ','

    ','  desplazar e ir al estado 237


estado 235

   50 sentencias_funcion_local: sentencias_funcion_local ejecutable ',' .

    $default  reduce usando la regla 50 (sentencias_funcion_local)


estado 236

   49 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ',' .

    $default  reduce usando la regla 49 (sentencias_funcion_local)


estado 237

   51 sentencias_funcion_local: sentencias_funcion_local local_function_declaration ',' .

    $default  reduce usando la regla 51 (sentencias_funcion_local)
