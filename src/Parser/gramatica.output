Gramática

    0 $accept: programa $end

    1 programa: '{' sentencias '}'
    2         | '{' sentencias
    3         | sentencias '}'

    4 sentencias: sentencia
    5           | sentencias sentencia

    6 sentencia: declarativa ','
    7          | ejecutable ','

    8 declarativa: declaracion_variables
    9            | clase_declaration
   10            | objeto_declaration
   11            | interface_declaration
   12            | implement_declaration
   13            | distributed_method_implementation
   14            | funcion_declaration

   15 ejecutable: asignacion
   16           | invocacion
   17           | seleccion
   18           | print
   19           | bucle_for
   20           | acceso_atributo
   21           | retorno

   22 declaracion_variables: tipo lista_variables

   23 lista_variables: lista_variables ';' ID
   24                | ID

   25 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}'

   26 interface_declaration: INTERFACE ID '{' interface_metodos '}'

   27 interface_metodos: interface_metodos interface_metodo_declaration
   28                  | /* vacío */

   29 interface_metodo_declaration: VOID ID '(' parametro ')' ','

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

   31 atributos: atributos atributo_declaration
   32          | /* vacío */

   33 atributo_declaration: declaracion_variables ','

   34 metodos_clase: metodos_clase metodo_declaration
   35              | /* vacío */

   36 metodo_declaration: funcion_declaration ','

   37 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo '}'
   38                    | /* vacío */

   39 herencia_composicion: herencia_composicion ID ','
   40                     | /* vacío */

   41 sentencias_metodo: sentencias_metodo declaracion_variables ','
   42                  | sentencias_metodo ejecutable ','
   43                  | sentencias_metodo local_function_declaration ','
   44                  | /* vacío */

   45 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local '}'

   46 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ','
   47                         | sentencias_funcion_local ejecutable ','
   48                         | sentencias_funcion_local local_function_declaration ','
   49                         | /* vacío */

   50 parametro: tipo ID
   51          | ID
   52          | parametro ';' tipo ID
   53          | /* vacío */

   54 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}'

   55 retorno: RETURN

   56 objeto_declaration: ID lista_objetos

   57 lista_objetos: lista_objetos ';' objeto
   58              | objeto

   59 objeto: ID

   60 asignacion: ID asignador expresion
   61           | ID '.' ID asignador expresion
   62           | ID asignador
   63           | ID '.' ID asignador

   64 asignador: '='
   65          | PLUS_EQUAL

   66 invocacion: ID '(' argumentos ')'
   67           | ID '.' ID '(' argumentos ')'

   68 argumentos: expresion
   69           | argumentos ';' expresion
   70           | /* vacío */

   71 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   72          | IF '(' condicion ')' bloque_sentencias END_IF
   73          | IF '(' condicion ')' bloque_sentencias
   74          | IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias

   75 condicion: expresion comparador expresion
   76          | expresion comparador
   77          | comparador expresion
   78          | expresion

   79 comparador: '<'
   80           | '>'
   81           | LESS_EQUAL
   82           | GREATER_EQUAL
   83           | EQUAL
   84           | NOT_EQUAL

   85 bloque_sentencias: sentencia
   86                  | '{' sentencias '}'

   87 print: PRINT STRING
   88      | PRINT
   89      | STRING

   90 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   91          | ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   92          | FOR IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   93          | FOR ID IN '(' argumento_bucle_for ')' bloque_sentencias
   94          | FOR ID RANGE '(' argumento_bucle_for ')' bloque_sentencias

   95 argumento_bucle_for: constante ';' constante ';' constante
   96                    | constante ';' constante
   97                    | constante
   98                    | /* vacío */

   99 acceso_atributo: ID '.' ID

  100 expresion: expresion '+' termino
  101          | expresion '-' termino
  102          | tipo '(' expresion ')'
  103          | expresion '+' '(' expresion_parentesis ')'
  104          | expresion '-' '(' expresion_parentesis ')'
  105          | '(' expresion_parentesis ')'
  106          | termino

  107 expresion_parentesis: '(' expresion_parentesis ')'
  108                     | termino '+' termino
  109                     | termino '-' termino
  110                     | termino

  111 termino: factor
  112        | termino '*' factor
  113        | termino '/' factor

  114 factor: ID
  115       | '-' constante
  116       | constante

  117 constante: CTE_SHORT
  118          | CTE_DOUBLE
  119          | CTE_UINT

  120 tipo: SHORT
  121     | UINT
  122     | DOUBLE


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 29 37 45 66 67 71 72 73 74 90 91 92 93 94 102 103 104 105
    107
')' (41) 29 37 45 66 67 71 72 73 74 90 91 92 93 94 102 103 104 105
    107
'*' (42) 112
'+' (43) 100 103 108
',' (44) 6 7 29 33 36 39 41 42 43 46 47 48
'-' (45) 101 104 109 115
'.' (46) 61 63 67 99
'/' (47) 113
':' (58) 54
';' (59) 23 52 57 69 95 96
'<' (60) 79
'=' (61) 64
'>' (62) 80
'{' (123) 1 2 25 26 30 37 45 54 86
'}' (125) 1 3 25 26 30 37 45 54 86
error (256)
SHORT (258) 120
UINT (259) 121
DOUBLE (260) 122
VOID (261) 29 37 45
CLASS (262) 25 30
INTERFACE (263) 26
IMPLEMENT (264) 30
IMPL (265) 54
IF (266) 71 72 73 74
ELSE (267) 71 74
END_IF (268) 71 72
PRINT (269) 87 88
FOR (270) 54 90 92 93 94
IN (271) 90 91 92 93
RANGE (272) 90 91 92 94
RETURN (273) 55
LESS_EQUAL (274) 81
GREATER_EQUAL (275) 82
EQUAL (276) 83
NOT_EQUAL (277) 84
PLUS_EQUAL (278) 65
ID (279) 23 24 25 26 29 30 37 39 45 50 51 52 54 56 59 60 61 62 63 66
    67 90 91 93 94 99 114
STRING (280) 87 89
CTE_SHORT (281) 117
CTE_UINT (282) 119
CTE_DOUBLE (283) 118


No terminales con las reglas donde aparecen

$accept (44)
    en la izquierda: 0
programa (45)
    en la izquierda: 1 2 3, en la derecha: 0
sentencias (46)
    en la izquierda: 4 5, en la derecha: 1 2 3 5 86
sentencia (47)
    en la izquierda: 6 7, en la derecha: 4 5 85
declarativa (48)
    en la izquierda: 8 9 10 11 12 13 14, en la derecha: 6
ejecutable (49)
    en la izquierda: 15 16 17 18 19 20 21, en la derecha: 7 42 47
declaracion_variables (50)
    en la izquierda: 22, en la derecha: 8 33 41 46
lista_variables (51)
    en la izquierda: 23 24, en la derecha: 22 23
clase_declaration (52)
    en la izquierda: 25, en la derecha: 9
interface_declaration (53)
    en la izquierda: 26, en la derecha: 11
interface_metodos (54)
    en la izquierda: 27 28, en la derecha: 26 27
interface_metodo_declaration (55)
    en la izquierda: 29, en la derecha: 27
implement_declaration (56)
    en la izquierda: 30, en la derecha: 12
atributos (57)
    en la izquierda: 31 32, en la derecha: 25 31
atributo_declaration (58)
    en la izquierda: 33, en la derecha: 31
metodos_clase (59)
    en la izquierda: 34 35, en la derecha: 25 30 34 54
metodo_declaration (60)
    en la izquierda: 36, en la derecha: 34
funcion_declaration (61)
    en la izquierda: 37 38, en la derecha: 14 36
herencia_composicion (62)
    en la izquierda: 39 40, en la derecha: 25 30 39
sentencias_metodo (63)
    en la izquierda: 41 42 43 44, en la derecha: 37 41 42 43
local_function_declaration (64)
    en la izquierda: 45, en la derecha: 43 48
sentencias_funcion_local (65)
    en la izquierda: 46 47 48 49, en la derecha: 45 46 47 48
parametro (66)
    en la izquierda: 50 51 52 53, en la derecha: 29 37 45 52
distributed_method_implementation (67)
    en la izquierda: 54, en la derecha: 13
retorno (68)
    en la izquierda: 55, en la derecha: 21
objeto_declaration (69)
    en la izquierda: 56, en la derecha: 10
lista_objetos (70)
    en la izquierda: 57 58, en la derecha: 56 57
objeto (71)
    en la izquierda: 59, en la derecha: 57 58
asignacion (72)
    en la izquierda: 60 61 62 63, en la derecha: 15
asignador (73)
    en la izquierda: 64 65, en la derecha: 60 61 62 63
invocacion (74)
    en la izquierda: 66 67, en la derecha: 16
argumentos (75)
    en la izquierda: 68 69 70, en la derecha: 66 67 69
seleccion (76)
    en la izquierda: 71 72 73 74, en la derecha: 17
condicion (77)
    en la izquierda: 75 76 77 78, en la derecha: 71 72 73 74
comparador (78)
    en la izquierda: 79 80 81 82 83 84, en la derecha: 75 76 77
bloque_sentencias (79)
    en la izquierda: 85 86, en la derecha: 71 72 73 74 90 91 92 93
    94
print (80)
    en la izquierda: 87 88 89, en la derecha: 18
bucle_for (81)
    en la izquierda: 90 91 92 93 94, en la derecha: 19
argumento_bucle_for (82)
    en la izquierda: 95 96 97 98, en la derecha: 90 91 92 93 94
acceso_atributo (83)
    en la izquierda: 99, en la derecha: 20
expresion (84)
    en la izquierda: 100 101 102 103 104 105 106, en la derecha: 60
    61 68 69 75 76 77 78 100 101 102 103 104
expresion_parentesis (85)
    en la izquierda: 107 108 109 110, en la derecha: 103 104 105 107
termino (86)
    en la izquierda: 111 112 113, en la derecha: 100 101 106 108 109
    110 112 113
factor (87)
    en la izquierda: 114 115 116, en la derecha: 111 112 113
constante (88)
    en la izquierda: 117 118 119, en la derecha: 95 96 97 115 116
tipo (89)
    en la izquierda: 120 121 122, en la derecha: 22 50 52 102


estado 0

    0 $accept: . programa $end

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 14

    $default  reduce usando la regla 38 (funcion_declaration)

    programa                           ir al estado 15
    sentencias                         ir al estado 16
    sentencia                          ir al estado 17
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 1

  120 tipo: SHORT .

    $default  reduce usando la regla 120 (tipo)


estado 2

  121 tipo: UINT .

    $default  reduce usando la regla 121 (tipo)


estado 3

  122 tipo: DOUBLE .

    $default  reduce usando la regla 122 (tipo)


estado 4

   37 funcion_declaration: VOID . ID '(' parametro ')' '{' sentencias_metodo '}'

    ID  desplazar e ir al estado 35


estado 5

   25 clase_declaration: CLASS . ID '{' atributos metodos_clase herencia_composicion '}'
   30 implement_declaration: CLASS . ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 36


estado 6

   26 interface_declaration: INTERFACE . ID '{' interface_metodos '}'

    ID  desplazar e ir al estado 37


estado 7

   54 distributed_method_implementation: IMPL . FOR ID ':' '{' metodos_clase '}'

    FOR  desplazar e ir al estado 38


estado 8

   71 seleccion: IF . '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   72          | IF . '(' condicion ')' bloque_sentencias END_IF
   73          | IF . '(' condicion ')' bloque_sentencias
   74          | IF . '(' condicion ')' bloque_sentencias ELSE bloque_sentencias

    '('  desplazar e ir al estado 39


estado 9

   87 print: PRINT . STRING
   88      | PRINT .

    STRING  desplazar e ir al estado 40

    $default  reduce usando la regla 88 (print)


estado 10

   90 bucle_for: FOR . ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   92          | FOR . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   93          | FOR . ID IN '(' argumento_bucle_for ')' bloque_sentencias
   94          | FOR . ID RANGE '(' argumento_bucle_for ')' bloque_sentencias

    IN  desplazar e ir al estado 41
    ID  desplazar e ir al estado 42


estado 11

   55 retorno: RETURN .

    $default  reduce usando la regla 55 (retorno)


estado 12

   56 objeto_declaration: ID . lista_objetos
   60 asignacion: ID . asignador expresion
   61           | ID . '.' ID asignador expresion
   62           | ID . asignador
   63           | ID . '.' ID asignador
   66 invocacion: ID . '(' argumentos ')'
   67           | ID . '.' ID '(' argumentos ')'
   91 bucle_for: ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   99 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 43
    PLUS_EQUAL  desplazar e ir al estado 44
    '='         desplazar e ir al estado 45
    '.'         desplazar e ir al estado 46
    ID          desplazar e ir al estado 47
    '('         desplazar e ir al estado 48

    lista_objetos  ir al estado 49
    objeto         ir al estado 50
    asignador      ir al estado 51


estado 13

   89 print: STRING .

    $default  reduce usando la regla 89 (print)


estado 14

    1 programa: '{' . sentencias '}'
    2         | '{' . sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencias                         ir al estado 52
    sentencia                          ir al estado 17
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 15

    0 $accept: programa . $end

    $end  desplazar e ir al estado 53


estado 16

    3 programa: sentencias . '}'
    5 sentencias: sentencias . sentencia

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '}'        desplazar e ir al estado 54

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 55
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 17

    4 sentencias: sentencia .

    $default  reduce usando la regla 4 (sentencias)


estado 18

    6 sentencia: declarativa . ','

    ','  desplazar e ir al estado 56


estado 19

    7 sentencia: ejecutable . ','

    ','  desplazar e ir al estado 57


estado 20

    8 declarativa: declaracion_variables .

    $default  reduce usando la regla 8 (declarativa)


estado 21

    9 declarativa: clase_declaration .

    $default  reduce usando la regla 9 (declarativa)


estado 22

   11 declarativa: interface_declaration .

    $default  reduce usando la regla 11 (declarativa)


estado 23

   12 declarativa: implement_declaration .

    $default  reduce usando la regla 12 (declarativa)


estado 24

   14 declarativa: funcion_declaration .

    $default  reduce usando la regla 14 (declarativa)


estado 25

   13 declarativa: distributed_method_implementation .

    $default  reduce usando la regla 13 (declarativa)


estado 26

   21 ejecutable: retorno .

    $default  reduce usando la regla 21 (ejecutable)


estado 27

   10 declarativa: objeto_declaration .

    $default  reduce usando la regla 10 (declarativa)


estado 28

   15 ejecutable: asignacion .

    $default  reduce usando la regla 15 (ejecutable)


estado 29

   16 ejecutable: invocacion .

    $default  reduce usando la regla 16 (ejecutable)


estado 30

   17 ejecutable: seleccion .

    $default  reduce usando la regla 17 (ejecutable)


estado 31

   18 ejecutable: print .

    $default  reduce usando la regla 18 (ejecutable)


estado 32

   19 ejecutable: bucle_for .

    $default  reduce usando la regla 19 (ejecutable)


estado 33

   20 ejecutable: acceso_atributo .

    $default  reduce usando la regla 20 (ejecutable)


estado 34

   22 declaracion_variables: tipo . lista_variables

    ID  desplazar e ir al estado 58

    lista_variables  ir al estado 59


estado 35

   37 funcion_declaration: VOID ID . '(' parametro ')' '{' sentencias_metodo '}'

    '('  desplazar e ir al estado 60


estado 36

   25 clase_declaration: CLASS ID . '{' atributos metodos_clase herencia_composicion '}'
   30 implement_declaration: CLASS ID . IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    IMPLEMENT  desplazar e ir al estado 61
    '{'        desplazar e ir al estado 62


estado 37

   26 interface_declaration: INTERFACE ID . '{' interface_metodos '}'

    '{'  desplazar e ir al estado 63


estado 38

   54 distributed_method_implementation: IMPL FOR . ID ':' '{' metodos_clase '}'

    ID  desplazar e ir al estado 64


estado 39

   71 seleccion: IF '(' . condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   72          | IF '(' . condicion ')' bloque_sentencias END_IF
   73          | IF '(' . condicion ')' bloque_sentencias
   74          | IF '(' . condicion ')' bloque_sentencias ELSE bloque_sentencias

    SHORT          desplazar e ir al estado 1
    UINT           desplazar e ir al estado 2
    DOUBLE         desplazar e ir al estado 3
    LESS_EQUAL     desplazar e ir al estado 65
    GREATER_EQUAL  desplazar e ir al estado 66
    EQUAL          desplazar e ir al estado 67
    NOT_EQUAL      desplazar e ir al estado 68
    ID             desplazar e ir al estado 69
    CTE_SHORT      desplazar e ir al estado 70
    CTE_UINT       desplazar e ir al estado 71
    CTE_DOUBLE     desplazar e ir al estado 72
    '('            desplazar e ir al estado 73
    '<'            desplazar e ir al estado 74
    '>'            desplazar e ir al estado 75
    '-'            desplazar e ir al estado 76

    condicion   ir al estado 77
    comparador  ir al estado 78
    expresion   ir al estado 79
    termino     ir al estado 80
    factor      ir al estado 81
    constante   ir al estado 82
    tipo        ir al estado 83


estado 40

   87 print: PRINT STRING .

    $default  reduce usando la regla 87 (print)


estado 41

   92 bucle_for: FOR IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 84


estado 42

   90 bucle_for: FOR ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   93          | FOR ID . IN '(' argumento_bucle_for ')' bloque_sentencias
   94          | FOR ID . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    IN     desplazar e ir al estado 85
    RANGE  desplazar e ir al estado 86


estado 43

   91 bucle_for: ID IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 87


estado 44

   65 asignador: PLUS_EQUAL .

    $default  reduce usando la regla 65 (asignador)


estado 45

   64 asignador: '=' .

    $default  reduce usando la regla 64 (asignador)


estado 46

   61 asignacion: ID '.' . ID asignador expresion
   63           | ID '.' . ID asignador
   67 invocacion: ID '.' . ID '(' argumentos ')'
   99 acceso_atributo: ID '.' . ID

    ID  desplazar e ir al estado 88


estado 47

   59 objeto: ID .

    $default  reduce usando la regla 59 (objeto)


estado 48

   66 invocacion: ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 76

    $default  reduce usando la regla 70 (argumentos)

    argumentos  ir al estado 89
    expresion   ir al estado 90
    termino     ir al estado 80
    factor      ir al estado 81
    constante   ir al estado 82
    tipo        ir al estado 83


estado 49

   56 objeto_declaration: ID lista_objetos .
   57 lista_objetos: lista_objetos . ';' objeto

    ';'  desplazar e ir al estado 91

    $default  reduce usando la regla 56 (objeto_declaration)


estado 50

   58 lista_objetos: objeto .

    $default  reduce usando la regla 58 (lista_objetos)


estado 51

   60 asignacion: ID asignador . expresion
   62           | ID asignador .

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 76

    $default  reduce usando la regla 62 (asignacion)

    expresion  ir al estado 92
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 52

    1 programa: '{' sentencias . '}'
    2         | '{' sentencias .
    5 sentencias: sentencias . sentencia

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '}'        desplazar e ir al estado 93

    ','       reduce usando la regla 38 (funcion_declaration)
    $default  reduce usando la regla 2 (programa)

    sentencia                          ir al estado 55
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 53

    0 $accept: programa $end .

    $default  aceptar


estado 54

    3 programa: sentencias '}' .

    $default  reduce usando la regla 3 (programa)


estado 55

    5 sentencias: sentencias sentencia .

    $default  reduce usando la regla 5 (sentencias)


estado 56

    6 sentencia: declarativa ',' .

    $default  reduce usando la regla 6 (sentencia)


estado 57

    7 sentencia: ejecutable ',' .

    $default  reduce usando la regla 7 (sentencia)


estado 58

   24 lista_variables: ID .

    $default  reduce usando la regla 24 (lista_variables)


estado 59

   22 declaracion_variables: tipo lista_variables .
   23 lista_variables: lista_variables . ';' ID

    ';'  desplazar e ir al estado 94

    $default  reduce usando la regla 22 (declaracion_variables)


estado 60

   37 funcion_declaration: VOID ID '(' . parametro ')' '{' sentencias_metodo '}'

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    ID      desplazar e ir al estado 95

    $default  reduce usando la regla 53 (parametro)

    parametro  ir al estado 96
    tipo       ir al estado 97


estado 61

   30 implement_declaration: CLASS ID IMPLEMENT . ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 98


estado 62

   25 clase_declaration: CLASS ID '{' . atributos metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 32 (atributos)

    atributos  ir al estado 99


estado 63

   26 interface_declaration: INTERFACE ID '{' . interface_metodos '}'

    $default  reduce usando la regla 28 (interface_metodos)

    interface_metodos  ir al estado 100


estado 64

   54 distributed_method_implementation: IMPL FOR ID . ':' '{' metodos_clase '}'

    ':'  desplazar e ir al estado 101


estado 65

   81 comparador: LESS_EQUAL .

    $default  reduce usando la regla 81 (comparador)


estado 66

   82 comparador: GREATER_EQUAL .

    $default  reduce usando la regla 82 (comparador)


estado 67

   83 comparador: EQUAL .

    $default  reduce usando la regla 83 (comparador)


estado 68

   84 comparador: NOT_EQUAL .

    $default  reduce usando la regla 84 (comparador)


estado 69

  114 factor: ID .

    $default  reduce usando la regla 114 (factor)


estado 70

  117 constante: CTE_SHORT .

    $default  reduce usando la regla 117 (constante)


estado 71

  119 constante: CTE_UINT .

    $default  reduce usando la regla 119 (constante)


estado 72

  118 constante: CTE_DOUBLE .

    $default  reduce usando la regla 118 (constante)


estado 73

  105 expresion: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 102
    '-'         desplazar e ir al estado 76

    expresion_parentesis  ir al estado 103
    termino               ir al estado 104
    factor                ir al estado 81
    constante             ir al estado 82


estado 74

   79 comparador: '<' .

    $default  reduce usando la regla 79 (comparador)


estado 75

   80 comparador: '>' .

    $default  reduce usando la regla 80 (comparador)


estado 76

  115 factor: '-' . constante

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    constante  ir al estado 105


estado 77

   71 seleccion: IF '(' condicion . ')' bloque_sentencias ELSE bloque_sentencias END_IF
   72          | IF '(' condicion . ')' bloque_sentencias END_IF
   73          | IF '(' condicion . ')' bloque_sentencias
   74          | IF '(' condicion . ')' bloque_sentencias ELSE bloque_sentencias

    ')'  desplazar e ir al estado 106


estado 78

   77 condicion: comparador . expresion

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 76

    expresion  ir al estado 107
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 79

   75 condicion: expresion . comparador expresion
   76          | expresion . comparador
   78          | expresion .
  100 expresion: expresion . '+' termino
  101          | expresion . '-' termino
  103          | expresion . '+' '(' expresion_parentesis ')'
  104          | expresion . '-' '(' expresion_parentesis ')'

    LESS_EQUAL     desplazar e ir al estado 65
    GREATER_EQUAL  desplazar e ir al estado 66
    EQUAL          desplazar e ir al estado 67
    NOT_EQUAL      desplazar e ir al estado 68
    '<'            desplazar e ir al estado 74
    '>'            desplazar e ir al estado 75
    '+'            desplazar e ir al estado 108
    '-'            desplazar e ir al estado 109

    $default  reduce usando la regla 78 (condicion)

    comparador  ir al estado 110


estado 80

  106 expresion: termino .
  112 termino: termino . '*' factor
  113        | termino . '/' factor

    '*'  desplazar e ir al estado 111
    '/'  desplazar e ir al estado 112

    $default  reduce usando la regla 106 (expresion)


estado 81

  111 termino: factor .

    $default  reduce usando la regla 111 (termino)


estado 82

  116 factor: constante .

    $default  reduce usando la regla 116 (factor)


estado 83

  102 expresion: tipo . '(' expresion ')'

    '('  desplazar e ir al estado 113


estado 84

   92 bucle_for: FOR IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 114


estado 85

   90 bucle_for: FOR ID IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias
   93          | FOR ID IN . '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 115
    '('    desplazar e ir al estado 116


estado 86

   94 bucle_for: FOR ID RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 117


estado 87

   91 bucle_for: ID IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 118


estado 88

   61 asignacion: ID '.' ID . asignador expresion
   63           | ID '.' ID . asignador
   67 invocacion: ID '.' ID . '(' argumentos ')'
   99 acceso_atributo: ID '.' ID .

    PLUS_EQUAL  desplazar e ir al estado 44
    '='         desplazar e ir al estado 45
    '('         desplazar e ir al estado 119

    $default  reduce usando la regla 99 (acceso_atributo)

    asignador  ir al estado 120


estado 89

   66 invocacion: ID '(' argumentos . ')'
   69 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 121
    ')'  desplazar e ir al estado 122


estado 90

   68 argumentos: expresion .
  100 expresion: expresion . '+' termino
  101          | expresion . '-' termino
  103          | expresion . '+' '(' expresion_parentesis ')'
  104          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 108
    '-'  desplazar e ir al estado 109

    $default  reduce usando la regla 68 (argumentos)


estado 91

   57 lista_objetos: lista_objetos ';' . objeto

    ID  desplazar e ir al estado 47

    objeto  ir al estado 123


estado 92

   60 asignacion: ID asignador expresion .
  100 expresion: expresion . '+' termino
  101          | expresion . '-' termino
  103          | expresion . '+' '(' expresion_parentesis ')'
  104          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 108
    '-'  desplazar e ir al estado 109

    $default  reduce usando la regla 60 (asignacion)


estado 93

    1 programa: '{' sentencias '}' .

    $default  reduce usando la regla 1 (programa)


estado 94

   23 lista_variables: lista_variables ';' . ID

    ID  desplazar e ir al estado 124


estado 95

   51 parametro: ID .

    $default  reduce usando la regla 51 (parametro)


estado 96

   37 funcion_declaration: VOID ID '(' parametro . ')' '{' sentencias_metodo '}'
   52 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 125
    ')'  desplazar e ir al estado 126


estado 97

   50 parametro: tipo . ID

    ID  desplazar e ir al estado 127


estado 98

   30 implement_declaration: CLASS ID IMPLEMENT ID . '{' metodos_clase herencia_composicion '}'

    '{'  desplazar e ir al estado 128


estado 99

   25 clase_declaration: CLASS ID '{' atributos . metodos_clase herencia_composicion '}'
   31 atributos: atributos . atributo_declaration

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3

    $default  reduce usando la regla 35 (metodos_clase)

    declaracion_variables  ir al estado 129
    atributo_declaration   ir al estado 130
    metodos_clase          ir al estado 131
    tipo                   ir al estado 34


estado 100

   26 interface_declaration: INTERFACE ID '{' interface_metodos . '}'
   27 interface_metodos: interface_metodos . interface_metodo_declaration

    VOID  desplazar e ir al estado 132
    '}'   desplazar e ir al estado 133

    interface_metodo_declaration  ir al estado 134


estado 101

   54 distributed_method_implementation: IMPL FOR ID ':' . '{' metodos_clase '}'

    '{'  desplazar e ir al estado 135


estado 102

  107 expresion_parentesis: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 102
    '-'         desplazar e ir al estado 76

    expresion_parentesis  ir al estado 136
    termino               ir al estado 104
    factor                ir al estado 81
    constante             ir al estado 82


estado 103

  105 expresion: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 137


estado 104

  108 expresion_parentesis: termino . '+' termino
  109                     | termino . '-' termino
  110                     | termino .
  112 termino: termino . '*' factor
  113        | termino . '/' factor

    '+'  desplazar e ir al estado 138
    '-'  desplazar e ir al estado 139
    '*'  desplazar e ir al estado 111
    '/'  desplazar e ir al estado 112

    $default  reduce usando la regla 110 (expresion_parentesis)


estado 105

  115 factor: '-' constante .

    $default  reduce usando la regla 115 (factor)


estado 106

   71 seleccion: IF '(' condicion ')' . bloque_sentencias ELSE bloque_sentencias END_IF
   72          | IF '(' condicion ')' . bloque_sentencias END_IF
   73          | IF '(' condicion ')' . bloque_sentencias
   74          | IF '(' condicion ')' . bloque_sentencias ELSE bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 140

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 141
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 142
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 107

   77 condicion: comparador expresion .
  100 expresion: expresion . '+' termino
  101          | expresion . '-' termino
  103          | expresion . '+' '(' expresion_parentesis ')'
  104          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 108
    '-'  desplazar e ir al estado 109

    $default  reduce usando la regla 77 (condicion)


estado 108

  100 expresion: expresion '+' . termino
  103          | expresion '+' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 143
    '-'         desplazar e ir al estado 76

    termino    ir al estado 144
    factor     ir al estado 81
    constante  ir al estado 82


estado 109

  101 expresion: expresion '-' . termino
  104          | expresion '-' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 145
    '-'         desplazar e ir al estado 76

    termino    ir al estado 146
    factor     ir al estado 81
    constante  ir al estado 82


estado 110

   75 condicion: expresion comparador . expresion
   76          | expresion comparador .

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 76

    $default  reduce usando la regla 76 (condicion)

    expresion  ir al estado 147
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 111

  112 termino: termino '*' . factor

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '-'         desplazar e ir al estado 76

    factor     ir al estado 148
    constante  ir al estado 82


estado 112

  113 termino: termino '/' . factor

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '-'         desplazar e ir al estado 76

    factor     ir al estado 149
    constante  ir al estado 82


estado 113

  102 expresion: tipo '(' . expresion ')'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 76

    expresion  ir al estado 150
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 114

   92 bucle_for: FOR IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 98 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 151
    constante            ir al estado 152


estado 115

   90 bucle_for: FOR ID IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 153


estado 116

   93 bucle_for: FOR ID IN '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 98 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 154
    constante            ir al estado 152


estado 117

   94 bucle_for: FOR ID RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 98 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 155
    constante            ir al estado 152


estado 118

   91 bucle_for: ID IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 98 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 156
    constante            ir al estado 152


estado 119

   67 invocacion: ID '.' ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 76

    $default  reduce usando la regla 70 (argumentos)

    argumentos  ir al estado 157
    expresion   ir al estado 90
    termino     ir al estado 80
    factor      ir al estado 81
    constante   ir al estado 82
    tipo        ir al estado 83


estado 120

   61 asignacion: ID '.' ID asignador . expresion
   63           | ID '.' ID asignador .

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 76

    $default  reduce usando la regla 63 (asignacion)

    expresion  ir al estado 158
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 121

   69 argumentos: argumentos ';' . expresion

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 76

    expresion  ir al estado 159
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 122

   66 invocacion: ID '(' argumentos ')' .

    $default  reduce usando la regla 66 (invocacion)


estado 123

   57 lista_objetos: lista_objetos ';' objeto .

    $default  reduce usando la regla 57 (lista_objetos)


estado 124

   23 lista_variables: lista_variables ';' ID .

    $default  reduce usando la regla 23 (lista_variables)


estado 125

   52 parametro: parametro ';' . tipo ID

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3

    tipo  ir al estado 160


estado 126

   37 funcion_declaration: VOID ID '(' parametro ')' . '{' sentencias_metodo '}'

    '{'  desplazar e ir al estado 161


estado 127

   50 parametro: tipo ID .

    $default  reduce usando la regla 50 (parametro)


estado 128

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' . metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 35 (metodos_clase)

    metodos_clase  ir al estado 162


estado 129

   33 atributo_declaration: declaracion_variables . ','

    ','  desplazar e ir al estado 163


estado 130

   31 atributos: atributos atributo_declaration .

    $default  reduce usando la regla 31 (atributos)


estado 131

   25 clase_declaration: CLASS ID '{' atributos metodos_clase . herencia_composicion '}'
   34 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 4

    ','       reduce usando la regla 38 (funcion_declaration)
    $default  reduce usando la regla 40 (herencia_composicion)

    metodo_declaration    ir al estado 164
    funcion_declaration   ir al estado 165
    herencia_composicion  ir al estado 166


estado 132

   29 interface_metodo_declaration: VOID . ID '(' parametro ')' ','

    ID  desplazar e ir al estado 167


estado 133

   26 interface_declaration: INTERFACE ID '{' interface_metodos '}' .

    $default  reduce usando la regla 26 (interface_declaration)


estado 134

   27 interface_metodos: interface_metodos interface_metodo_declaration .

    $default  reduce usando la regla 27 (interface_metodos)


estado 135

   54 distributed_method_implementation: IMPL FOR ID ':' '{' . metodos_clase '}'

    $default  reduce usando la regla 35 (metodos_clase)

    metodos_clase  ir al estado 168


estado 136

  107 expresion_parentesis: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 169


estado 137

  105 expresion: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 105 (expresion)


estado 138

  108 expresion_parentesis: termino '+' . termino

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '-'         desplazar e ir al estado 76

    termino    ir al estado 170
    factor     ir al estado 81
    constante  ir al estado 82


estado 139

  109 expresion_parentesis: termino '-' . termino

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '-'         desplazar e ir al estado 76

    termino    ir al estado 171
    factor     ir al estado 81
    constante  ir al estado 82


estado 140

   86 bloque_sentencias: '{' . sentencias '}'

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencias                         ir al estado 172
    sentencia                          ir al estado 17
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 141

   85 bloque_sentencias: sentencia .

    $default  reduce usando la regla 85 (bloque_sentencias)


estado 142

   71 seleccion: IF '(' condicion ')' bloque_sentencias . ELSE bloque_sentencias END_IF
   72          | IF '(' condicion ')' bloque_sentencias . END_IF
   73          | IF '(' condicion ')' bloque_sentencias .
   74          | IF '(' condicion ')' bloque_sentencias . ELSE bloque_sentencias

    ELSE    desplazar e ir al estado 173
    END_IF  desplazar e ir al estado 174

    $default  reduce usando la regla 73 (seleccion)


estado 143

  103 expresion: expresion '+' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 102
    '-'         desplazar e ir al estado 76

    expresion_parentesis  ir al estado 175
    termino               ir al estado 104
    factor                ir al estado 81
    constante             ir al estado 82


estado 144

  100 expresion: expresion '+' termino .
  112 termino: termino . '*' factor
  113        | termino . '/' factor

    '*'  desplazar e ir al estado 111
    '/'  desplazar e ir al estado 112

    $default  reduce usando la regla 100 (expresion)


estado 145

  104 expresion: expresion '-' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 102
    '-'         desplazar e ir al estado 76

    expresion_parentesis  ir al estado 176
    termino               ir al estado 104
    factor                ir al estado 81
    constante             ir al estado 82


estado 146

  101 expresion: expresion '-' termino .
  112 termino: termino . '*' factor
  113        | termino . '/' factor

    '*'  desplazar e ir al estado 111
    '/'  desplazar e ir al estado 112

    $default  reduce usando la regla 101 (expresion)


estado 147

   75 condicion: expresion comparador expresion .
  100 expresion: expresion . '+' termino
  101          | expresion . '-' termino
  103          | expresion . '+' '(' expresion_parentesis ')'
  104          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 108
    '-'  desplazar e ir al estado 109

    $default  reduce usando la regla 75 (condicion)


estado 148

  112 termino: termino '*' factor .

    $default  reduce usando la regla 112 (termino)


estado 149

  113 termino: termino '/' factor .

    $default  reduce usando la regla 113 (termino)


estado 150

  100 expresion: expresion . '+' termino
  101          | expresion . '-' termino
  102          | tipo '(' expresion . ')'
  103          | expresion . '+' '(' expresion_parentesis ')'
  104          | expresion . '-' '(' expresion_parentesis ')'

    ')'  desplazar e ir al estado 177
    '+'  desplazar e ir al estado 108
    '-'  desplazar e ir al estado 109


estado 151

   92 bucle_for: FOR IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 178


estado 152

   95 argumento_bucle_for: constante . ';' constante ';' constante
   96                    | constante . ';' constante
   97                    | constante .

    ';'  desplazar e ir al estado 179

    $default  reduce usando la regla 97 (argumento_bucle_for)


estado 153

   90 bucle_for: FOR ID IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 98 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 180
    constante            ir al estado 152


estado 154

   93 bucle_for: FOR ID IN '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 181


estado 155

   94 bucle_for: FOR ID RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 182


estado 156

   91 bucle_for: ID IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 183


estado 157

   67 invocacion: ID '.' ID '(' argumentos . ')'
   69 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 121
    ')'  desplazar e ir al estado 184


estado 158

   61 asignacion: ID '.' ID asignador expresion .
  100 expresion: expresion . '+' termino
  101          | expresion . '-' termino
  103          | expresion . '+' '(' expresion_parentesis ')'
  104          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 108
    '-'  desplazar e ir al estado 109

    $default  reduce usando la regla 61 (asignacion)


estado 159

   69 argumentos: argumentos ';' expresion .
  100 expresion: expresion . '+' termino
  101          | expresion . '-' termino
  103          | expresion . '+' '(' expresion_parentesis ')'
  104          | expresion . '-' '(' expresion_parentesis ')'

    '+'  desplazar e ir al estado 108
    '-'  desplazar e ir al estado 109

    $default  reduce usando la regla 69 (argumentos)


estado 160

   52 parametro: parametro ';' tipo . ID

    ID  desplazar e ir al estado 185


estado 161

   37 funcion_declaration: VOID ID '(' parametro ')' '{' . sentencias_metodo '}'

    $default  reduce usando la regla 44 (sentencias_metodo)

    sentencias_metodo  ir al estado 186


estado 162

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase . herencia_composicion '}'
   34 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 4

    ','       reduce usando la regla 38 (funcion_declaration)
    $default  reduce usando la regla 40 (herencia_composicion)

    metodo_declaration    ir al estado 164
    funcion_declaration   ir al estado 165
    herencia_composicion  ir al estado 187


estado 163

   33 atributo_declaration: declaracion_variables ',' .

    $default  reduce usando la regla 33 (atributo_declaration)


estado 164

   34 metodos_clase: metodos_clase metodo_declaration .

    $default  reduce usando la regla 34 (metodos_clase)


estado 165

   36 metodo_declaration: funcion_declaration . ','

    ','  desplazar e ir al estado 188


estado 166

   25 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion . '}'
   39 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 189
    '}'  desplazar e ir al estado 190


estado 167

   29 interface_metodo_declaration: VOID ID . '(' parametro ')' ','

    '('  desplazar e ir al estado 191


estado 168

   34 metodos_clase: metodos_clase . metodo_declaration
   54 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase . '}'

    VOID  desplazar e ir al estado 4
    '}'   desplazar e ir al estado 192

    $default  reduce usando la regla 38 (funcion_declaration)

    metodo_declaration   ir al estado 164
    funcion_declaration  ir al estado 165


estado 169

  107 expresion_parentesis: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 107 (expresion_parentesis)


estado 170

  108 expresion_parentesis: termino '+' termino .
  112 termino: termino . '*' factor
  113        | termino . '/' factor

    '*'  desplazar e ir al estado 111
    '/'  desplazar e ir al estado 112

    $default  reduce usando la regla 108 (expresion_parentesis)


estado 171

  109 expresion_parentesis: termino '-' termino .
  112 termino: termino . '*' factor
  113        | termino . '/' factor

    '*'  desplazar e ir al estado 111
    '/'  desplazar e ir al estado 112

    $default  reduce usando la regla 109 (expresion_parentesis)


estado 172

    5 sentencias: sentencias . sentencia
   86 bloque_sentencias: '{' sentencias . '}'

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '}'        desplazar e ir al estado 193

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 55
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 173

   71 seleccion: IF '(' condicion ')' bloque_sentencias ELSE . bloque_sentencias END_IF
   74          | IF '(' condicion ')' bloque_sentencias ELSE . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 140

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 141
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 194
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 174

   72 seleccion: IF '(' condicion ')' bloque_sentencias END_IF .

    $default  reduce usando la regla 72 (seleccion)


estado 175

  103 expresion: expresion '+' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 195


estado 176

  104 expresion: expresion '-' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 196


estado 177

  102 expresion: tipo '(' expresion ')' .

    $default  reduce usando la regla 102 (expresion)


estado 178

   92 bucle_for: FOR IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 140

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 141
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 197
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 179

   95 argumento_bucle_for: constante ';' . constante ';' constante
   96                    | constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    constante  ir al estado 198


estado 180

   90 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 199


estado 181

   93 bucle_for: FOR ID IN '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 140

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 141
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 200
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 182

   94 bucle_for: FOR ID RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 140

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 141
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 201
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 183

   91 bucle_for: ID IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 140

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 141
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 202
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 184

   67 invocacion: ID '.' ID '(' argumentos ')' .

    $default  reduce usando la regla 67 (invocacion)


estado 185

   52 parametro: parametro ';' tipo ID .

    $default  reduce usando la regla 52 (parametro)


estado 186

   37 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo . '}'
   41 sentencias_metodo: sentencias_metodo . declaracion_variables ','
   42                  | sentencias_metodo . ejecutable ','
   43                  | sentencias_metodo . local_function_declaration ','

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    VOID    desplazar e ir al estado 203
    IF      desplazar e ir al estado 8
    PRINT   desplazar e ir al estado 9
    FOR     desplazar e ir al estado 10
    RETURN  desplazar e ir al estado 11
    ID      desplazar e ir al estado 204
    STRING  desplazar e ir al estado 13
    '}'     desplazar e ir al estado 205

    ejecutable                  ir al estado 206
    declaracion_variables       ir al estado 207
    local_function_declaration  ir al estado 208
    retorno                     ir al estado 26
    asignacion                  ir al estado 28
    invocacion                  ir al estado 29
    seleccion                   ir al estado 30
    print                       ir al estado 31
    bucle_for                   ir al estado 32
    acceso_atributo             ir al estado 33
    tipo                        ir al estado 34


estado 187

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion . '}'
   39 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 189
    '}'  desplazar e ir al estado 209


estado 188

   36 metodo_declaration: funcion_declaration ',' .

    $default  reduce usando la regla 36 (metodo_declaration)


estado 189

   39 herencia_composicion: herencia_composicion ID . ','

    ','  desplazar e ir al estado 210


estado 190

   25 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 25 (clase_declaration)


estado 191

   29 interface_metodo_declaration: VOID ID '(' . parametro ')' ','

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    ID      desplazar e ir al estado 95

    $default  reduce usando la regla 53 (parametro)

    parametro  ir al estado 211
    tipo       ir al estado 97


estado 192

   54 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}' .

    $default  reduce usando la regla 54 (distributed_method_implementation)


estado 193

   86 bloque_sentencias: '{' sentencias '}' .

    $default  reduce usando la regla 86 (bloque_sentencias)


estado 194

   71 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias . END_IF
   74          | IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias .

    END_IF  desplazar e ir al estado 212

    $default  reduce usando la regla 74 (seleccion)


estado 195

  103 expresion: expresion '+' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 103 (expresion)


estado 196

  104 expresion: expresion '-' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 104 (expresion)


estado 197

   92 bucle_for: FOR IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 92 (bucle_for)


estado 198

   95 argumento_bucle_for: constante ';' constante . ';' constante
   96                    | constante ';' constante .

    ';'  desplazar e ir al estado 213

    $default  reduce usando la regla 96 (argumento_bucle_for)


estado 199

   90 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 140

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 141
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 214
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 200

   93 bucle_for: FOR ID IN '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 93 (bucle_for)


estado 201

   94 bucle_for: FOR ID RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 94 (bucle_for)


estado 202

   91 bucle_for: ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 91 (bucle_for)


estado 203

   45 local_function_declaration: VOID . ID '(' parametro ')' '{' sentencias_funcion_local '}'

    ID  desplazar e ir al estado 215


estado 204

   60 asignacion: ID . asignador expresion
   61           | ID . '.' ID asignador expresion
   62           | ID . asignador
   63           | ID . '.' ID asignador
   66 invocacion: ID . '(' argumentos ')'
   67           | ID . '.' ID '(' argumentos ')'
   91 bucle_for: ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   99 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 43
    PLUS_EQUAL  desplazar e ir al estado 44
    '='         desplazar e ir al estado 45
    '.'         desplazar e ir al estado 46
    '('         desplazar e ir al estado 48

    asignador  ir al estado 51


estado 205

   37 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo '}' .

    $default  reduce usando la regla 37 (funcion_declaration)


estado 206

   42 sentencias_metodo: sentencias_metodo ejecutable . ','

    ','  desplazar e ir al estado 216


estado 207

   41 sentencias_metodo: sentencias_metodo declaracion_variables . ','

    ','  desplazar e ir al estado 217


estado 208

   43 sentencias_metodo: sentencias_metodo local_function_declaration . ','

    ','  desplazar e ir al estado 218


estado 209

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 30 (implement_declaration)


estado 210

   39 herencia_composicion: herencia_composicion ID ',' .

    $default  reduce usando la regla 39 (herencia_composicion)


estado 211

   29 interface_metodo_declaration: VOID ID '(' parametro . ')' ','
   52 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 125
    ')'  desplazar e ir al estado 219


estado 212

   71 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF .

    $default  reduce usando la regla 71 (seleccion)


estado 213

   95 argumento_bucle_for: constante ';' constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    constante  ir al estado 220


estado 214

   90 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 90 (bucle_for)


estado 215

   45 local_function_declaration: VOID ID . '(' parametro ')' '{' sentencias_funcion_local '}'

    '('  desplazar e ir al estado 221


estado 216

   42 sentencias_metodo: sentencias_metodo ejecutable ',' .

    $default  reduce usando la regla 42 (sentencias_metodo)


estado 217

   41 sentencias_metodo: sentencias_metodo declaracion_variables ',' .

    $default  reduce usando la regla 41 (sentencias_metodo)


estado 218

   43 sentencias_metodo: sentencias_metodo local_function_declaration ',' .

    $default  reduce usando la regla 43 (sentencias_metodo)


estado 219

   29 interface_metodo_declaration: VOID ID '(' parametro ')' . ','

    ','  desplazar e ir al estado 222


estado 220

   95 argumento_bucle_for: constante ';' constante ';' constante .

    $default  reduce usando la regla 95 (argumento_bucle_for)


estado 221

   45 local_function_declaration: VOID ID '(' . parametro ')' '{' sentencias_funcion_local '}'

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    ID      desplazar e ir al estado 95

    $default  reduce usando la regla 53 (parametro)

    parametro  ir al estado 223
    tipo       ir al estado 97


estado 222

   29 interface_metodo_declaration: VOID ID '(' parametro ')' ',' .

    $default  reduce usando la regla 29 (interface_metodo_declaration)


estado 223

   45 local_function_declaration: VOID ID '(' parametro . ')' '{' sentencias_funcion_local '}'
   52 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 125
    ')'  desplazar e ir al estado 224


estado 224

   45 local_function_declaration: VOID ID '(' parametro ')' . '{' sentencias_funcion_local '}'

    '{'  desplazar e ir al estado 225


estado 225

   45 local_function_declaration: VOID ID '(' parametro ')' '{' . sentencias_funcion_local '}'

    $default  reduce usando la regla 49 (sentencias_funcion_local)

    sentencias_funcion_local  ir al estado 226


estado 226

   45 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local . '}'
   46 sentencias_funcion_local: sentencias_funcion_local . declaracion_variables ','
   47                         | sentencias_funcion_local . ejecutable ','
   48                         | sentencias_funcion_local . local_function_declaration ','

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    VOID    desplazar e ir al estado 203
    IF      desplazar e ir al estado 8
    PRINT   desplazar e ir al estado 9
    FOR     desplazar e ir al estado 10
    RETURN  desplazar e ir al estado 11
    ID      desplazar e ir al estado 204
    STRING  desplazar e ir al estado 13
    '}'     desplazar e ir al estado 227

    ejecutable                  ir al estado 228
    declaracion_variables       ir al estado 229
    local_function_declaration  ir al estado 230
    retorno                     ir al estado 26
    asignacion                  ir al estado 28
    invocacion                  ir al estado 29
    seleccion                   ir al estado 30
    print                       ir al estado 31
    bucle_for                   ir al estado 32
    acceso_atributo             ir al estado 33
    tipo                        ir al estado 34


estado 227

   45 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local '}' .

    $default  reduce usando la regla 45 (local_function_declaration)


estado 228

   47 sentencias_funcion_local: sentencias_funcion_local ejecutable . ','

    ','  desplazar e ir al estado 231


estado 229

   46 sentencias_funcion_local: sentencias_funcion_local declaracion_variables . ','

    ','  desplazar e ir al estado 232


estado 230

   48 sentencias_funcion_local: sentencias_funcion_local local_function_declaration . ','

    ','  desplazar e ir al estado 233


estado 231

   47 sentencias_funcion_local: sentencias_funcion_local ejecutable ',' .

    $default  reduce usando la regla 47 (sentencias_funcion_local)


estado 232

   46 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ',' .

    $default  reduce usando la regla 46 (sentencias_funcion_local)


estado 233

   48 sentencias_funcion_local: sentencias_funcion_local local_function_declaration ',' .

    $default  reduce usando la regla 48 (sentencias_funcion_local)
