Gramática

    0 $accept: programa $end

    1 programa: '{' sentencias '}'
    2         | '{' sentencias
    3         | sentencias '}'

    4 sentencias: sentencia
    5           | sentencias sentencia

    6 sentencia: declarativa ','
    7          | ejecutable ','

    8 declarativa: declaracion_variables
    9            | clase_declaration
   10            | objeto_declaration
   11            | interface_declaration
   12            | implement_declaration
   13            | distributed_method_implementation
   14            | funcion_declaration

   15 ejecutable: asignacion
   16           | invocacion
   17           | seleccion
   18           | print
   19           | bucle_for
   20           | acceso_atributo
   21           | retorno

   22 declaracion_variables: tipo lista_variables

   23 lista_variables: lista_variables ';' ID
   24                | ID

   25 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}'

   26 interface_declaration: INTERFACE ID '{' interface_metodos '}'

   27 interface_metodos: interface_metodos interface_metodo_declaration
   28                  | /* vacío */

   29 interface_metodo_declaration: VOID ID '(' parametro ')' ','

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

   31 atributos: atributos atributo_declaration
   32          | /* vacío */

   33 atributo_declaration: declaracion_variables ','

   34 metodos_clase: metodos_clase metodo_declaration
   35              | /* vacío */

   36 metodo_declaration: funcion_declaration ','

   37 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo '}'
   38                    | /* vacío */

   39 herencia_composicion: herencia_composicion ID ','
   40                     | /* vacío */

   41 sentencias_metodo: sentencias_metodo declaracion_variables ','
   42                  | sentencias_metodo ejecutable ','
   43                  | sentencias_metodo local_function_declaration ','
   44                  | /* vacío */

   45 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local '}'

   46 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ','
   47                         | sentencias_funcion_local ejecutable ','
   48                         | sentencias_funcion_local local_function_declaration ','
   49                         | /* vacío */

   50 parametro: tipo ID
   51          | ID
   52          | parametro ';' tipo ID
   53          | /* vacío */

   54 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}'

   55 retorno: RETURN

   56 objeto_declaration: ID lista_objetos

   57 lista_objetos: lista_objetos ';' objeto
   58              | objeto

   59 objeto: ID

   60 asignacion: ID asignador expresion
   61           | ID '.' ID asignador expresion
   62           | ID asignador
   63           | ID '.' ID asignador
   64           | ID asignador '-'

   65 asignador: '='
   66          | PLUS_EQUAL

   67 invocacion: ID '(' argumentos ')'
   68           | ID '.' ID '(' argumentos ')'

   69 argumentos: expresion
   70           | argumentos ';' expresion
   71           | /* vacío */

   72 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   73          | IF '(' condicion ')' bloque_sentencias END_IF
   74          | IF '(' condicion ')' bloque_sentencias
   75          | IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias

   76 condicion: expresion comparador expresion
   77          | expresion comparador
   78          | comparador expresion
   79          | expresion

   80 comparador: '<'
   81           | '>'
   82           | LESS_EQUAL
   83           | GREATER_EQUAL
   84           | EQUAL
   85           | NOT_EQUAL

   86 bloque_sentencias: sentencia
   87                  | '{' sentencias '}'

   88 print: PRINT STRING
   89      | PRINT
   90      | STRING

   91 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   92          | ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   93          | FOR IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   94          | FOR ID IN '(' argumento_bucle_for ')' bloque_sentencias
   95          | FOR ID RANGE '(' argumento_bucle_for ')' bloque_sentencias

   96 argumento_bucle_for: constante ';' constante ';' constante
   97                    | constante ';' constante
   98                    | constante
   99                    | /* vacío */

  100 acceso_atributo: ID '.' ID

  101 expresion: expresion '+' termino
  102          | expresion '-' termino
  103          | tipo '(' expresion ')'
  104          | expresion '+' '(' expresion_parentesis ')'
  105          | expresion '-' '(' expresion_parentesis ')'
  106          | '(' expresion_parentesis ')'
  107          | termino

  108 expresion_parentesis: '(' expresion_parentesis ')'
  109                     | termino '+' termino
  110                     | termino '-' termino
  111                     | termino

  112 termino: factor
  113        | termino '*' factor
  114        | termino '/' factor

  115 factor: ID
  116       | '-' constante
  117       | constante

  118 constante: CTE_SHORT
  119          | CTE_DOUBLE
  120          | CTE_UINT

  121 tipo: SHORT
  122     | UINT
  123     | DOUBLE


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 29 37 45 67 68 72 73 74 75 91 92 93 94 95 103 104 105 106
    108
')' (41) 29 37 45 67 68 72 73 74 75 91 92 93 94 95 103 104 105 106
    108
'*' (42) 113
'+' (43) 101 104 109
',' (44) 6 7 29 33 36 39 41 42 43 46 47 48
'-' (45) 64 102 105 110 116
'.' (46) 61 63 68 100
'/' (47) 114
':' (58) 54
';' (59) 23 52 57 70 96 97
'<' (60) 80
'=' (61) 65
'>' (62) 81
'{' (123) 1 2 25 26 30 37 45 54 87
'}' (125) 1 3 25 26 30 37 45 54 87
error (256)
SHORT (258) 121
UINT (259) 122
DOUBLE (260) 123
VOID (261) 29 37 45
CLASS (262) 25 30
INTERFACE (263) 26
IMPLEMENT (264) 30
IMPL (265) 54
IF (266) 72 73 74 75
ELSE (267) 72 75
END_IF (268) 72 73
PRINT (269) 88 89
FOR (270) 54 91 93 94 95
IN (271) 91 92 93 94
RANGE (272) 91 92 93 95
RETURN (273) 55
LESS_EQUAL (274) 82
GREATER_EQUAL (275) 83
EQUAL (276) 84
NOT_EQUAL (277) 85
PLUS_EQUAL (278) 66
ID (279) 23 24 25 26 29 30 37 39 45 50 51 52 54 56 59 60 61 62 63 64
    67 68 91 92 94 95 100 115
STRING (280) 88 90
CTE_SHORT (281) 118
CTE_UINT (282) 120
CTE_DOUBLE (283) 119


No terminales con las reglas donde aparecen

$accept (44)
    en la izquierda: 0
programa (45)
    en la izquierda: 1 2 3, en la derecha: 0
sentencias (46)
    en la izquierda: 4 5, en la derecha: 1 2 3 5 87
sentencia (47)
    en la izquierda: 6 7, en la derecha: 4 5 86
declarativa (48)
    en la izquierda: 8 9 10 11 12 13 14, en la derecha: 6
ejecutable (49)
    en la izquierda: 15 16 17 18 19 20 21, en la derecha: 7 42 47
declaracion_variables (50)
    en la izquierda: 22, en la derecha: 8 33 41 46
lista_variables (51)
    en la izquierda: 23 24, en la derecha: 22 23
clase_declaration (52)
    en la izquierda: 25, en la derecha: 9
interface_declaration (53)
    en la izquierda: 26, en la derecha: 11
interface_metodos (54)
    en la izquierda: 27 28, en la derecha: 26 27
interface_metodo_declaration (55)
    en la izquierda: 29, en la derecha: 27
implement_declaration (56)
    en la izquierda: 30, en la derecha: 12
atributos (57)
    en la izquierda: 31 32, en la derecha: 25 31
atributo_declaration (58)
    en la izquierda: 33, en la derecha: 31
metodos_clase (59)
    en la izquierda: 34 35, en la derecha: 25 30 34 54
metodo_declaration (60)
    en la izquierda: 36, en la derecha: 34
funcion_declaration (61)
    en la izquierda: 37 38, en la derecha: 14 36
herencia_composicion (62)
    en la izquierda: 39 40, en la derecha: 25 30 39
sentencias_metodo (63)
    en la izquierda: 41 42 43 44, en la derecha: 37 41 42 43
local_function_declaration (64)
    en la izquierda: 45, en la derecha: 43 48
sentencias_funcion_local (65)
    en la izquierda: 46 47 48 49, en la derecha: 45 46 47 48
parametro (66)
    en la izquierda: 50 51 52 53, en la derecha: 29 37 45 52
distributed_method_implementation (67)
    en la izquierda: 54, en la derecha: 13
retorno (68)
    en la izquierda: 55, en la derecha: 21
objeto_declaration (69)
    en la izquierda: 56, en la derecha: 10
lista_objetos (70)
    en la izquierda: 57 58, en la derecha: 56 57
objeto (71)
    en la izquierda: 59, en la derecha: 57 58
asignacion (72)
    en la izquierda: 60 61 62 63 64, en la derecha: 15
asignador (73)
    en la izquierda: 65 66, en la derecha: 60 61 62 63 64
invocacion (74)
    en la izquierda: 67 68, en la derecha: 16
argumentos (75)
    en la izquierda: 69 70 71, en la derecha: 67 68 70
seleccion (76)
    en la izquierda: 72 73 74 75, en la derecha: 17
condicion (77)
    en la izquierda: 76 77 78 79, en la derecha: 72 73 74 75
comparador (78)
    en la izquierda: 80 81 82 83 84 85, en la derecha: 76 77 78
bloque_sentencias (79)
    en la izquierda: 86 87, en la derecha: 72 73 74 75 91 92 93 94
    95
print (80)
    en la izquierda: 88 89 90, en la derecha: 18
bucle_for (81)
    en la izquierda: 91 92 93 94 95, en la derecha: 19
argumento_bucle_for (82)
    en la izquierda: 96 97 98 99, en la derecha: 91 92 93 94 95
acceso_atributo (83)
    en la izquierda: 100, en la derecha: 20
expresion (84)
    en la izquierda: 101 102 103 104 105 106 107, en la derecha: 60
    61 69 70 76 77 78 79 101 102 103 104 105
expresion_parentesis (85)
    en la izquierda: 108 109 110 111, en la derecha: 104 105 106 108
termino (86)
    en la izquierda: 112 113 114, en la derecha: 101 102 107 109 110
    111 113 114
factor (87)
    en la izquierda: 115 116 117, en la derecha: 112 113 114
constante (88)
    en la izquierda: 118 119 120, en la derecha: 96 97 98 116 117
tipo (89)
    en la izquierda: 121 122 123, en la derecha: 22 50 52 103


estado 0

    0 $accept: . programa $end

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 14

    $default  reduce usando la regla 38 (funcion_declaration)

    programa                           ir al estado 15
    sentencias                         ir al estado 16
    sentencia                          ir al estado 17
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 1

  121 tipo: SHORT .

    $default  reduce usando la regla 121 (tipo)


estado 2

  122 tipo: UINT .

    $default  reduce usando la regla 122 (tipo)


estado 3

  123 tipo: DOUBLE .

    $default  reduce usando la regla 123 (tipo)


estado 4

   37 funcion_declaration: VOID . ID '(' parametro ')' '{' sentencias_metodo '}'

    ID  desplazar e ir al estado 35


estado 5

   25 clase_declaration: CLASS . ID '{' atributos metodos_clase herencia_composicion '}'
   30 implement_declaration: CLASS . ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 36


estado 6

   26 interface_declaration: INTERFACE . ID '{' interface_metodos '}'

    ID  desplazar e ir al estado 37


estado 7

   54 distributed_method_implementation: IMPL . FOR ID ':' '{' metodos_clase '}'

    FOR  desplazar e ir al estado 38


estado 8

   72 seleccion: IF . '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   73          | IF . '(' condicion ')' bloque_sentencias END_IF
   74          | IF . '(' condicion ')' bloque_sentencias
   75          | IF . '(' condicion ')' bloque_sentencias ELSE bloque_sentencias

    '('  desplazar e ir al estado 39


estado 9

   88 print: PRINT . STRING
   89      | PRINT .

    STRING  desplazar e ir al estado 40

    $default  reduce usando la regla 89 (print)


estado 10

   91 bucle_for: FOR . ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   93          | FOR . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   94          | FOR . ID IN '(' argumento_bucle_for ')' bloque_sentencias
   95          | FOR . ID RANGE '(' argumento_bucle_for ')' bloque_sentencias

    IN  desplazar e ir al estado 41
    ID  desplazar e ir al estado 42


estado 11

   55 retorno: RETURN .

    $default  reduce usando la regla 55 (retorno)


estado 12

   56 objeto_declaration: ID . lista_objetos
   60 asignacion: ID . asignador expresion
   61           | ID . '.' ID asignador expresion
   62           | ID . asignador
   63           | ID . '.' ID asignador
   64           | ID . asignador '-'
   67 invocacion: ID . '(' argumentos ')'
   68           | ID . '.' ID '(' argumentos ')'
   92 bucle_for: ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
  100 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 43
    PLUS_EQUAL  desplazar e ir al estado 44
    '='         desplazar e ir al estado 45
    '.'         desplazar e ir al estado 46
    ID          desplazar e ir al estado 47
    '('         desplazar e ir al estado 48

    lista_objetos  ir al estado 49
    objeto         ir al estado 50
    asignador      ir al estado 51


estado 13

   90 print: STRING .

    $default  reduce usando la regla 90 (print)


estado 14

    1 programa: '{' . sentencias '}'
    2         | '{' . sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencias                         ir al estado 52
    sentencia                          ir al estado 17
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 15

    0 $accept: programa . $end

    $end  desplazar e ir al estado 53


estado 16

    3 programa: sentencias . '}'
    5 sentencias: sentencias . sentencia

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '}'        desplazar e ir al estado 54

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 55
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 17

    4 sentencias: sentencia .

    $default  reduce usando la regla 4 (sentencias)


estado 18

    6 sentencia: declarativa . ','

    ','  desplazar e ir al estado 56


estado 19

    7 sentencia: ejecutable . ','

    ','  desplazar e ir al estado 57


estado 20

    8 declarativa: declaracion_variables .

    $default  reduce usando la regla 8 (declarativa)


estado 21

    9 declarativa: clase_declaration .

    $default  reduce usando la regla 9 (declarativa)


estado 22

   11 declarativa: interface_declaration .

    $default  reduce usando la regla 11 (declarativa)


estado 23

   12 declarativa: implement_declaration .

    $default  reduce usando la regla 12 (declarativa)


estado 24

   14 declarativa: funcion_declaration .

    $default  reduce usando la regla 14 (declarativa)


estado 25

   13 declarativa: distributed_method_implementation .

    $default  reduce usando la regla 13 (declarativa)


estado 26

   21 ejecutable: retorno .

    $default  reduce usando la regla 21 (ejecutable)


estado 27

   10 declarativa: objeto_declaration .

    $default  reduce usando la regla 10 (declarativa)


estado 28

   15 ejecutable: asignacion .

    $default  reduce usando la regla 15 (ejecutable)


estado 29

   16 ejecutable: invocacion .

    $default  reduce usando la regla 16 (ejecutable)


estado 30

   17 ejecutable: seleccion .

    $default  reduce usando la regla 17 (ejecutable)


estado 31

   18 ejecutable: print .

    $default  reduce usando la regla 18 (ejecutable)


estado 32

   19 ejecutable: bucle_for .

    $default  reduce usando la regla 19 (ejecutable)


estado 33

   20 ejecutable: acceso_atributo .

    $default  reduce usando la regla 20 (ejecutable)


estado 34

   22 declaracion_variables: tipo . lista_variables

    ID  desplazar e ir al estado 58

    lista_variables  ir al estado 59


estado 35

   37 funcion_declaration: VOID ID . '(' parametro ')' '{' sentencias_metodo '}'

    '('  desplazar e ir al estado 60


estado 36

   25 clase_declaration: CLASS ID . '{' atributos metodos_clase herencia_composicion '}'
   30 implement_declaration: CLASS ID . IMPLEMENT ID '{' metodos_clase herencia_composicion '}'

    IMPLEMENT  desplazar e ir al estado 61
    '{'        desplazar e ir al estado 62


estado 37

   26 interface_declaration: INTERFACE ID . '{' interface_metodos '}'

    '{'  desplazar e ir al estado 63


estado 38

   54 distributed_method_implementation: IMPL FOR . ID ':' '{' metodos_clase '}'

    ID  desplazar e ir al estado 64


estado 39

   72 seleccion: IF '(' . condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF
   73          | IF '(' . condicion ')' bloque_sentencias END_IF
   74          | IF '(' . condicion ')' bloque_sentencias
   75          | IF '(' . condicion ')' bloque_sentencias ELSE bloque_sentencias

    SHORT          desplazar e ir al estado 1
    UINT           desplazar e ir al estado 2
    DOUBLE         desplazar e ir al estado 3
    LESS_EQUAL     desplazar e ir al estado 65
    GREATER_EQUAL  desplazar e ir al estado 66
    EQUAL          desplazar e ir al estado 67
    NOT_EQUAL      desplazar e ir al estado 68
    ID             desplazar e ir al estado 69
    CTE_SHORT      desplazar e ir al estado 70
    CTE_UINT       desplazar e ir al estado 71
    CTE_DOUBLE     desplazar e ir al estado 72
    '('            desplazar e ir al estado 73
    '-'            desplazar e ir al estado 74
    '<'            desplazar e ir al estado 75
    '>'            desplazar e ir al estado 76

    condicion   ir al estado 77
    comparador  ir al estado 78
    expresion   ir al estado 79
    termino     ir al estado 80
    factor      ir al estado 81
    constante   ir al estado 82
    tipo        ir al estado 83


estado 40

   88 print: PRINT STRING .

    $default  reduce usando la regla 88 (print)


estado 41

   93 bucle_for: FOR IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 84


estado 42

   91 bucle_for: FOR ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
   94          | FOR ID . IN '(' argumento_bucle_for ')' bloque_sentencias
   95          | FOR ID . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    IN     desplazar e ir al estado 85
    RANGE  desplazar e ir al estado 86


estado 43

   92 bucle_for: ID IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 87


estado 44

   66 asignador: PLUS_EQUAL .

    $default  reduce usando la regla 66 (asignador)


estado 45

   65 asignador: '=' .

    $default  reduce usando la regla 65 (asignador)


estado 46

   61 asignacion: ID '.' . ID asignador expresion
   63           | ID '.' . ID asignador
   68 invocacion: ID '.' . ID '(' argumentos ')'
  100 acceso_atributo: ID '.' . ID

    ID  desplazar e ir al estado 88


estado 47

   59 objeto: ID .

    $default  reduce usando la regla 59 (objeto)


estado 48

   67 invocacion: ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74

    $default  reduce usando la regla 71 (argumentos)

    argumentos  ir al estado 89
    expresion   ir al estado 90
    termino     ir al estado 80
    factor      ir al estado 81
    constante   ir al estado 82
    tipo        ir al estado 83


estado 49

   56 objeto_declaration: ID lista_objetos .
   57 lista_objetos: lista_objetos . ';' objeto

    ';'  desplazar e ir al estado 91

    $default  reduce usando la regla 56 (objeto_declaration)


estado 50

   58 lista_objetos: objeto .

    $default  reduce usando la regla 58 (lista_objetos)


estado 51

   60 asignacion: ID asignador . expresion
   62           | ID asignador .
   64           | ID asignador . '-'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 92

    $default  reduce usando la regla 62 (asignacion)

    expresion  ir al estado 93
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 52

    1 programa: '{' sentencias . '}'
    2         | '{' sentencias .
    5 sentencias: sentencias . sentencia

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '}'        desplazar e ir al estado 94

    ','       reduce usando la regla 38 (funcion_declaration)
    $default  reduce usando la regla 2 (programa)

    sentencia                          ir al estado 55
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 53

    0 $accept: programa $end .

    $default  aceptar


estado 54

    3 programa: sentencias '}' .

    $default  reduce usando la regla 3 (programa)


estado 55

    5 sentencias: sentencias sentencia .

    $default  reduce usando la regla 5 (sentencias)


estado 56

    6 sentencia: declarativa ',' .

    $default  reduce usando la regla 6 (sentencia)


estado 57

    7 sentencia: ejecutable ',' .

    $default  reduce usando la regla 7 (sentencia)


estado 58

   24 lista_variables: ID .

    $default  reduce usando la regla 24 (lista_variables)


estado 59

   22 declaracion_variables: tipo lista_variables .
   23 lista_variables: lista_variables . ';' ID

    ';'  desplazar e ir al estado 95

    $default  reduce usando la regla 22 (declaracion_variables)


estado 60

   37 funcion_declaration: VOID ID '(' . parametro ')' '{' sentencias_metodo '}'

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    ID      desplazar e ir al estado 96

    $default  reduce usando la regla 53 (parametro)

    parametro  ir al estado 97
    tipo       ir al estado 98


estado 61

   30 implement_declaration: CLASS ID IMPLEMENT . ID '{' metodos_clase herencia_composicion '}'

    ID  desplazar e ir al estado 99


estado 62

   25 clase_declaration: CLASS ID '{' . atributos metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 32 (atributos)

    atributos  ir al estado 100


estado 63

   26 interface_declaration: INTERFACE ID '{' . interface_metodos '}'

    $default  reduce usando la regla 28 (interface_metodos)

    interface_metodos  ir al estado 101


estado 64

   54 distributed_method_implementation: IMPL FOR ID . ':' '{' metodos_clase '}'

    ':'  desplazar e ir al estado 102


estado 65

   82 comparador: LESS_EQUAL .

    $default  reduce usando la regla 82 (comparador)


estado 66

   83 comparador: GREATER_EQUAL .

    $default  reduce usando la regla 83 (comparador)


estado 67

   84 comparador: EQUAL .

    $default  reduce usando la regla 84 (comparador)


estado 68

   85 comparador: NOT_EQUAL .

    $default  reduce usando la regla 85 (comparador)


estado 69

  115 factor: ID .

    $default  reduce usando la regla 115 (factor)


estado 70

  118 constante: CTE_SHORT .

    $default  reduce usando la regla 118 (constante)


estado 71

  120 constante: CTE_UINT .

    $default  reduce usando la regla 120 (constante)


estado 72

  119 constante: CTE_DOUBLE .

    $default  reduce usando la regla 119 (constante)


estado 73

  106 expresion: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 103
    '-'         desplazar e ir al estado 74

    expresion_parentesis  ir al estado 104
    termino               ir al estado 105
    factor                ir al estado 81
    constante             ir al estado 82


estado 74

  116 factor: '-' . constante

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    constante  ir al estado 106


estado 75

   80 comparador: '<' .

    $default  reduce usando la regla 80 (comparador)


estado 76

   81 comparador: '>' .

    $default  reduce usando la regla 81 (comparador)


estado 77

   72 seleccion: IF '(' condicion . ')' bloque_sentencias ELSE bloque_sentencias END_IF
   73          | IF '(' condicion . ')' bloque_sentencias END_IF
   74          | IF '(' condicion . ')' bloque_sentencias
   75          | IF '(' condicion . ')' bloque_sentencias ELSE bloque_sentencias

    ')'  desplazar e ir al estado 107


estado 78

   78 condicion: comparador . expresion

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74

    expresion  ir al estado 108
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 79

   76 condicion: expresion . comparador expresion
   77          | expresion . comparador
   79          | expresion .
  101 expresion: expresion . '+' termino
  102          | expresion . '-' termino
  104          | expresion . '+' '(' expresion_parentesis ')'
  105          | expresion . '-' '(' expresion_parentesis ')'

    LESS_EQUAL     desplazar e ir al estado 65
    GREATER_EQUAL  desplazar e ir al estado 66
    EQUAL          desplazar e ir al estado 67
    NOT_EQUAL      desplazar e ir al estado 68
    '-'            desplazar e ir al estado 109
    '<'            desplazar e ir al estado 75
    '>'            desplazar e ir al estado 76
    '+'            desplazar e ir al estado 110

    $default  reduce usando la regla 79 (condicion)

    comparador  ir al estado 111


estado 80

  107 expresion: termino .
  113 termino: termino . '*' factor
  114        | termino . '/' factor

    '*'  desplazar e ir al estado 112
    '/'  desplazar e ir al estado 113

    $default  reduce usando la regla 107 (expresion)


estado 81

  112 termino: factor .

    $default  reduce usando la regla 112 (termino)


estado 82

  117 factor: constante .

    $default  reduce usando la regla 117 (factor)


estado 83

  103 expresion: tipo . '(' expresion ')'

    '('  desplazar e ir al estado 114


estado 84

   93 bucle_for: FOR IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 115


estado 85

   91 bucle_for: FOR ID IN . RANGE '(' argumento_bucle_for ')' bloque_sentencias
   94          | FOR ID IN . '(' argumento_bucle_for ')' bloque_sentencias

    RANGE  desplazar e ir al estado 116
    '('    desplazar e ir al estado 117


estado 86

   95 bucle_for: FOR ID RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 118


estado 87

   92 bucle_for: ID IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 119


estado 88

   61 asignacion: ID '.' ID . asignador expresion
   63           | ID '.' ID . asignador
   68 invocacion: ID '.' ID . '(' argumentos ')'
  100 acceso_atributo: ID '.' ID .

    PLUS_EQUAL  desplazar e ir al estado 44
    '='         desplazar e ir al estado 45
    '('         desplazar e ir al estado 120

    $default  reduce usando la regla 100 (acceso_atributo)

    asignador  ir al estado 121


estado 89

   67 invocacion: ID '(' argumentos . ')'
   70 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 122
    ')'  desplazar e ir al estado 123


estado 90

   69 argumentos: expresion .
  101 expresion: expresion . '+' termino
  102          | expresion . '-' termino
  104          | expresion . '+' '(' expresion_parentesis ')'
  105          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 109
    '+'  desplazar e ir al estado 110

    $default  reduce usando la regla 69 (argumentos)


estado 91

   57 lista_objetos: lista_objetos ';' . objeto

    ID  desplazar e ir al estado 47

    objeto  ir al estado 124


estado 92

   64 asignacion: ID asignador '-' .
  116 factor: '-' . constante

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 64 (asignacion)

    constante  ir al estado 106


estado 93

   60 asignacion: ID asignador expresion .
  101 expresion: expresion . '+' termino
  102          | expresion . '-' termino
  104          | expresion . '+' '(' expresion_parentesis ')'
  105          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 109
    '+'  desplazar e ir al estado 110

    $default  reduce usando la regla 60 (asignacion)


estado 94

    1 programa: '{' sentencias '}' .

    $default  reduce usando la regla 1 (programa)


estado 95

   23 lista_variables: lista_variables ';' . ID

    ID  desplazar e ir al estado 125


estado 96

   51 parametro: ID .

    $default  reduce usando la regla 51 (parametro)


estado 97

   37 funcion_declaration: VOID ID '(' parametro . ')' '{' sentencias_metodo '}'
   52 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 126
    ')'  desplazar e ir al estado 127


estado 98

   50 parametro: tipo . ID

    ID  desplazar e ir al estado 128


estado 99

   30 implement_declaration: CLASS ID IMPLEMENT ID . '{' metodos_clase herencia_composicion '}'

    '{'  desplazar e ir al estado 129


estado 100

   25 clase_declaration: CLASS ID '{' atributos . metodos_clase herencia_composicion '}'
   31 atributos: atributos . atributo_declaration

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3

    $default  reduce usando la regla 35 (metodos_clase)

    declaracion_variables  ir al estado 130
    atributo_declaration   ir al estado 131
    metodos_clase          ir al estado 132
    tipo                   ir al estado 34


estado 101

   26 interface_declaration: INTERFACE ID '{' interface_metodos . '}'
   27 interface_metodos: interface_metodos . interface_metodo_declaration

    VOID  desplazar e ir al estado 133
    '}'   desplazar e ir al estado 134

    interface_metodo_declaration  ir al estado 135


estado 102

   54 distributed_method_implementation: IMPL FOR ID ':' . '{' metodos_clase '}'

    '{'  desplazar e ir al estado 136


estado 103

  108 expresion_parentesis: '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 103
    '-'         desplazar e ir al estado 74

    expresion_parentesis  ir al estado 137
    termino               ir al estado 105
    factor                ir al estado 81
    constante             ir al estado 82


estado 104

  106 expresion: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 138


estado 105

  109 expresion_parentesis: termino . '+' termino
  110                     | termino . '-' termino
  111                     | termino .
  113 termino: termino . '*' factor
  114        | termino . '/' factor

    '-'  desplazar e ir al estado 139
    '+'  desplazar e ir al estado 140
    '*'  desplazar e ir al estado 112
    '/'  desplazar e ir al estado 113

    $default  reduce usando la regla 111 (expresion_parentesis)


estado 106

  116 factor: '-' constante .

    $default  reduce usando la regla 116 (factor)


estado 107

   72 seleccion: IF '(' condicion ')' . bloque_sentencias ELSE bloque_sentencias END_IF
   73          | IF '(' condicion ')' . bloque_sentencias END_IF
   74          | IF '(' condicion ')' . bloque_sentencias
   75          | IF '(' condicion ')' . bloque_sentencias ELSE bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 141

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 142
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 143
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 108

   78 condicion: comparador expresion .
  101 expresion: expresion . '+' termino
  102          | expresion . '-' termino
  104          | expresion . '+' '(' expresion_parentesis ')'
  105          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 109
    '+'  desplazar e ir al estado 110

    $default  reduce usando la regla 78 (condicion)


estado 109

  102 expresion: expresion '-' . termino
  105          | expresion '-' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 144
    '-'         desplazar e ir al estado 74

    termino    ir al estado 145
    factor     ir al estado 81
    constante  ir al estado 82


estado 110

  101 expresion: expresion '+' . termino
  104          | expresion '+' . '(' expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 146
    '-'         desplazar e ir al estado 74

    termino    ir al estado 147
    factor     ir al estado 81
    constante  ir al estado 82


estado 111

   76 condicion: expresion comparador . expresion
   77          | expresion comparador .

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74

    $default  reduce usando la regla 77 (condicion)

    expresion  ir al estado 148
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 112

  113 termino: termino '*' . factor

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '-'         desplazar e ir al estado 74

    factor     ir al estado 149
    constante  ir al estado 82


estado 113

  114 termino: termino '/' . factor

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '-'         desplazar e ir al estado 74

    factor     ir al estado 150
    constante  ir al estado 82


estado 114

  103 expresion: tipo '(' . expresion ')'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74

    expresion  ir al estado 151
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 115

   93 bucle_for: FOR IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 99 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 152
    constante            ir al estado 153


estado 116

   91 bucle_for: FOR ID IN RANGE . '(' argumento_bucle_for ')' bloque_sentencias

    '('  desplazar e ir al estado 154


estado 117

   94 bucle_for: FOR ID IN '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 99 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 155
    constante            ir al estado 153


estado 118

   95 bucle_for: FOR ID RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 99 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 156
    constante            ir al estado 153


estado 119

   92 bucle_for: ID IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 99 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 157
    constante            ir al estado 153


estado 120

   68 invocacion: ID '.' ID '(' . argumentos ')'

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74

    $default  reduce usando la regla 71 (argumentos)

    argumentos  ir al estado 158
    expresion   ir al estado 90
    termino     ir al estado 80
    factor      ir al estado 81
    constante   ir al estado 82
    tipo        ir al estado 83


estado 121

   61 asignacion: ID '.' ID asignador . expresion
   63           | ID '.' ID asignador .

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74

    $default  reduce usando la regla 63 (asignacion)

    expresion  ir al estado 159
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 122

   70 argumentos: argumentos ';' . expresion

    SHORT       desplazar e ir al estado 1
    UINT        desplazar e ir al estado 2
    DOUBLE      desplazar e ir al estado 3
    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 73
    '-'         desplazar e ir al estado 74

    expresion  ir al estado 160
    termino    ir al estado 80
    factor     ir al estado 81
    constante  ir al estado 82
    tipo       ir al estado 83


estado 123

   67 invocacion: ID '(' argumentos ')' .

    $default  reduce usando la regla 67 (invocacion)


estado 124

   57 lista_objetos: lista_objetos ';' objeto .

    $default  reduce usando la regla 57 (lista_objetos)


estado 125

   23 lista_variables: lista_variables ';' ID .

    $default  reduce usando la regla 23 (lista_variables)


estado 126

   52 parametro: parametro ';' . tipo ID

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3

    tipo  ir al estado 161


estado 127

   37 funcion_declaration: VOID ID '(' parametro ')' . '{' sentencias_metodo '}'

    '{'  desplazar e ir al estado 162


estado 128

   50 parametro: tipo ID .

    $default  reduce usando la regla 50 (parametro)


estado 129

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' . metodos_clase herencia_composicion '}'

    $default  reduce usando la regla 35 (metodos_clase)

    metodos_clase  ir al estado 163


estado 130

   33 atributo_declaration: declaracion_variables . ','

    ','  desplazar e ir al estado 164


estado 131

   31 atributos: atributos atributo_declaration .

    $default  reduce usando la regla 31 (atributos)


estado 132

   25 clase_declaration: CLASS ID '{' atributos metodos_clase . herencia_composicion '}'
   34 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 4

    ','       reduce usando la regla 38 (funcion_declaration)
    $default  reduce usando la regla 40 (herencia_composicion)

    metodo_declaration    ir al estado 165
    funcion_declaration   ir al estado 166
    herencia_composicion  ir al estado 167


estado 133

   29 interface_metodo_declaration: VOID . ID '(' parametro ')' ','

    ID  desplazar e ir al estado 168


estado 134

   26 interface_declaration: INTERFACE ID '{' interface_metodos '}' .

    $default  reduce usando la regla 26 (interface_declaration)


estado 135

   27 interface_metodos: interface_metodos interface_metodo_declaration .

    $default  reduce usando la regla 27 (interface_metodos)


estado 136

   54 distributed_method_implementation: IMPL FOR ID ':' '{' . metodos_clase '}'

    $default  reduce usando la regla 35 (metodos_clase)

    metodos_clase  ir al estado 169


estado 137

  108 expresion_parentesis: '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 170


estado 138

  106 expresion: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 106 (expresion)


estado 139

  110 expresion_parentesis: termino '-' . termino

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '-'         desplazar e ir al estado 74

    termino    ir al estado 171
    factor     ir al estado 81
    constante  ir al estado 82


estado 140

  109 expresion_parentesis: termino '+' . termino

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '-'         desplazar e ir al estado 74

    termino    ir al estado 172
    factor     ir al estado 81
    constante  ir al estado 82


estado 141

   87 bloque_sentencias: '{' . sentencias '}'

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencias                         ir al estado 173
    sentencia                          ir al estado 17
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 142

   86 bloque_sentencias: sentencia .

    $default  reduce usando la regla 86 (bloque_sentencias)


estado 143

   72 seleccion: IF '(' condicion ')' bloque_sentencias . ELSE bloque_sentencias END_IF
   73          | IF '(' condicion ')' bloque_sentencias . END_IF
   74          | IF '(' condicion ')' bloque_sentencias .
   75          | IF '(' condicion ')' bloque_sentencias . ELSE bloque_sentencias

    ELSE    desplazar e ir al estado 174
    END_IF  desplazar e ir al estado 175

    $default  reduce usando la regla 74 (seleccion)


estado 144

  105 expresion: expresion '-' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 103
    '-'         desplazar e ir al estado 74

    expresion_parentesis  ir al estado 176
    termino               ir al estado 105
    factor                ir al estado 81
    constante             ir al estado 82


estado 145

  102 expresion: expresion '-' termino .
  113 termino: termino . '*' factor
  114        | termino . '/' factor

    '*'  desplazar e ir al estado 112
    '/'  desplazar e ir al estado 113

    $default  reduce usando la regla 102 (expresion)


estado 146

  104 expresion: expresion '+' '(' . expresion_parentesis ')'

    ID          desplazar e ir al estado 69
    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72
    '('         desplazar e ir al estado 103
    '-'         desplazar e ir al estado 74

    expresion_parentesis  ir al estado 177
    termino               ir al estado 105
    factor                ir al estado 81
    constante             ir al estado 82


estado 147

  101 expresion: expresion '+' termino .
  113 termino: termino . '*' factor
  114        | termino . '/' factor

    '*'  desplazar e ir al estado 112
    '/'  desplazar e ir al estado 113

    $default  reduce usando la regla 101 (expresion)


estado 148

   76 condicion: expresion comparador expresion .
  101 expresion: expresion . '+' termino
  102          | expresion . '-' termino
  104          | expresion . '+' '(' expresion_parentesis ')'
  105          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 109
    '+'  desplazar e ir al estado 110

    $default  reduce usando la regla 76 (condicion)


estado 149

  113 termino: termino '*' factor .

    $default  reduce usando la regla 113 (termino)


estado 150

  114 termino: termino '/' factor .

    $default  reduce usando la regla 114 (termino)


estado 151

  101 expresion: expresion . '+' termino
  102          | expresion . '-' termino
  103          | tipo '(' expresion . ')'
  104          | expresion . '+' '(' expresion_parentesis ')'
  105          | expresion . '-' '(' expresion_parentesis ')'

    ')'  desplazar e ir al estado 178
    '-'  desplazar e ir al estado 109
    '+'  desplazar e ir al estado 110


estado 152

   93 bucle_for: FOR IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 179


estado 153

   96 argumento_bucle_for: constante . ';' constante ';' constante
   97                    | constante . ';' constante
   98                    | constante .

    ';'  desplazar e ir al estado 180

    $default  reduce usando la regla 98 (argumento_bucle_for)


estado 154

   91 bucle_for: FOR ID IN RANGE '(' . argumento_bucle_for ')' bloque_sentencias

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    $default  reduce usando la regla 99 (argumento_bucle_for)

    argumento_bucle_for  ir al estado 181
    constante            ir al estado 153


estado 155

   94 bucle_for: FOR ID IN '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 182


estado 156

   95 bucle_for: FOR ID RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 183


estado 157

   92 bucle_for: ID IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 184


estado 158

   68 invocacion: ID '.' ID '(' argumentos . ')'
   70 argumentos: argumentos . ';' expresion

    ';'  desplazar e ir al estado 122
    ')'  desplazar e ir al estado 185


estado 159

   61 asignacion: ID '.' ID asignador expresion .
  101 expresion: expresion . '+' termino
  102          | expresion . '-' termino
  104          | expresion . '+' '(' expresion_parentesis ')'
  105          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 109
    '+'  desplazar e ir al estado 110

    $default  reduce usando la regla 61 (asignacion)


estado 160

   70 argumentos: argumentos ';' expresion .
  101 expresion: expresion . '+' termino
  102          | expresion . '-' termino
  104          | expresion . '+' '(' expresion_parentesis ')'
  105          | expresion . '-' '(' expresion_parentesis ')'

    '-'  desplazar e ir al estado 109
    '+'  desplazar e ir al estado 110

    $default  reduce usando la regla 70 (argumentos)


estado 161

   52 parametro: parametro ';' tipo . ID

    ID  desplazar e ir al estado 186


estado 162

   37 funcion_declaration: VOID ID '(' parametro ')' '{' . sentencias_metodo '}'

    $default  reduce usando la regla 44 (sentencias_metodo)

    sentencias_metodo  ir al estado 187


estado 163

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase . herencia_composicion '}'
   34 metodos_clase: metodos_clase . metodo_declaration

    VOID  desplazar e ir al estado 4

    ','       reduce usando la regla 38 (funcion_declaration)
    $default  reduce usando la regla 40 (herencia_composicion)

    metodo_declaration    ir al estado 165
    funcion_declaration   ir al estado 166
    herencia_composicion  ir al estado 188


estado 164

   33 atributo_declaration: declaracion_variables ',' .

    $default  reduce usando la regla 33 (atributo_declaration)


estado 165

   34 metodos_clase: metodos_clase metodo_declaration .

    $default  reduce usando la regla 34 (metodos_clase)


estado 166

   36 metodo_declaration: funcion_declaration . ','

    ','  desplazar e ir al estado 189


estado 167

   25 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion . '}'
   39 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 190
    '}'  desplazar e ir al estado 191


estado 168

   29 interface_metodo_declaration: VOID ID . '(' parametro ')' ','

    '('  desplazar e ir al estado 192


estado 169

   34 metodos_clase: metodos_clase . metodo_declaration
   54 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase . '}'

    VOID  desplazar e ir al estado 4
    '}'   desplazar e ir al estado 193

    $default  reduce usando la regla 38 (funcion_declaration)

    metodo_declaration   ir al estado 165
    funcion_declaration  ir al estado 166


estado 170

  108 expresion_parentesis: '(' expresion_parentesis ')' .

    $default  reduce usando la regla 108 (expresion_parentesis)


estado 171

  110 expresion_parentesis: termino '-' termino .
  113 termino: termino . '*' factor
  114        | termino . '/' factor

    '*'  desplazar e ir al estado 112
    '/'  desplazar e ir al estado 113

    $default  reduce usando la regla 110 (expresion_parentesis)


estado 172

  109 expresion_parentesis: termino '+' termino .
  113 termino: termino . '*' factor
  114        | termino . '/' factor

    '*'  desplazar e ir al estado 112
    '/'  desplazar e ir al estado 113

    $default  reduce usando la regla 109 (expresion_parentesis)


estado 173

    5 sentencias: sentencias . sentencia
   87 bloque_sentencias: '{' sentencias . '}'

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '}'        desplazar e ir al estado 194

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 55
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 174

   72 seleccion: IF '(' condicion ')' bloque_sentencias ELSE . bloque_sentencias END_IF
   75          | IF '(' condicion ')' bloque_sentencias ELSE . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 141

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 142
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 195
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 175

   73 seleccion: IF '(' condicion ')' bloque_sentencias END_IF .

    $default  reduce usando la regla 73 (seleccion)


estado 176

  105 expresion: expresion '-' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 196


estado 177

  104 expresion: expresion '+' '(' expresion_parentesis . ')'

    ')'  desplazar e ir al estado 197


estado 178

  103 expresion: tipo '(' expresion ')' .

    $default  reduce usando la regla 103 (expresion)


estado 179

   93 bucle_for: FOR IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 141

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 142
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 198
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 180

   96 argumento_bucle_for: constante ';' . constante ';' constante
   97                    | constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    constante  ir al estado 199


estado 181

   91 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for . ')' bloque_sentencias

    ')'  desplazar e ir al estado 200


estado 182

   94 bucle_for: FOR ID IN '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 141

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 142
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 201
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 183

   95 bucle_for: FOR ID RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 141

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 142
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 202
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 184

   92 bucle_for: ID IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 141

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 142
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 203
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 185

   68 invocacion: ID '.' ID '(' argumentos ')' .

    $default  reduce usando la regla 68 (invocacion)


estado 186

   52 parametro: parametro ';' tipo ID .

    $default  reduce usando la regla 52 (parametro)


estado 187

   37 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo . '}'
   41 sentencias_metodo: sentencias_metodo . declaracion_variables ','
   42                  | sentencias_metodo . ejecutable ','
   43                  | sentencias_metodo . local_function_declaration ','

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    VOID    desplazar e ir al estado 204
    IF      desplazar e ir al estado 8
    PRINT   desplazar e ir al estado 9
    FOR     desplazar e ir al estado 10
    RETURN  desplazar e ir al estado 11
    ID      desplazar e ir al estado 205
    STRING  desplazar e ir al estado 13
    '}'     desplazar e ir al estado 206

    ejecutable                  ir al estado 207
    declaracion_variables       ir al estado 208
    local_function_declaration  ir al estado 209
    retorno                     ir al estado 26
    asignacion                  ir al estado 28
    invocacion                  ir al estado 29
    seleccion                   ir al estado 30
    print                       ir al estado 31
    bucle_for                   ir al estado 32
    acceso_atributo             ir al estado 33
    tipo                        ir al estado 34


estado 188

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion . '}'
   39 herencia_composicion: herencia_composicion . ID ','

    ID   desplazar e ir al estado 190
    '}'  desplazar e ir al estado 210


estado 189

   36 metodo_declaration: funcion_declaration ',' .

    $default  reduce usando la regla 36 (metodo_declaration)


estado 190

   39 herencia_composicion: herencia_composicion ID . ','

    ','  desplazar e ir al estado 211


estado 191

   25 clase_declaration: CLASS ID '{' atributos metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 25 (clase_declaration)


estado 192

   29 interface_metodo_declaration: VOID ID '(' . parametro ')' ','

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    ID      desplazar e ir al estado 96

    $default  reduce usando la regla 53 (parametro)

    parametro  ir al estado 212
    tipo       ir al estado 98


estado 193

   54 distributed_method_implementation: IMPL FOR ID ':' '{' metodos_clase '}' .

    $default  reduce usando la regla 54 (distributed_method_implementation)


estado 194

   87 bloque_sentencias: '{' sentencias '}' .

    $default  reduce usando la regla 87 (bloque_sentencias)


estado 195

   72 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias . END_IF
   75          | IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias .

    END_IF  desplazar e ir al estado 213

    $default  reduce usando la regla 75 (seleccion)


estado 196

  105 expresion: expresion '-' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 105 (expresion)


estado 197

  104 expresion: expresion '+' '(' expresion_parentesis ')' .

    $default  reduce usando la regla 104 (expresion)


estado 198

   93 bucle_for: FOR IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 93 (bucle_for)


estado 199

   96 argumento_bucle_for: constante ';' constante . ';' constante
   97                    | constante ';' constante .

    ';'  desplazar e ir al estado 214

    $default  reduce usando la regla 97 (argumento_bucle_for)


estado 200

   91 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' . bloque_sentencias

    SHORT      desplazar e ir al estado 1
    UINT       desplazar e ir al estado 2
    DOUBLE     desplazar e ir al estado 3
    VOID       desplazar e ir al estado 4
    CLASS      desplazar e ir al estado 5
    INTERFACE  desplazar e ir al estado 6
    IMPL       desplazar e ir al estado 7
    IF         desplazar e ir al estado 8
    PRINT      desplazar e ir al estado 9
    FOR        desplazar e ir al estado 10
    RETURN     desplazar e ir al estado 11
    ID         desplazar e ir al estado 12
    STRING     desplazar e ir al estado 13
    '{'        desplazar e ir al estado 141

    $default  reduce usando la regla 38 (funcion_declaration)

    sentencia                          ir al estado 142
    declarativa                        ir al estado 18
    ejecutable                         ir al estado 19
    declaracion_variables              ir al estado 20
    clase_declaration                  ir al estado 21
    interface_declaration              ir al estado 22
    implement_declaration              ir al estado 23
    funcion_declaration                ir al estado 24
    distributed_method_implementation  ir al estado 25
    retorno                            ir al estado 26
    objeto_declaration                 ir al estado 27
    asignacion                         ir al estado 28
    invocacion                         ir al estado 29
    seleccion                          ir al estado 30
    bloque_sentencias                  ir al estado 215
    print                              ir al estado 31
    bucle_for                          ir al estado 32
    acceso_atributo                    ir al estado 33
    tipo                               ir al estado 34


estado 201

   94 bucle_for: FOR ID IN '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 94 (bucle_for)


estado 202

   95 bucle_for: FOR ID RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 95 (bucle_for)


estado 203

   92 bucle_for: ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 92 (bucle_for)


estado 204

   45 local_function_declaration: VOID . ID '(' parametro ')' '{' sentencias_funcion_local '}'

    ID  desplazar e ir al estado 216


estado 205

   60 asignacion: ID . asignador expresion
   61           | ID . '.' ID asignador expresion
   62           | ID . asignador
   63           | ID . '.' ID asignador
   64           | ID . asignador '-'
   67 invocacion: ID . '(' argumentos ')'
   68           | ID . '.' ID '(' argumentos ')'
   92 bucle_for: ID . IN RANGE '(' argumento_bucle_for ')' bloque_sentencias
  100 acceso_atributo: ID . '.' ID

    IN          desplazar e ir al estado 43
    PLUS_EQUAL  desplazar e ir al estado 44
    '='         desplazar e ir al estado 45
    '.'         desplazar e ir al estado 46
    '('         desplazar e ir al estado 48

    asignador  ir al estado 51


estado 206

   37 funcion_declaration: VOID ID '(' parametro ')' '{' sentencias_metodo '}' .

    $default  reduce usando la regla 37 (funcion_declaration)


estado 207

   42 sentencias_metodo: sentencias_metodo ejecutable . ','

    ','  desplazar e ir al estado 217


estado 208

   41 sentencias_metodo: sentencias_metodo declaracion_variables . ','

    ','  desplazar e ir al estado 218


estado 209

   43 sentencias_metodo: sentencias_metodo local_function_declaration . ','

    ','  desplazar e ir al estado 219


estado 210

   30 implement_declaration: CLASS ID IMPLEMENT ID '{' metodos_clase herencia_composicion '}' .

    $default  reduce usando la regla 30 (implement_declaration)


estado 211

   39 herencia_composicion: herencia_composicion ID ',' .

    $default  reduce usando la regla 39 (herencia_composicion)


estado 212

   29 interface_metodo_declaration: VOID ID '(' parametro . ')' ','
   52 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 126
    ')'  desplazar e ir al estado 220


estado 213

   72 seleccion: IF '(' condicion ')' bloque_sentencias ELSE bloque_sentencias END_IF .

    $default  reduce usando la regla 72 (seleccion)


estado 214

   96 argumento_bucle_for: constante ';' constante ';' . constante

    CTE_SHORT   desplazar e ir al estado 70
    CTE_UINT    desplazar e ir al estado 71
    CTE_DOUBLE  desplazar e ir al estado 72

    constante  ir al estado 221


estado 215

   91 bucle_for: FOR ID IN RANGE '(' argumento_bucle_for ')' bloque_sentencias .

    $default  reduce usando la regla 91 (bucle_for)


estado 216

   45 local_function_declaration: VOID ID . '(' parametro ')' '{' sentencias_funcion_local '}'

    '('  desplazar e ir al estado 222


estado 217

   42 sentencias_metodo: sentencias_metodo ejecutable ',' .

    $default  reduce usando la regla 42 (sentencias_metodo)


estado 218

   41 sentencias_metodo: sentencias_metodo declaracion_variables ',' .

    $default  reduce usando la regla 41 (sentencias_metodo)


estado 219

   43 sentencias_metodo: sentencias_metodo local_function_declaration ',' .

    $default  reduce usando la regla 43 (sentencias_metodo)


estado 220

   29 interface_metodo_declaration: VOID ID '(' parametro ')' . ','

    ','  desplazar e ir al estado 223


estado 221

   96 argumento_bucle_for: constante ';' constante ';' constante .

    $default  reduce usando la regla 96 (argumento_bucle_for)


estado 222

   45 local_function_declaration: VOID ID '(' . parametro ')' '{' sentencias_funcion_local '}'

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    ID      desplazar e ir al estado 96

    $default  reduce usando la regla 53 (parametro)

    parametro  ir al estado 224
    tipo       ir al estado 98


estado 223

   29 interface_metodo_declaration: VOID ID '(' parametro ')' ',' .

    $default  reduce usando la regla 29 (interface_metodo_declaration)


estado 224

   45 local_function_declaration: VOID ID '(' parametro . ')' '{' sentencias_funcion_local '}'
   52 parametro: parametro . ';' tipo ID

    ';'  desplazar e ir al estado 126
    ')'  desplazar e ir al estado 225


estado 225

   45 local_function_declaration: VOID ID '(' parametro ')' . '{' sentencias_funcion_local '}'

    '{'  desplazar e ir al estado 226


estado 226

   45 local_function_declaration: VOID ID '(' parametro ')' '{' . sentencias_funcion_local '}'

    $default  reduce usando la regla 49 (sentencias_funcion_local)

    sentencias_funcion_local  ir al estado 227


estado 227

   45 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local . '}'
   46 sentencias_funcion_local: sentencias_funcion_local . declaracion_variables ','
   47                         | sentencias_funcion_local . ejecutable ','
   48                         | sentencias_funcion_local . local_function_declaration ','

    SHORT   desplazar e ir al estado 1
    UINT    desplazar e ir al estado 2
    DOUBLE  desplazar e ir al estado 3
    VOID    desplazar e ir al estado 204
    IF      desplazar e ir al estado 8
    PRINT   desplazar e ir al estado 9
    FOR     desplazar e ir al estado 10
    RETURN  desplazar e ir al estado 11
    ID      desplazar e ir al estado 205
    STRING  desplazar e ir al estado 13
    '}'     desplazar e ir al estado 228

    ejecutable                  ir al estado 229
    declaracion_variables       ir al estado 230
    local_function_declaration  ir al estado 231
    retorno                     ir al estado 26
    asignacion                  ir al estado 28
    invocacion                  ir al estado 29
    seleccion                   ir al estado 30
    print                       ir al estado 31
    bucle_for                   ir al estado 32
    acceso_atributo             ir al estado 33
    tipo                        ir al estado 34


estado 228

   45 local_function_declaration: VOID ID '(' parametro ')' '{' sentencias_funcion_local '}' .

    $default  reduce usando la regla 45 (local_function_declaration)


estado 229

   47 sentencias_funcion_local: sentencias_funcion_local ejecutable . ','

    ','  desplazar e ir al estado 232


estado 230

   46 sentencias_funcion_local: sentencias_funcion_local declaracion_variables . ','

    ','  desplazar e ir al estado 233


estado 231

   48 sentencias_funcion_local: sentencias_funcion_local local_function_declaration . ','

    ','  desplazar e ir al estado 234


estado 232

   47 sentencias_funcion_local: sentencias_funcion_local ejecutable ',' .

    $default  reduce usando la regla 47 (sentencias_funcion_local)


estado 233

   46 sentencias_funcion_local: sentencias_funcion_local declaracion_variables ',' .

    $default  reduce usando la regla 46 (sentencias_funcion_local)


estado 234

   48 sentencias_funcion_local: sentencias_funcion_local local_function_declaration ',' .

    $default  reduce usando la regla 48 (sentencias_funcion_local)
